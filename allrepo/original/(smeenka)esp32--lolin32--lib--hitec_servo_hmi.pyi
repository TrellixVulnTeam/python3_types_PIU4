# (generated with --quick)

from typing import Any

ALL_SERVOS: Any
BATTERY: Any
EEPROM_ID: Any
EXIT: Any
GAIN: Any
ONOFF: Any
POSITION: Any
READ_ADC: Any
READ_DATA: Any
READ_EEPROM: Any
UART: Any
UART2_CONFIG0_REG: Any
UART_RXD_INV: Any
UART_TXD_INV: Any
VERSION_ID: Any
WRITE_DATA: Any
WRITE_EEPROM: Any
json: module
log: logging.Logger
logging: module
time: Any

class HitecServo:
    driver: Any
    id: Any
    pos: int
    speed: Any
    def __init__(self, driver, id) -> None: ...
    def enable(self, onoff) -> None: ...
    def getPosition(self) -> None: ...
    def setGain(self, gain) -> None: ...
    def setPosition(self, pos = ...) -> None: ...
    def setSpeed(self, speed = ...) -> None: ...

class HitecServoDriver:
    I: Any
    V: Any
    id: Any
    positions: list
    rbuf: bytearray
    ri: int
    sbuf: bytearray
    servos: list
    uart: Any
    version: Any
    def __init__(self, port, max = ...) -> None: ...
    def allExit(self) -> None: ...
    def allGain(self, gain) -> None: ...
    def allMove(self, pos) -> None: ...
    def allOff(self) -> None: ...
    def allOn(self) -> None: ...
    def checkStream(self) -> None: ...
    def getPosJson(self) -> str: ...
    def getServo(self, index) -> Any: ...
    def getVersionId(self) -> None: ...
    def getVoltageAmp(self) -> None: ...
    def parseFrame(self, buf) -> None: ...
    def readEeprom(self, addr) -> None: ...
    def register(self, servo) -> None: ...
    def sendCommand(self, command, p1 = ..., p2 = ...) -> None: ...
    def setId(self, newId) -> None: ...
    def setPosition(self, index, pos) -> None: ...
    def setSpeed(self, index, speed) -> None: ...
