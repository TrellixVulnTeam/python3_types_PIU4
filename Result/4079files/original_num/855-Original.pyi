# (generated with --quick)

import asyncio.queues
from typing import Any, Coroutine

asyncio: module
iterm2: Any

class LayoutChangeMonitor:
    _LayoutChangeMonitor__connection: Any
    _LayoutChangeMonitor__queue: asyncio.queues.Queue[nothing]
    _LayoutChangeMonitor__token: Any
    __doc__: str
    def __aenter__(self) -> Coroutine[Any, Any, LayoutChangeMonitor]: ...
    def __aexit__(self, exc_type, exc, _tb) -> Coroutine[Any, Any, None]: ...
    def __init__(self, connection) -> None: ...
    def async_get(self) -> Coroutine[Any, Any, None]: ...

class NewSessionMonitor:
    _NewSessionMonitor__connection: Any
    _NewSessionMonitor__queue: asyncio.queues.Queue[nothing]
    _NewSessionMonitor__token: Any
    __doc__: str
    def __aenter__(self) -> Coroutine[Any, Any, NewSessionMonitor]: ...
    def __aexit__(self, exc_type, exc, _tb) -> Coroutine[Any, Any, None]: ...
    def __init__(self, connection) -> None: ...
    def async_get(self) -> Coroutine[Any, Any, str]: ...

class SessionTerminationMonitor:
    _SessionTerminationMonitor__connection: Any
    _SessionTerminationMonitor__queue: asyncio.queues.Queue[nothing]
    _SessionTerminationMonitor__token: Any
    __doc__: str
    def __aenter__(self) -> Coroutine[Any, Any, SessionTerminationMonitor]: ...
    def __aexit__(self, exc_type, exc, _tb) -> Coroutine[Any, Any, None]: ...
    def __init__(self, connection) -> None: ...
    def async_get(self) -> Coroutine[Any, Any, str]: ...
