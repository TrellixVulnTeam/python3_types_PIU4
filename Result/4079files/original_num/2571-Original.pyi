# (generated with --quick)

from typing import Any, Coroutine

StreamerAlreadyExists: Any
asyncpg: Any
log: logging.Logger
logging: module
pathlib: module
strings: Any

class Database:
    pool: Any
    sql: Any
    def __init__(self, pool) -> None: ...
    def add_subscription(self, *, subscriber_id: int, service: str, username: str, service_id: str) -> Coroutine[Any, Any, None]: ...
    def close(self) -> Coroutine[Any, Any, None]: ...
    @staticmethod
    def create_database(*, loop, username, password, database, hostname = ..., port = ...) -> Coroutine[Any, Any, Database]: ...
    def del_subscription(self, *, subscriber_id: int, service: str, username: str) -> Coroutine[Any, Any, None]: ...
    def delete_subscriber(self, *, subscriber_id: int) -> Coroutine[Any, Any, None]: ...
    def get_all_streamers_from_service(self, *, service: str) -> coroutine: ...
    def get_subscribers_from_streamer(self, streamer_id: str) -> coroutine: ...
    def get_subscriptions_from_subscriber(self, subscriber_id: int, service: str) -> coroutine: ...
