# (generated with --quick)

from typing import Any, Callable, Type

Interface: Type[implements.Interface]
py36: Any
pytest: Any
sys: module
test_new_style_descriptors: Any
test_new_style_metaclasses: Any

def implements(interface_cls) -> Callable[[Any], Any]: ...
def test_arg_type_annotation() -> None: ...
def test_async() -> None: ...
def test_attributes() -> None: ...
def test_bad_constructor() -> None: ...
def test_class_inheritance() -> None: ...
def test_classmethods() -> None: ...
def test_deleters() -> None: ...
def test_different_defaults() -> None: ...
def test_different_order() -> None: ...
def test_empty() -> None: ...
def test_extra_argument() -> None: ...
def test_interface_inheritance() -> None: ...
def test_interface_name_and_signature_collision() -> None: ...
def test_interface_name_collision() -> None: ...
def test_kwargs_only() -> None: ...
def test_magic_methods() -> None: ...
def test_missing_argument() -> None: ...
def test_missing_kwargs() -> None: ...
def test_missing_method() -> None: ...
def test_missing_property() -> None: ...
def test_multiple_interfaces() -> None: ...
def test_other_decorator_compat() -> None: ...
def test_property() -> None: ...
def test_renamed_argument() -> None: ...
def test_rtn_type_annotation() -> None: ...
def test_setters() -> None: ...
def test_static() -> None: ...
def test_with_args_kwargs() -> None: ...
def test_with_kwarg_only() -> None: ...
