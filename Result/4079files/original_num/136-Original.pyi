# (generated with --quick)

from typing import Any, NoReturn

GLib: Any
GObject: Any
Gconnect: Any
Gio: Any
Peas: Any
gi: module
json: module
logging: module

class DbusProxy(SimpleProxy):
    dbus_published: bool
    logger: Any
    name: Any
    proxy: Any
    def dbus_interface(self) -> str: ...
    def emit_dbus_signal(self, name, variant_type, variant_value) -> None: ...
    def get_dbus_method(self, name) -> str: ...
    def introspection_xml(self) -> NoReturn: ...
    def publish(self, sender) -> None: ...

class SimpleProxy:
    logger: logging.Logger
    name: Any
    proxy: Any
    def __init__(self, proxy) -> NoReturn: ...
    def disconnect(self) -> None: ...
    def formatted_receive(self, body) -> NoReturn: ...
    def formatted_request(self, d) -> None: ...
    def receive(self, sender, pkt) -> NoReturn: ...

def dict_to_packet(head: str, d: dict) -> Any: ...
def packet_to_dict(pkt) -> dict: ...
def prepare_logger(name) -> logging.Logger: ...
