# (generated with --quick)

from typing import Any, Optional

get_failure_limit: Any
is_client_ip_address_blacklisted: Any
is_client_ip_address_whitelisted: Any
is_client_method_whitelisted: Any
re: module
reverse: Any
settings: Any

class AxesHandler:
    __doc__: str
    def get_failures(self, request, credentials: Optional[dict] = ...) -> int: ...
    def is_admin_site(self, request) -> bool: ...
    def is_allowed(self, request, credentials: Optional[dict] = ...) -> bool: ...
    def is_blacklisted(self, request, credentials: Optional[dict] = ...) -> bool: ...
    def is_locked(self, request, credentials: Optional[dict] = ...) -> bool: ...
    def is_whitelisted(self, request, credentials: Optional[dict] = ...) -> bool: ...
    def post_delete_access_attempt(self, instance, **kwargs) -> None: ...
    def post_save_access_attempt(self, instance, **kwargs) -> None: ...
    def reset_attempts(self, *, ip_address: Optional[str] = ..., username: Optional[str] = ...) -> int: ...
    def reset_logs(self, *, age_days: Optional[int] = ...) -> int: ...
    def user_logged_in(self, sender, request, user, **kwargs) -> None: ...
    def user_logged_out(self, sender, request, user, **kwargs) -> None: ...
    def user_login_failed(self, sender, credentials: dict, request = ..., **kwargs) -> None: ...
