# (generated with --quick)

from typing import Any, List, Tuple

DomainInfo: Any
__author__: str
exception_codes: Any
os: module
requests: module
xmltodict: Any

class ContactModel:
    address: Any
    city: Any
    contact_id: Any
    country: Any
    email: Any
    first_name: Any
    last_name: Any
    phone: Any
    state: Any
    zip: Any
    def __init__(self, **kwargs) -> None: ...
    def __str__(self) -> str: ...
    @staticmethod
    def _correct_formating(data: str) -> str: ...
    @staticmethod
    def convert_contact_model(reply) -> ContactModel: ...

class NameSilo:
    _base_url: str
    _token: Any
    def __init__(self, token, sandbox: bool = ...) -> None: ...
    def _get_content_xml(self, url) -> Any: ...
    @staticmethod
    def _get_error_code(data) -> Tuple[int, Any]: ...
    def _process_data(self, url_extend) -> Any: ...
    def add_account_funds(self, amount, payment_id) -> Tuple[bool, float]: ...
    def add_contact(self, contact) -> bool: ...
    def add_domain_privacy(self, domain_name) -> bool: ...
    def auto_renew_domain(self, domain_name: str) -> bool: ...
    def change_domain_nameservers(self, domain, primary_ns, secondary_ns) -> bool: ...
    def check_domain(self, domain_name) -> bool: ...
    @staticmethod
    def check_error_code(error_code: tuple) -> Any: ...
    def delete_contact(self, contact_id) -> Any: ...
    def get_account_balance(self) -> float: ...
    def get_domain_info(self, domain_name) -> Any: ...
    def get_prices(self) -> Any: ...
    def list_contacts(self) -> List[ContactModel]: ...
    def list_domains(self) -> Any: ...
    def lock_domain(self, domain_name: str) -> bool: ...
    def register_domain(self, domain_name, years = ..., auto_renew = ..., private = ...) -> bool: ...
    def remove_auto_renew_domain(self, domain_name: str) -> bool: ...
    def remove_domain_privacy(self, domain_name) -> bool: ...
    def renew_domain(self, domain_name, years = ...) -> bool: ...
    def unlock_domain(self, domain_name: str) -> bool: ...
    def update_contact(self, contact: ContactModel) -> bool: ...
