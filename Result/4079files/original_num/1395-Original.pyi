# (generated with --quick)

from typing import Any, Callable, Coroutine, Tuple

aiohttp: Any
async_timeout: Any
asyncio: module

class AsyncOWAPI(object):
    __doc__: str
    _api_urlpath: str
    _api_version: int
    default_handle_ratelimit: bool
    default_max_tries: int
    default_platform: str
    default_request_timeout: float
    server_url: str
    def __init__(self, default_platform: str = ..., server_url: str = ..., *, handle_ratelimit: bool = ..., max_tries: int = ..., request_timeout: float = ...) -> None: ...
    def _add_request_parameters(func: AsyncOWAPI) -> Callable: ...
    def _async_get(self, session, *args, _async_timeout_seconds: int = ..., **kwargs) -> Coroutine[Any, Any, Tuple[Any, Any]]: ...
    def _base_request(self, battle_tag: str, endpoint_name: str, session, *, platform = ..., handle_ratelimit = ..., max_tries = ..., request_timeout = ...) -> coroutine: ...
    def _uses_aiohttp_session(func: AsyncOWAPI) -> Callable: ...
    def get_achievements(*args, session = ..., **kwargs) -> coroutine: ...
    def get_hero_stats(*args, session = ..., **kwargs) -> coroutine: ...
    def get_profile(*args, session = ..., **kwargs) -> coroutine: ...
    def get_stats(*args, session = ..., **kwargs) -> coroutine: ...
    @staticmethod
    def sanitize_battletag(battle_tag: str) -> str: ...

def __getattr__(name) -> Any: ...
