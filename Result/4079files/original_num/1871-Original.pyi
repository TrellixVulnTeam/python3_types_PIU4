# (generated with --quick)

from typing import Any, AsyncGenerator, List, Tuple, Union

API_BASE: str
ChandereError: Any
FIELD_NAMES: List[str]
RES_BASE: str
__author__: str
__licence__: str
__version__: str
aiohttp: Any
check_http_status: Any
contains_uri_scheme: Any
html: module
parse_crosslink: Any
parse_imageboard_uri_factory: Any
parse_uri: Any

def _catalog_url(board: str) -> str: ...
def _collect_files_board(board: str) -> AsyncGenerator[Tuple[Any, Any], Any]: ...
def _collect_files_thread(board: str, thread: int) -> AsyncGenerator[Tuple[Any, str], Any]: ...
def _collect_posts_board(board: str) -> asyncgenerator: ...
def _collect_posts_thread(board: str, thread: str) -> asyncgenerator: ...
def _collect_threads(board: str) -> asyncgenerator: ...
def _file_url(board: str, tim: str, ext: str) -> str: ...
def _thread_url(board: str, thread: str) -> str: ...
def _threads_from_page(page: dict) -> list: ...
def _tidy_post_fields(post: dict) -> None: ...
def collect_files(target: tuple) -> AsyncGenerator[Tuple[Any, Any], Any]: ...
def collect_posts(target: tuple) -> asyncgenerator: ...
def parse_target(target: str) -> tuple: ...
@overload
def quote(string: bytes, safe: Union[bytes, str] = ...) -> str: ...
@overload
def quote(string: str, safe: Union[bytes, str] = ..., encoding: str = ..., errors: str = ...) -> str: ...
