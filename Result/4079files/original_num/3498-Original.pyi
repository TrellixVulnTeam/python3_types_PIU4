# (generated with --quick)

import pathlib
from typing import Any, Callable, Dict, Optional, Type, TypeVar

Character: Any
Inventory: Any
Item: Any
Path: Type[pathlib.Path]
Player: Any
mock: module
path_to_src: pathlib.Path
sys: module

_T = TypeVar('_T')

def __getattr__(name) -> Any: ...
def deepcopy(x: _T, memo: Optional[Dict[int, _T]] = ..., _nil = ...) -> _T: ...
def initialiser(testcase) -> Callable: ...
def test_char_levelmixin() -> None: ...
def test_inv_append(*args, **kwargs) -> None: ...
def test_inv_combine(*args, **kwargs) -> None: ...
def test_inv_equip_unequip(*args, **kwargs) -> None: ...
def test_inv_remove(*args, **kwargs) -> None: ...
def test_testData(*args, **kwargs) -> None: ...
