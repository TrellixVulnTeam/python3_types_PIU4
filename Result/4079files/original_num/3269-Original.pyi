# (generated with --quick)

from typing import Any, Optional

code_link: Any
re: module
wikipedia: Any

class Block:
    codepoint_to: int
    info: BlockInfo
    next: None
    prev: None
    wikipedia: None
    wikipedia_summary: Optional[str]
    def __init__(self, codepoint_from: int, codepoint_to: int, name: str) -> None: ...
    @staticmethod
    def _format_wikipedia(wikipedia_text: str) -> str: ...
    def block_id(self) -> int: ...
    def codepoints_iter(self) -> range: ...
    def contains(self, codepoint: int) -> bool: ...
    def fetch_wikipedia(self) -> None: ...
    def from_codepoint(self) -> int: ...
    def name(self) -> str: ...
    def to_codepoint(self) -> int: ...
    def u_plus(self) -> str: ...
    def url(self) -> str: ...

class BlockInfo:
    _name: str
    codepoint_from: int
    def __init__(self, codepoint_from: int, name: str) -> None: ...
    def block_id(self) -> int: ...
    def name(self) -> str: ...
    def u_plus(self) -> str: ...
    def url(self) -> str: ...

class Subblock:
    _name: str
    codepoint_from: int
    codepoint_to: Optional[int]
    def __init__(self, codepoint_from: int, codepoint_to: Optional[int], name: str) -> None: ...
    def block_id(self) -> int: ...
    def codepoints_iter(self) -> range: ...
    def contains(self, codepoint: int) -> bool: ...
    def from_codepoint(self) -> int: ...
    def name(self) -> str: ...
    def set_to_codepoint(self, codepoint: Optional[int]) -> None: ...
    def to_codepoint(self) -> Optional[int]: ...
