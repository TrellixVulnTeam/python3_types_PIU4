# (generated with --quick)

from typing import Any, Tuple, Union

GEMINI_DB_PATH: Any
TEST_PATH: Any
VariantsDb: Any
caches: Any
connections: Any
datetime: module
logger: logging.Logger
logging: module
normpath: Any
os: module
random_string: Any
settings: Any
sha1sum: Any
sqlite3: module
time: module

def add_db(vdb) -> None: ...
def add_db_to_settings(dbname, filename, gemini_path = ...) -> None: ...
def connection_has_tables(dbname, N = ...) -> bool: ...
def db_name_from_filename(filename, fallback = ...) -> Any: ...
def inspect_db(dbname = ...) -> Tuple[Any, Any]: ...
def is_hash_changed(vdb, path = ..., warn = ...) -> Any: ...
def is_on_disk(filename, path = ...) -> bool: ...
def is_source_updated(vdb, path = ..., warn = ...) -> Union[bool, datetime.datetime]: ...
def is_sqlite3(filename) -> bool: ...
def is_test_vdb(vdb) -> Any: ...
def is_valid_vdb(vdb, path = ...) -> bool: ...
@overload
def join(path: Union[bytes, _PathLike[bytes]], *paths: Union[bytes, _PathLike[bytes]]) -> bytes: ...
@overload
def join(path: Union[str, _PathLike[str]], *paths: Union[str, _PathLike[str]]) -> str: ...
def remove_db(vdb) -> None: ...
def remove_db_from_cache(dbname) -> None: ...
def remove_db_from_settings(dbname) -> None: ...
def table_names(dbname) -> Any: ...
def vdb_full_path(vdb) -> Any: ...
