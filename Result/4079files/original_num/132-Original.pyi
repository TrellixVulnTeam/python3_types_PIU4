# (generated with --quick)

from typing import Any, List, Optional

API: Any
CustomList: Any
__all__: List[str]
error: Any

class Address:
    addr: Any
    version: Any
    def __init__(self, info) -> None: ...

class AddressList(Any):
    def __init__(self, info) -> None: ...
    def __str__(self) -> str: ...
    def _getitem(self, key, item) -> bool: ...

class NetworkAPI(Any):
    _serviceType: str
    def __init__(self, token, baseURIPrefix = ...) -> None: ...

class SecurityGroup(NetworkAPI):
    __doc__: str
    _serviceType: str
    description: Any
    id_: Any
    name: Any
    rules: Optional[SecurityGroupRuleList]
    def __init__(self, token, info) -> None: ...
    def updateDescription(self, description) -> None: ...
    def updateName(self, name) -> None: ...

class SecurityGroupList(NetworkAPI, Any):
    __doc__: str
    _serviceType: str
    def __init__(self, token, info = ...) -> None: ...
    def __str__(self) -> str: ...
    def _getitem(self, key, item) -> bool: ...
    def add(self, name, description = ...) -> Any: ...
    def delete(self, securityGroupID) -> None: ...
    def getSecurityGroup(self, sgid = ..., name = ...) -> Any: ...
    def update(self, res = ...) -> None: ...

class SecurityGroupRule(NetworkAPI):
    __doc__: str
    direction: Any
    ethertype: Any
    id_: Any
    protocol: Any
    rangeMax: Any
    rangeMin: Any
    remoteIPPrefix: Any
    def __init__(self, info) -> None: ...

class SecurityGroupRuleList(NetworkAPI, Any):
    __doc__: str
    _serviceType: str
    securityGroupID: Any
    def __init__(self, token, id_, info) -> None: ...
    def _getitem(self, key, item) -> bool: ...
    def add(self, direction, ethertype, portMin = ..., portMax = ..., protocol = ..., remoteIPPrefix = ...) -> None: ...
    def delete(self, securityGroupRuleID) -> None: ...
    def update(self) -> None: ...
