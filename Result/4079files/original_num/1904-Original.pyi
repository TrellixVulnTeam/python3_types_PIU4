# (generated with --quick)

import numpy
from typing import Any, Iterable, Iterator, List, Optional, Tuple

np: module
sparse: Any
timestamp: Any

class GraphManager:
    __doc__: str
    def __contains__(self, name: str) -> bool: ...
    def __delattr__(self, name: str) -> None: ...
    def __delitem__(self, name: str) -> None: ...
    def __getattr__(self, name: str) -> Any: ...
    def __getitem__(self, thing) -> Any: ...
    def __init__(self, ds, *, axis: int) -> None: ...
    def __iter__(self) -> Iterator[str]: ...
    def __len__(self) -> int: ...
    def __setattr__(self, name: str, g) -> None: ...
    def __setitem__(self, name: str, g) -> None: ...
    def _permute(self, ordering: numpy.ndarray) -> None: ...
    def items(self) -> Iterable[Tuple[str, Any]]: ...
    def keys(self) -> List[str]: ...
    def last_modified(self, name: Optional[str] = ...) -> str: ...

def _renumber(a: numpy.ndarray, keys: numpy.ndarray, values: numpy.ndarray) -> numpy.ndarray: ...
