# (generated with --quick)

from typing import Any, Mapping, Tuple

BackgroundScheduler: Any
CAPTURED_CLOSER: str
CAPTURED_OPENER: str
CAPTURED_SURROUNDING_LENGTH: int
Job: Any
JobLookupError: Any
cfg: Any
events: Any
generate_id: Any
log: logging.Logger
logging: module
scheduler: Any
undefined_runtime: Any

def add(container_id: str, definitions: Mapping[str, dict], paused: bool = ...) -> None: ...
def exec_job(**definition) -> Tuple[int, bytes]: ...
def get_jobs_for_container(container_id: str) -> list: ...
def on_error(event) -> None: ...
def on_executed(event) -> None: ...
def on_max_instances(event) -> None: ...
def on_missed(event) -> None: ...
def remove(job_id: str) -> None: ...
def start_scheduler() -> None: ...
