# (generated with --quick)

import distutils.ccompiler
from typing import Any, Callable, List, Optional, Type
import unittest.case

CCompiler: Type[distutils.ccompiler.CCompiler]
captured_stdout: Any
debug: module
os: module
support: Any
unittest: module

class CCompilerTestCase(Any, unittest.case.TestCase):
    test_customize_compiler: Callable
    def test_debug_print(self) -> None: ...
    def test_gen_lib_options(self) -> None: ...

class FakeCompiler(object):
    def find_library_file(self, dirs, lib, debug = ...) -> str: ...
    def library_dir_option(self, dir) -> str: ...
    def library_option(self, lib) -> str: ...
    def runtime_library_dir_option(self, dir) -> List[str]: ...

def customize_compiler(compiler: distutils.ccompiler.CCompiler) -> None: ...
def gen_lib_options(compiler: distutils.ccompiler.CCompiler, library_dirs: List[str], runtime_library_dirs: List[str], libraries: List[str]) -> List[str]: ...
def get_default_compiler(osname: Optional[str] = ..., platform: Optional[str] = ...) -> str: ...
def test_suite() -> Any: ...
