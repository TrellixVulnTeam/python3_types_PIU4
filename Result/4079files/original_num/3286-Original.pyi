# (generated with --quick)

import typeform.client
from typing import Any, Optional, Type, Union

Client: Type[typeform.client.Client]
typing: module

class FormMessages:
    _FormMessages__client: typeform.client.Client
    def __init__(self, client: typeform.client.Client) -> None: ...
    def get(self, uid: str) -> dict: ...
    def update(self, uid: str, data = ...) -> str: ...

class Forms:
    _Forms__client: typeform.client.Client
    _Forms__messages: FormMessages
    __doc__: str
    messages: Any
    def __init__(self, client: typeform.client.Client) -> None: ...
    def create(self, data = ...) -> dict: ...
    def delete(self, uid: str) -> str: ...
    def get(self, uid: str) -> dict: ...
    def list(self, page: Optional[int] = ..., pageSize: Optional[int] = ..., search: Optional[str] = ..., workspaceId: Optional[str] = ...) -> dict: ...
    def update(self, uid: str, patch = ..., data = ...) -> Union[dict, str]: ...
