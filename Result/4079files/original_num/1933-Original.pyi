# (generated with --quick)

from typing import Any, Generator, List

module_level_variable1: int
module_level_variable2: int

class ExampleClass(object):
    __doc__: str
    attr1: Any
    attr2: Any
    attr3: Any
    attr4: List[str]
    attr5: None
    readonly_property: str
    readwrite_property: List[str]
    def __init__(self, param1, param2, param3) -> None: ...
    def __special__(self) -> None: ...
    def __special_without_docstring__(self) -> None: ...
    def _private(self) -> None: ...
    def _private_without_docstring(self) -> None: ...
    def example_method(self, param1, param2) -> bool: ...

class ExampleError(Exception):
    __doc__: str
    code: Any
    msg: Any
    def __init__(self, msg, code) -> None: ...

def example_generator(n) -> Generator[int, Any, None]: ...
def function_with_pep484_type_annotations(param1: int, param2: str) -> bool: ...
def function_with_types_in_docstring(param1, param2) -> None: ...
def module_level_function(param1, param2 = ..., *args, **kwargs) -> bool: ...
