# (generated with --quick)

from typing import Any, Dict, Generator, Optional

core: Any
json: module
pathlib: module

class JSONGraph(Any):
    _guid_map: Any
    _properties: Dict[str, Dict[Any, Dict[Any, Optional[Dict[str, Any]]]]]
    filepath: pathlib.Path
    def __init__(self, filepath) -> None: ...
    def __iter__(self) -> Generator[Any, Any, None]: ...
    def _from_json(self, value) -> Any: ...
    def _to_json(self, target) -> Optional[Dict[str, Any]]: ...
    def _unset_value(self, source, label) -> None: ...
    def delete_node(self, node) -> None: ...
    def get_labels(self, node) -> Generator[Any, Any, None]: ...
    def get_value(self, source, label) -> Any: ...
    @classmethod
    def load(cls, filepath) -> Any: ...
    def save(self) -> None: ...
    def set_value(self, source, label, target) -> None: ...

def _get_guid(node_or_guid) -> Any: ...
