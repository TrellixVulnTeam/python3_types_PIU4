# (generated with --quick)

from typing import Any, Callable, Tuple

access: module
argparse: module
command: module
configuration: Any
deploy: module
infra: module
main_command: Tuple[str, Callable[[list, argparse.ArgumentParser], Any]]
setup: module
time: module
verify: module

def add_dry_run_argument(parser: argparse.ArgumentParser, dest: str) -> None: ...
def iterative_verifier(verifier, max_time, pause = ...) -> Callable[[], Any]: ...
def seq_mux_map(desc, mapping) -> Tuple[str, Callable[[list, argparse.ArgumentParser], Any]]: ...
def sequence_cluster(ops: setup.Operations) -> None: ...
def sequence_keysystem(ops: setup.Operations) -> None: ...
def sequence_ssh(ops: setup.Operations) -> None: ...
def sequence_supervisor(ops: setup.Operations) -> None: ...
def wrapseq(desc: str, f) -> Tuple[str, Callable[[list, argparse.ArgumentParser], Any]]: ...
