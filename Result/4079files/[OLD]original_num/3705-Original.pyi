# (generated with --quick)

from typing import Any, List, NoReturn, Optional

OptionStrategy: Any
Order: Any
OrderAction: Any
OrderEvent: Any
OrderTIF: Any
OrderType: Any
datetime: module
fixed_quantity_sizer: Any

class Strategy(object):
    __doc__: str
    broker: Any
    commission: Any
    current_date: Any
    end_date: Optional[str]
    margin: Any
    order_list: List[nothing]
    queue: Any
    sizer: Any
    start_date: Optional[str]
    tradable: bool
    def __init__(self, broker, queue, comm_func, margin_func, **params) -> None: ...
    def _init(self, **params) -> NoReturn: ...
    def add_option(self, symbol, exclude_splits = ..., option_type = ...) -> None: ...
    def cancel(self) -> None: ...
    def close_order(self, ticket, price = ...) -> None: ...
    def on_data(self, data) -> NoReturn: ...
    def on_data_event(self, event) -> NoReturn: ...
    def on_fill(self, event) -> None: ...
    def on_fill_event(self, event) -> None: ...
    def on_init(self, **params) -> NoReturn: ...
    def on_rejected(self, event) -> None: ...
    def on_rejected_event(self, event) -> None: ...
    def place_order(self, strategy, action, quantity = ..., order_tif = ..., order_type = ..., limit_price = ...) -> None: ...
    def positions_total(self) -> Any: ...
    def set_cash(self, amt) -> None: ...
    def set_end_date(self, year, month, day) -> None: ...
    def set_start_date(self, year, month, day) -> None: ...
