# (generated with --quick)

from typing import Any, Optional, Type, TypeVar, Union

_T = TypeVar('_T')

class MimeType:
    __slots__ = ["subtype", "type"]
    __doc__: str
    subtype: Any
    type: Any
    def __eq__(self, other: Union[MimeType, str]) -> bool: ...
    def __hash__(self) -> int: ...
    def __init__(self, mediatype: Optional[Union[MimeType, str]], subtype: Optional[str] = ...) -> None: ...
    def __lt__(self, other: Union[MimeType, str]) -> bool: ...
    def __repr__(self) -> str: ...
    def __str__(self) -> str: ...

def total_ordering(cls: Type[_T]) -> Type[_T]: ...
