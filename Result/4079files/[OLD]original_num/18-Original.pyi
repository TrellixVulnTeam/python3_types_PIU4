# (generated with --quick)

from typing import Any, Dict, List, Optional

WordList = List[str]

Entropy: Any
math: module
mnemonic_dict: Mnemonic
os: module

class Mnemonic:
    __doc__: str
    _bits_per_word: Dict[str, Optional[int]]
    _dictionary: Dict[str, Any]
    _language_length: Dict[str, Optional[int]]
    language_files: Dict[str, Optional[str]]
    languages: List[str]
    def __init__(self) -> None: ...
    def _load_lang(self, lang: str, filename: Optional[str] = ...) -> None: ...
    def bits_per_word(self, lang: str) -> int: ...
    def entropy_from_indexes(self, indexes: List[int], lang: str) -> Any: ...
    def indexes_from_entropy(self, entropy, lang: str) -> List[int]: ...
    def indexes_from_mnemonic(self, mnemonic: str, lang: str) -> List[int]: ...
    def language_length(self, lang: str) -> int: ...
    def mnemonic_from_indexes(self, indexes: List[int], lang: str) -> str: ...
    def word_list(self, lang: str) -> List[str]: ...
