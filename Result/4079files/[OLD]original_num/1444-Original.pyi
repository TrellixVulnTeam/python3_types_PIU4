# (generated with --quick)

from typing import Any, Pattern, Tuple, TypeVar, Union

external_taxon: Pattern[str]
internal_taxon: Pattern[str]
re: module

_T0 = TypeVar('_T0')

class EntityWriter:
    __doc__: str
    def _split_prefix(self, ref) -> Tuple[Any, Any]: ...
    def _write_row(self, vals) -> None: ...
    def write(self, entities, meta = ...) -> None: ...
    def write_entity(self, e) -> None: ...

class GpiWriter(EntityWriter):
    __doc__: str
    file: Any
    def __init__(self, file = ...) -> None: ...
    def write_entity(self, entity) -> None: ...

def normalize_taxon(taxon: _T0) -> Union[str, Pattern[str], _T0]: ...
def stringify(s: _T0) -> Union[str, _T0]: ...
