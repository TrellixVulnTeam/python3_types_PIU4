# (generated with --quick)

from typing import Any, Optional

copy: module
exc: Any

class ConfigKey(object):
    __doc__: str
    parsed: bool
    safe_load: bool
    def __contains__(self, item) -> bool: ...
    def __getitem__(self, item) -> Any: ...
    def __init__(self, safe_load: bool = ...) -> None: ...
    def __iter__(self) -> `dictionary-keyiterator`[str]: ...
    def __setitem__(self, key, value) -> None: ...
    def dump(self) -> dict: ...
    def items(self) -> dict_items[str, Any]: ...
    def iter_list(self, data: list) -> list: ...
    def iter_list_dump(self, data: list) -> list: ...
    def keys(self) -> dict_keys[str]: ...
    def load_from_dict(self, data: dict, overwrite: bool = ...) -> Optional[bool]: ...
    def values(self) -> dict_values: ...
