# (generated with --quick)

from typing import Any, Optional

AutoencoderController: Any
BaseController: Any
BaseView: Any
Datasource: Any
DatasourceController: Any
Network: Any
Toolbox: Any
TrainingController: Any
np: module
util: Any

class Controller(View, Any):
    activation_controller: Any
    autoencoder_controller: Any
    datasource_controller: Any
    maximization_engine: Any
    training_controller: Any
    def add_datasource(self, datasource) -> None: ...
    def add_network(self, network) -> None: ...
    def get_data_shape(self) -> Any: ...
    def get_inputs(self, dtype = ..., flat = ..., test = ...) -> Any: ...
    def get_labels(self, dtype = ..., one_hot = ..., test = ...) -> Any: ...
    def hack_new_alexnet(self) -> None: ...
    def hack_new_model(self) -> Any: ...
    def hack_new_model2(self) -> Any: ...
    def remove_network(self, datasource) -> None: ...
    def set_datasource(self, datasource) -> None: ...
    def set_input_from_file(self, filename: str, label = ..., description: Optional[str] = ...) -> None: ...
    def set_network(self, network) -> None: ...

class View(Any):
    datasources: Any
    networks: Any
    def __init__(self, toolbox = ..., **kwargs) -> None: ...
