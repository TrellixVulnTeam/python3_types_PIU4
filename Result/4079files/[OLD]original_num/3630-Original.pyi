# (generated with --quick)

import collections
from typing import Any, Callable, List, Optional, Sequence, Tuple, Type

abc: module
deque: Type[collections.deque]
sys: module
time: module

def get_collection_sizes(obj, collections: Optional[tuple] = ..., get_only_non_empty = ...) -> List[Tuple[str, int, Any]]: ...
def get_memory_usage(obj, get_collections_memory_usage = ..., get_only_non_empty = ...) -> list: ...
def get_size(obj, seen = ...) -> Any: ...
def timeit(method, record_time_in: Optional[list] = ...) -> Callable: ...
def wraps(wrapped: Callable, assigned: Sequence[str] = ..., updated: Sequence[str] = ...) -> Callable[[Callable], Callable]: ...
