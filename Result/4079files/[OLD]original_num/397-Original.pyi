# (generated with --quick)

from typing import Any

AddTemplateCommand: Any
Command: Any
Daemon: Any
DefStyle: Any
InputError: Any
Item: Any
ListCommand: Any
ProgramError: Any
RmTemplateCommand: Any
RoleCommand: Any
SyncCommand: Any
argparse: module
os: module
pkg_resources: module
signal: module
sys: module

class CustomArgumentParser(argparse.ArgumentParser):
    __doc__: str
    def error(self, message) -> None: ...

class HelpAction(argparse.Action):
    __doc__: str
    def __call__(self, parser, namespace, values, option_string = ...) -> None: ...
    def __init__(self, nargs = ..., **kwargs) -> None: ...

class QuietAction(argparse.Action):
    __doc__: str
    def __call__(self, parser, namespace, values, option_string = ...) -> None: ...
    def __init__(self, nargs = ..., **kwargs) -> None: ...

class VersionAction(argparse.Action):
    __doc__: str
    def __call__(self, parser, namespace, values, option_string = ...) -> None: ...
    def __init__(self, nargs = ..., **kwargs) -> None: ...

def command_help_item() -> Any: ...
def daemon() -> int: ...
def def_command(cmd_args) -> Any: ...
def main() -> int: ...
def main_help_item() -> Any: ...
def parse_args() -> argparse.Namespace: ...
def signal_exception_handler(signum: int, frame) -> None: ...
def signal_exit_handler(signum: int, frame) -> None: ...
