# (generated with --quick)

import __future__
from typing import Any, Dict, Optional, Type, Union
import yaml.cyaml
import yaml.loader

DEFAULT_SOA_DIR: str
Loader: Type[Union[yaml.cyaml.CSafeLoader, yaml.loader.SafeLoader]]
_use_yaml_cache: bool
_yaml_cache: dict
copy: module
io: module
log: logging.Logger
logging: module
os: module
print_function: __future__._Feature
socket: module
sys: module
yaml: module

def _read_yaml_file(file_name) -> Any: ...
def all_nodes_that_receive(service, service_configuration = ..., run_only = ..., deploy_to_only = ...) -> list: ...
def all_nodes_that_run(service, service_configuration = ...) -> list: ...
def all_nodes_that_run_in_env(service, env, service_configuration = ...) -> list: ...
def disable_yaml_cache() -> None: ...
def enable_yaml_cache() -> None: ...
def generate_service_info(service_information, **kwargs) -> Dict[str, Any]: ...
def get_service_from_port(port, all_services = ...) -> Any: ...
def list_services(soa_dir = ...) -> list: ...
def load_yaml(fd) -> Any: ...
def read_data(data_file) -> Any: ...
def read_dependencies(dependencies_file) -> Any: ...
def read_deploy(deploy_file) -> Any: ...
def read_extra_service_information(service_name, extra_info, soa_dir = ...) -> Any: ...
def read_lb_extras(lb_extras_file) -> Any: ...
def read_monitoring(monitoring_file) -> Any: ...
def read_port(port_file) -> Optional[int]: ...
def read_service_configuration(service_name, soa_dir = ...) -> Any: ...
def read_service_configuration_from_dir(rootdir, service_dirname) -> dict: ...
def read_service_information(service_file) -> Any: ...
def read_services_configuration(soa_dir = ...) -> dict: ...
def read_smartstack(smartstack_file) -> Any: ...
def read_vip(vip_file) -> Optional[Union[bytes, str]]: ...
def services_deployed_here() -> set: ...
def services_deployed_on(hostname, service_configuration = ...) -> list: ...
def services_needing_puppet_help_here() -> Any: ...
def services_needing_puppet_help_on(hostname, service_configuration = ...) -> list: ...
def services_that_run_here() -> set: ...
def services_that_run_on(hostname, service_configuration = ...) -> list: ...
def services_using_ssl_here() -> Any: ...
def services_using_ssl_on(hostname, service_configuration = ...) -> list: ...
