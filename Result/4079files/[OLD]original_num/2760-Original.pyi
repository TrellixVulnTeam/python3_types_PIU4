# (generated with --quick)

from typing import Any, Dict, List, Tuple, Type, Union

Path: Type[pathlib.Path]
_HalconDistortionParameters1: List[str]
_HalconDistortionParameters2: List[str]
numpy: module
pathlib: module

def load_all_camera_parameters(calibration_path, throw_error_if_radial_distortion = ...) -> List[dict]: ...
def load_extrinsics(filePath) -> Tuple[Any, Any]: ...
def load_halcon_extrinsics_homogeneous(filePath) -> Tuple[Any, Any]: ...
def load_halcon_intrinsics(filePath) -> Dict[str, Union[float, int]]: ...
def load_halcon_intrinsics_ascii(filePath) -> Tuple[numpy.ndarray, numpy.ndarray]: ...
def load_intrinsics(filePath) -> Tuple[Any, Union[Dict[str, Union[float, int, str]], Tuple[nothing, ...]], Union[float, int], Union[float, int], Union[float, int]]: ...
def rodriguez_vector_to_SO3(a1, a2, a3, implementation = ...) -> Any: ...
