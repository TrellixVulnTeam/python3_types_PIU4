# (generated with --quick)

from typing import Any, Optional, Sequence

Provider: Any
SnapcraftEnvironmentError: Any
errors: Any
get_image_source: Any
logger: logging.Logger
logging: module
os: module
pylxd: Any
repo: Any
subprocess: module
sys: module
urllib: module
warnings: module

class LXD(Any):
    _LXC_BIN: str
    _LXD_BIN: str
    _PROJECT_DEVICE_NAME: str
    _PROJECT_EXPORTED_PRIME_NAME: str
    __doc__: str
    _container: Any
    _lxd_client: Any
    def __init__(self, *, project, echoer, is_ephemeral: bool = ...) -> None: ...
    def _ensure_container_running(self) -> None: ...
    @classmethod
    def _get_is_snap_injection_capable(cls) -> bool: ...
    @classmethod
    def _get_provider_name(cls) -> str: ...
    def _launch(self) -> None: ...
    def _mount_prime_directory(self) -> bool: ...
    def _push_file(self, *, source: str, destination: str) -> None: ...
    def _run(self, command: Sequence[str], hide_output: bool = ...) -> Optional[bytes]: ...
    def _start(self) -> None: ...
    def _stop(self) -> None: ...
    def clean_project(self) -> bool: ...
    def create(self) -> None: ...
    def destroy(self) -> None: ...
    @classmethod
    def ensure_provider(cls) -> None: ...
    def mount_project(self) -> None: ...
    def pull_file(self, name: str, destination: str, delete: bool = ...) -> None: ...
    @classmethod
    def setup_provider(cls, *, echoer) -> None: ...
    def shell(self) -> None: ...
