# (generated with --quick)

import numbers
from typing import Type

Number: Type[numbers.Number]
__author__: str
re: module

def equal(value: object, comparable: object) -> bool: ...
def identical(value: object, comparable: object) -> bool: ...
def is_instance(value: object, comparable: type) -> bool: ...
def is_not_instance(value: object, comparable: type) -> bool: ...
def not_equal(value: object, comparable: object) -> bool: ...
def not_identical(value: object, comparable: object) -> bool: ...
def num_greater_than(value: numbers.Number, comparable: numbers.Number) -> bool: ...
def num_less_than(value: numbers.Number, comparable: numbers.Number) -> bool: ...
def str_contains(value: str, comparable: str) -> bool: ...
def str_matches_regex(value: str, comparable) -> bool: ...
def str_not_contains(value: str, comparable: str) -> bool: ...
def str_not_matches_regex(value: str, comparable) -> bool: ...
