# (generated with --quick)

from typing import Any, Generator, Optional

Compression: Any
loads: Any
pathlib: module
sa: Any
sqlalchemy: Any

class Row(dict):
    __dict__: Row
    def __init__(self, *args, **kwargs) -> None: ...

def create_row(row) -> Row: ...
def fetch_some(result, n) -> Generator[Row, Any, None]: ...
def get_engine(uri_or_engine, path = ...) -> Any: ...
def get_or_create(engine, model, fields, data) -> Any: ...
def get_or_none(engine, model, *params) -> Optional[Row]: ...
def strip_prefix(row, prefix) -> Row: ...
