# (generated with --quick)

from typing import Any
import unittest.case
import unittest.mock

IrmaFrontendReturn: Any
IrmaProbeType: Any
IrmaReturnCode: Any
IrmaScanRequest: Any
IrmaScanStatus: Any
IrmaTaskReturn: Any
IrmaValueError: Any
Mock: Any
UUID: Any
bytes_to_utf8: Any
common_celery_options: Any
log: logging.Logger
logging: module
patch: unittest.mock._patcher
save_to_file: Any
unittest: module

class TestCommonUtils(unittest.case.TestCase):
    test_common_celery_options0: Any
    test_common_celery_options1: Any
    test_save_to_file0: Any
    test_save_to_file1: Any
    def test_bytes_to_utf8_0(self) -> None: ...
    def test_bytes_to_utf8_1(self) -> None: ...
    def test_bytes_to_utf8_2(self) -> None: ...
    def test_bytes_to_utf8_3(self) -> None: ...
    def test_irma_frontendreturn_error(self) -> None: ...
    def test_irma_frontendreturn_success(self) -> None: ...
    def test_irma_frontendreturn_warning(self) -> None: ...
    def test_irma_taskreturn_error(self) -> None: ...
    def test_irma_taskreturn_success(self) -> None: ...
    def test_irma_taskreturn_warning(self) -> None: ...
    def test_irmaprobetype_normalize0(self) -> None: ...
    def test_irmaprobetype_normalize1(self) -> None: ...
    def test_irmascanstatus_code_ot_label0(self) -> None: ...
    def test_irmascanstatus_code_ot_label1(self) -> None: ...
    def test_irmascanstatus_filter_status0(self) -> None: ...
    def test_irmascanstatus_filter_status1(self) -> None: ...
    def test_irmascanstatus_filter_status2(self) -> None: ...
    def test_irmascanstatus_filter_status3(self) -> None: ...
    def test_irmascanstatus_is_error0(self) -> None: ...
    def test_irmascanstatus_is_error1(self) -> None: ...
    def test_irmascanstatus_is_error2(self) -> None: ...
    def test_uuid(self) -> None: ...
    def test_uuid_generate(self) -> None: ...
    def test_uuid_validate(self) -> None: ...

class TestIrmaScanRequest(unittest.case.TestCase):
    isr: Any
    def test_add_file(self) -> None: ...
    def test_del_file0(self) -> None: ...
    def test_del_file1(self) -> None: ...
    def test_files(self) -> None: ...
    def test_get_mimetype(self) -> None: ...
    def test_get_probelist(self) -> None: ...
    def test_init(self) -> None: ...
    def test_set_probelist(self) -> None: ...
    def test_to_dict(self) -> None: ...

def enable_logging(level = ..., handler = ..., formatter = ...) -> None: ...
