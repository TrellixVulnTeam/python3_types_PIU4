# (generated with --quick)

import __future__
from typing import Any

FuncData: Any
absolute_import: __future__._Feature
assert_: Any
assert_allclose: Any
division: __future__._Feature
np: module
orth: Any
print_function: __future__._Feature

class TestPolys(object):
    __doc__: str
    def check_poly(self, func, cls, param_ranges = ..., x_range = ..., nn = ..., nparam = ..., nx = ..., rtol = ...) -> None: ...
    def test_chebyc(self) -> None: ...
    def test_chebys(self) -> None: ...
    def test_chebyt(self) -> None: ...
    def test_chebyu(self) -> None: ...
    def test_gegenbauer(self) -> None: ...
    def test_genlaguerre(self) -> None: ...
    def test_hermite(self) -> None: ...
    def test_hermitenorm(self) -> None: ...
    def test_jacobi(self) -> None: ...
    def test_laguerre(self) -> None: ...
    def test_legendre(self) -> None: ...
    def test_sh_chebyt(self) -> None: ...
    def test_sh_chebyu(self) -> None: ...
    def test_sh_jacobi(self) -> None: ...
    def test_sh_legendre(self) -> None: ...

class TestRecurrence(object):
    __doc__: str
    def check_poly(self, func, param_ranges = ..., x_range = ..., nn = ..., nparam = ..., nx = ..., rtol = ...) -> None: ...
    def test_chebyc(self) -> None: ...
    def test_chebys(self) -> None: ...
    def test_chebyt(self) -> None: ...
    def test_chebyu(self) -> None: ...
    def test_gegenbauer(self) -> None: ...
    def test_genlaguerre(self) -> None: ...
    def test_hermite(self) -> None: ...
    def test_jacobi(self) -> None: ...
    def test_laguerre(self) -> None: ...
    def test_legendre(self) -> None: ...
    def test_sh_chebyt(self) -> None: ...
    def test_sh_chebyu(self) -> None: ...
    def test_sh_jacobi(self) -> None: ...
    def test_sh_legendre(self) -> None: ...

def test_eval_chebyt() -> None: ...
def test_eval_genlaguerre_restriction() -> None: ...
def test_warnings() -> None: ...
