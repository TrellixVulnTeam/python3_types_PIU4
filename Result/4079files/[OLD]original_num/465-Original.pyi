# (generated with --quick)

from typing import Any, Callable, Dict, Optional, Tuple, Union

Policy: Any
take_any: Any
tf: Any

class DiscreteActor(Any):
    action_features: Optional[Callable[[Any], Dict[str, Any]]]
    dist_model: Any
    obs_features: Optional[Callable[[Any], Dict[str, Any]]]
    variables: list
    def __init__(self, dist_model, obs_features: Optional[Callable[[Any], Dict[str, Any]]] = ..., action_features: Optional[Callable[[Any], Dict[str, Any]]] = ...) -> None: ...
    def eval(self, obs, action, featurize_inputs: bool = ...) -> Tuple[Any, Any, Any]: ...
    def features(self, obs = ..., action = ..., featurize_inputs: bool = ...) -> Any: ...
    def log_pdf(self, action, dist: Union[str, Dict[str, Any]]) -> Any: ...
    def sample(self, obs, featurize_inputs: bool = ...) -> Any: ...
    @staticmethod
    def sample_action(dist) -> Any: ...
    def sample_eval(self, obs, **kwargs) -> Dict[str, Any]: ...
