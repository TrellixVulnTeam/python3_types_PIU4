# (generated with --quick)

from typing import Any, Coroutine
import unittest.mock

asyncio: module
asynctest: Any
callback: Any
device_registry: Any
flush_store: Any
mock_device_registry: Any
patch: unittest.mock._patcher
pytest: Any
registry: Any
update_events: Any

def test_format_mac(registry) -> Coroutine[Any, Any, None]: ...
def test_get_or_create_returns_same_entry(hass, registry, update_events) -> Coroutine[Any, Any, None]: ...
def test_loading_from_storage(hass, hass_storage) -> Coroutine[Any, Any, None]: ...
def test_loading_race_condition(hass) -> Coroutine[Any, Any, None]: ...
def test_loading_saving_data(hass, registry) -> Coroutine[Any, Any, None]: ...
def test_multiple_config_entries(registry) -> Coroutine[Any, Any, None]: ...
def test_no_unnecessary_changes(registry) -> Coroutine[Any, Any, None]: ...
def test_removing_area_id(registry) -> Coroutine[Any, Any, None]: ...
def test_removing_config_entries(hass, registry, update_events) -> Coroutine[Any, Any, None]: ...
def test_requirement_for_identifier_or_connection(registry) -> Coroutine[Any, Any, None]: ...
def test_specifying_via_device_create(registry) -> Coroutine[Any, Any, None]: ...
def test_specifying_via_device_update(registry) -> Coroutine[Any, Any, None]: ...
def test_update(registry) -> Coroutine[Any, Any, None]: ...
