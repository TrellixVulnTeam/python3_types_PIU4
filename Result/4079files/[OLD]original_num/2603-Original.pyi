# (generated with --quick)

import requests.models
from typing import Any, Optional, Tuple, Union

basedate: datetime.date
basedatetime: datetime.datetime
datetime: module
e: Any
json: module
pp: pprint.PrettyPrinter
pprint: module
re: module
requests: module

class EtherCalc(object):
    root: Any
    def __init__(self, url_root) -> None: ...
    def cells(self, page: str, coord = ...) -> Any: ...
    def command(self, page: str, command) -> Any: ...
    def create(self, data, format: str = ..., id = ...) -> Optional[requests.models.Response]: ...
    def export(self, page, format = ...) -> Union[list, str]: ...
    def get(self, cmd: str) -> requests.models.Response: ...
    def post(self, id: str, data, content_type: str) -> requests.models.Response: ...
    def put(self, id: str, data, content_type: str) -> requests.models.Response: ...
    def update(self, data, format: str = ..., id = ...) -> Optional[requests.models.Response]: ...

def _grid_size(cells: dict) -> Tuple[Any, Any]: ...
def is_number(s) -> bool: ...
def set(coord, item) -> Optional[str]: ...
def ss_to_xy(s: str) -> Optional[Tuple[int, int]]: ...
