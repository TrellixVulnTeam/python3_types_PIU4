# (generated with --quick)

from typing import Any

GitLabCore: Any
NotFoundException: Any
json: module

class GitLabProjects(Any):
    def delete_hook(self, project_and_group_name, hook_id) -> None: ...
    def get_all_projects(self) -> list: ...
    def get_deploy_key(self, project_and_group_name, id) -> Any: ...
    def get_deploy_keys(self, project_and_group_name) -> Any: ...
    def get_hook_id(self, project_and_group_name, url) -> Any: ...
    def get_project_push_rules(self, project_and_group_name) -> Any: ...
    def get_project_settings(self, project_and_group_name) -> Any: ...
    def get_secret_variable(self, project_and_group_name, secret_variable_key) -> Any: ...
    def get_secret_variables(self, project_and_group_name) -> Any: ...
    def post_approvals(self, project_and_group_name, data) -> None: ...
    def post_deploy_key(self, project_and_group_name, deploy_key) -> None: ...
    def post_hook(self, project_and_group_name, url, data) -> None: ...
    def post_secret_variable(self, project_and_group_name, secret_variable) -> None: ...
    def put_approvers(self, project_and_group_name, approvers, approver_groups) -> None: ...
    def put_hook(self, project_and_group_name, hook_id, url, data) -> None: ...
    def put_project_push_rules(self, project_and_group_name, push_rules) -> None: ...
    def put_project_settings(self, project_and_group_name, project_settings) -> None: ...
    def put_secret_variable(self, project_and_group_name, secret_variable) -> None: ...
    def share_with_group(self, project_and_group_name, group_name, group_access, expires_at) -> Any: ...
    def unshare_with_group(self, project_and_group_name, group_name) -> Any: ...
