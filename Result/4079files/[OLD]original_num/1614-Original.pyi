# (generated with --quick)

from typing import Any
import unittest.case

List: Any
Unit: Any
compose: Any
fmap: Any
identity: Any
pure: Any
unit: Any
unittest: module

class TestList(unittest.case.TestCase):
    def test_list_append_empty(self) -> None: ...
    def test_list_append_empty_other(self) -> None: ...
    def test_list_append_non_empty(self) -> None: ...
    def test_list_head(self) -> None: ...
    def test_list_length_empty(self) -> None: ...
    def test_list_length_multiple(self) -> None: ...
    def test_list_length_non_empty(self) -> None: ...
    def test_list_list(self) -> None: ...
    def test_list_not_null_after_cons(self) -> None: ...
    def test_list_not_null_after_cons_and_tail(self) -> None: ...
    def test_list_null(self) -> None: ...
    def test_list_tail_head(self) -> None: ...
    def test_list_tail_tail_null(self) -> None: ...

class TestListApplicative(unittest.case.TestCase):
    def test_identity_applicative_law_composition(self) -> None: ...
    def test_identity_applicative_law_composition_empty(self) -> None: ...
    def test_identity_applicative_law_composition_range(self) -> None: ...
    def test_list_applicative_binary_func(self) -> None: ...
    def test_list_applicative_binary_func_empty_arg_1(self) -> None: ...
    def test_list_applicative_binary_func_empty_arg_2(self) -> None: ...
    def test_list_applicative_binary_func_singleton(self) -> None: ...
    def test_list_applicative_empty_func(self) -> None: ...
    def test_list_applicative_law_functor(self) -> None: ...
    def test_list_applicative_law_identity(self) -> None: ...
    def test_list_applicative_unary_func(self) -> None: ...

class TestListFunctor(unittest.case.TestCase):
    def test_list_functor_law2(self) -> None: ...
    def test_list_functor_law_1(self) -> None: ...
    def test_list_functor_map(self) -> None: ...

class TestListMonad(unittest.case.TestCase):
    def test_list_monad_bind(self) -> None: ...
    def test_list_monad_empty_bind(self) -> None: ...
    def test_list_monad_law_associativity(self) -> None: ...
    def test_list_monad_law_associativity_empty(self) -> None: ...
    def test_list_monad_law_associativity_range(self) -> None: ...
    def test_list_monad_law_left_identity(self) -> None: ...
    def test_list_monad_law_right_identity(self) -> None: ...
