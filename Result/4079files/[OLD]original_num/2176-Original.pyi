# (generated with --quick)

from typing import Any, List, Optional

GLib: Any
GObject: Any
Gio: Any
Ide: Any
_: Any
os: module

class WafBuildSystem(Any, Any):
    project_file: Any
    python: None
    waf_local: None
    def do_get_display_name(self) -> str: ...
    def do_get_id(self) -> str: ...
    def do_get_priority(self) -> int: ...

class WafBuildSystemDiscovery(Any):
    def __init__(self, *args, **kwargs) -> None: ...

class WafBuildTarget(Any, Any):
    name: Any
    def __init__(self, name, *args, **kwargs) -> None: ...
    def do_get_argv(self) -> List[str]: ...
    def do_get_display_name(self) -> Any: ...
    def do_get_install_directory(self) -> Any: ...
    def do_get_kind(self) -> Any: ...
    def do_get_language(self) -> None: ...
    def do_get_name(self) -> Any: ...
    def do_get_priority(self) -> int: ...

class WafBuildTargetProvider(Any, Any):
    def communicate_cb(self, subprocess, result, task) -> None: ...
    def do_get_targets_async(self, cancellable, callback, data) -> None: ...
    def do_get_targets_finish(self, result) -> Any: ...

class WafPipelineAddin(Any, Any):
    __doc__: str
    python: Optional[str]
    waf_local: Optional[bool]
    def _create_launcher(self, pipeline) -> Any: ...
    def _query(self, stage, pipeline, targets, cancellable) -> None: ...
    def do_load(self, pipeline) -> None: ...
    def do_unload(self, application) -> None: ...

def sniff_python_version(path) -> str: ...
