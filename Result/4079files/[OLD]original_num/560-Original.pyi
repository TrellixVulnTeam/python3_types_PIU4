# (generated with --quick)

from typing import Any, Type
import unittest.case

TestCase: Type[unittest.case.TestCase]

class ListCustomOperatorTest(unittest.case.TestCase):
    def test_custom__custom_negative_pair_values__return_pair_values(self) -> None: ...
    def test_custom__custom_pair_values__return_pair_values(self) -> None: ...
    def test_custom__custom_pair_values_subkey__return_pair_values(self) -> None: ...

class ListEqualOperatorTests(unittest.case.TestCase):
    def test_equal__find_obj_simple_value__get_obj_correctly(self) -> None: ...
    def test_equal__find_objs__query_with_two_keys_dict__get_objs_correctly(self) -> None: ...
    def test_equal__find_objs__query_with_two_keys_simple_and_another_dict__get_objs_correctly(self) -> None: ...
    def test_equal__find_objs_with_query_key_with_another_dict__get_objs_correctly(self) -> None: ...

class ListGreaterThanTests(unittest.case.TestCase):
    def test_greater__greater_simple__return_obj_correctely(self) -> None: ...
    def test_greater__greater_than_in_sub_key__return_pair_values(self) -> None: ...

class ListNotOperatorTests(unittest.case.TestCase):
    def test_not__find_obj_simple_value__get_obj_correctly(self) -> None: ...
    def test_not__find_objs__query_with_two_keys_dict__get_objs_correctly(self) -> None: ...
    def test_not__find_objs__query_with_two_keys_simple_and_another_dict__get_objs_correctly(self) -> None: ...
    def test_not__find_objs_with_query_key_with_another_dict__get_objs_correctly(self) -> None: ...

class ListOrOperatorTests(unittest.case.TestCase):
    def test_or__find_obj_simple_value__get_obj_correctly(self) -> None: ...
    def test_or__find_objs__query_with_two_keys_dict__get_objs_correctly(self) -> None: ...
    def test_or__find_objs__query_with_two_keys_simple_and_another_dict__get_objs_correctly(self) -> None: ...
    def test_or__find_objs_with_query_key_with_another_dict__get_objs_correctly(self) -> None: ...

def __getattr__(name) -> Any: ...
