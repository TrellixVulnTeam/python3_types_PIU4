# (generated with --quick)

from typing import Any, NoReturn, Tuple, Union

Logger: Any
PickleContainer: Any
R: Any
logger: Any
now: Any
web: Any

class BucketsHandler(_BaseHandler):
    driver: Union[MongoDriver, PickleDriver]
    def post(self) -> Any: ...

class KeyHandler(_BaseHandler):
    driver: Union[MongoDriver, PickleDriver]
    def delete(self, project_id, key) -> Any: ...
    def get(self, project_id, key) -> Any: ...
    def head(self, project_id, key) -> Any: ...
    def put(self, project_id, key) -> Any: ...

class MongoDriver(object):
    def create(self, project_id) -> NoReturn: ...
    def get(self, project_id, key) -> NoReturn: ...
    def remove(self, project_id, key) -> NoReturn: ...
    def set(self, project_id, key, value, ttl) -> NoReturn: ...

class PickleDriver(object):
    _count: int
    _db: dict
    _max_count: int
    def __init__(self, path) -> None: ...
    def create(self, project_id) -> None: ...
    def get(self, project_id, key) -> Tuple[Any, Any]: ...
    def remove(self, project_id, key) -> None: ...
    def set(self, project_id, key, value, ttl) -> None: ...

class _BaseHandler(Any):
    driver: Union[MongoDriver, PickleDriver]
    def __init__(self, *args, **kwargs) -> None: ...
