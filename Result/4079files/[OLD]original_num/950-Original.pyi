# (generated with --quick)

import index
from typing import Dict, FrozenSet, List, Tuple, Type

InvertedIndex: Type[index.InvertedIndex]
sys: module

def ItemSet(lst: List[str]) -> FrozenSet[int]: ...
def apriori(index, minsup) -> List[List[int]]: ...
def generate_rules(itemsets: List[List[int]], itemset_counts: Dict[Tuple[int, ...], int], num_transactions: int, min_confidence: float, min_lift: float) -> List[Tuple[List[int], List[int], float, float, float]]: ...
def item_id(name) -> int: ...
def item_str(id) -> str: ...
def test_apriori() -> None: ...
