# (generated with --quick)

from typing import Any, NoReturn

base_class: Any
ecological: Any
os: module
pytest: Any
pytestmark: Any
typing: module

def test_autoload_values_on_object_init(monkeypatch) -> None: ...
def test_config_autoload_is_ignored_on_autoconfig() -> None: ...
def test_deprecation_warning_is_emitted_on_autoconfig() -> None: ...
def test_explicit_variable(monkeypatch, base_class) -> None: ...
def test_global_source_option_is_used_as_default(monkeypatch) -> None: ...
def test_global_transform_option_is_used_as_default(monkeypatch) -> NoReturn: ...
def test_global_wanted_type_option_is_used_as_default(monkeypatch) -> None: ...
def test_invalid_value_parsed_type(monkeypatch, base_class) -> None: ...
def test_invalid_value_regular_type(monkeypatch, base_class) -> None: ...
def test_load_values_explictly(monkeypatch) -> None: ...
def test_nested(monkeypatch, base_class) -> None: ...
def test_nested_newtype(monkeypatch, base_class) -> None: ...
def test_no_default(base_class) -> None: ...
def test_parametric_newtype(monkeypatch, base_class) -> None: ...
def test_parametric_newtype_with_newtype_parameter(monkeypatch, base_class) -> None: ...
def test_prefix(monkeypatch, base_class) -> None: ...
def test_regular_types(monkeypatch, base_class) -> None: ...
def test_simple_newtype(monkeypatch, base_class) -> None: ...
def test_variable_is_loaded_from_source(monkeypatch, base_class) -> None: ...
def test_variable_name_is_calculation_is_used_as_default(monkeypatch) -> None: ...
