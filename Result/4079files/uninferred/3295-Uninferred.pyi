import abc
from abc import abstractmethod
from typing import Any, Generator

class AbstractTransport(metaclass=abc.ABCMeta):
    __metaclass__: Any = ...
    app: Any = ...
    router: Any = ...
    max_message_size: int = ...
    @abstractmethod
    def get_help_message(self) -> Any: ...
    @abstractmethod
    def get_response(self, message: Any) -> Any: ...
    @abstractmethod
    def send_message(self, sender_id: Any, message: Any) -> Any: ...
    @abstractmethod
    def get_end_points_to_add(self) -> Any: ...
    def get_reply_message(self, sender_id: str, message: str) -> Generator[str, None, None]: ...
