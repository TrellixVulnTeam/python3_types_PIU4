import unittest
from typing import Any

MAX: int
MIN: int
ITERATIONS: int

def make_positive(a: int) -> int: ...

class MemoryTests(unittest.TestCase):
    mem: Any = ...
    def setUp(self) -> None: ...
    def test_fetch_register(self) -> None: ...
    def test_set_fetch_register(self) -> None: ...
    def test_set_fetch_register_stress(self) -> None: ...
    def test_register_edge(self) -> None: ...

class OperationTests(unittest.TestCase):
    proc: Any = ...
    r: Any = ...
    def setUp(self) -> None: ...
    def test_arithmetic_ops_stress(self) -> None: ...
    def test_arithmetic_ops_stress_const(self) -> None: ...
    def test_arithmetic_ops_stress_sum(self) -> None: ...
    def test_bitwise_ops_stress(self) -> None: ...
    def test_bitwise_ops(self) -> None: ...
    def test_call(self) -> None: ...

class ProcessorTests(unittest.TestCase):
    proc: Any = ...
    def setUp(self) -> None: ...
    def test_performance(self) -> None: ...
    def test_compare_jump(self) -> None: ...
    def test_data_ops(self) -> None: ...

class AssemblerTest(unittest.TestCase):
    TIMEOUT: float = ...
    a: Any = ...
    proc: Any = ...
    def test_runs(self) -> None: ...
