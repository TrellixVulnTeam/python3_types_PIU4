from .context import Context as Context
from discord.ext import commands
from typing import Any

check: Any
guild_only: Any
is_nsfw: Any
is_owner: Any

def _get_words(view: Any) -> None: ...

class RecalledArgument:
    argument: Any = ...
    def __init__(self, argument: str) -> None: ...

class Command(commands.Command):
    typing: Any = ...
    def __init__(self, *, typing: bool = ..., **kwargs: Any) -> None: ...
    async def do_conversion(self, ctx: Any, converter: Any, argument: Any): ...
    async def transform(self, ctx: Context, param: Any) -> Any: ...
    async def _parse_arguments(self, ctx: Context) -> Any: ...
    async def invoke(self, ctx: Any): ...

class GroupMixin(commands.GroupMixin):
    def command(self, *args: Any, **kwargs: Any): ...
    def group(self, *args: Any, **kwargs: Any): ...

class Group(GroupMixin, commands.Group, Command): ...

def command(name: str=..., cls: Any=..., **attrs: Any) -> Any: ...
def group(name: str=..., invoke_without_command: bool=..., **attrs: Any) -> Any: ...
def schedule(interval: Any, wait_until_ready: bool = ..., run_once: bool = ...): ...
def when_ready(func: Any): ...
def _has_permissions(ctx: Any, target: Any, **perms: Any): ...
def has_permissions(**perms: Any): ...
def bot_has_permissions(**perms: Any): ...
def user_has_permissions(**perms: Any): ...
