from typing import Any

def decode_value(value: Any, encoding: Any) -> str: ...
def parse_email_address(value: str) -> dict: ...

class MailMessage:
    _raw_uid_data: Any = ...
    _raw_flag_data: Any = ...
    id: Any = ...
    obj: Any = ...
    def __init__(self, message_id: str, fetch_data: Any) -> None: ...
    @staticmethod
    def _get_message_data_parts(fetch_data: Any) -> Tuple[bytes, bytes, [bytes]]: ...
    def _parse_addresses(self, value: str) -> Tuple[dict]: ...
    @property
    def uid(self) -> None: ...
    @property
    def flags(self) -> Tuple[str]: ...
    @property
    def subject(self) -> str: ...
    @property
    def from_values(self) -> None: ...
    @property
    def from_(self) -> str: ...
    @property
    def to_values(self) -> Tuple[dict]: ...
    @property
    def to(self) -> Tuple[str]: ...
    @property
    def cc_values(self) -> Tuple[dict]: ...
    @property
    def cc(self) -> Tuple[str]: ...
    @property
    def bcc_values(self) -> Tuple[dict]: ...
    @property
    def bcc(self) -> Tuple[str]: ...
    @property
    def date(self) -> str: ...
    @property
    def text(self) -> str: ...
    @property
    def html(self) -> str: ...
    @property
    def attachments(self) -> [Tuple[str, bytes]]: ...
