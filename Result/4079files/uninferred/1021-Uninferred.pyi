import abc
from iwant_bot import requests
from typing import Any, Optional

class RequestStorage(abc.ABC, metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def __init__(self) -> Any: ...
    @abc.abstractmethod
    def store_request(self, request: Any) -> Any: ...
    @abc.abstractmethod
    def get_activity_requests(self, activity: Optional[Any] = ...) -> Any: ...
    @abc.abstractmethod
    def remove_activity_request(self, request_id: Any, person_id: Any) -> Any: ...
    @abc.abstractmethod
    def wipe_database(self) -> Any: ...
    @abc.abstractmethod
    def resolve_requests(self, requests: Any) -> Any: ...
    @abc.abstractmethod
    def get_requests_by_deadline_proximity(self, deadline: Any, time_buffer_in_seconds: Any) -> Any: ...
    @abc.abstractmethod
    def get_results_by_deadline_proximity(self, deadline: Any, time_proximity: Any) -> Any: ...
    @abc.abstractmethod
    def get_requests_of_result(self, result_id: Any) -> Any: ...
    @abc.abstractmethod
    def get_result(self, result_id: Any) -> requests.Result: ...
    @abc.abstractmethod
    def _update_result_deadline(self, result_id: Any) -> Any: ...
    def _update_result_status(self, result: Any, concerned_requests: Any): ...
    def _find_fitting_result_id(self, results: Any): ...

class MemoryRequestsStorage(RequestStorage):
    _results_by_id: Any = ...
    _all_requests: Any = ...
    _requests_by_id: Any = ...
    _requests_by_result_id: Any = ...
    _result_counter: int = ...
    def __init__(self) -> None: ...
    def store_request(self, request: Any): ...
    def get_activity_requests(self, activity: Optional[Any] = ...): ...
    def remove_activity_request(self, request_id: Any, person_id: Any): ...
    def _remove_request_by_id(self, request_id: Any) -> None: ...
    def _create_result(self, request: Any): ...
    def wipe_database(self) -> None: ...
    def resolve_requests(self, requests_ids: Any): ...
    def get_requests_of_result(self, result_id: Any): ...
    def _update_result_deadline(self, result_id: Any) -> None: ...
    def _get_item_by_deadline_proximity(self, container: Any, deadline: Any, time_proximity: Any): ...
    def get_requests_by_deadline_proximity(self, deadline: Any, time_buffer_in_seconds: Any): ...
    def get_results_by_deadline_proximity(self, deadline: Any, time_proximity: Any): ...
    def get_result(self, result_id: Any): ...
