from nicotb import *
from typing import Any

class Master(Receiver):
    __slots__: Any = ...
    rdy: Any = ...
    ack: Any = ...
    data: Any = ...
    clk: Any = ...
    A: Any = ...
    B: Any = ...
    strict: Any = ...
    def __init__(self, rdy: Bus, ack: Bus, data: Bus, clk: int, A: Any=..., B: Any=..., callbacks: Any=..., strict: Any=...) -> None: ...
    def _D(self, data: Any) -> None: ...
    def _X(self) -> None: ...
    def SendIter(self, it: Any) -> None: ...
    def Send(self, data: Any, imm: bool = ...) -> None: ...
    @property
    def values(self): ...

class Slave(Receiver):
    __slots__: Any = ...
    rdy: Any = ...
    ack: Any = ...
    data: Any = ...
    clk: Any = ...
    A: Any = ...
    B: Any = ...
    def __init__(self, rdy: Bus, ack: Bus, data: Bus, clk: int, A: Any=..., B: Any=..., callbacks: Any=...) -> None: ...
    def Monitor(self) -> None: ...
