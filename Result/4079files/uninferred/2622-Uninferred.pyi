from typing import Any, Optional

__author__: str
__copyright__: str
__credits__: Any
__license__: str
__version__: str
__maintainer__: str
__status__: str

class AssembledParsedFile:
    name: str = ...
    externalReferences: Any = ...
    internalReferences: Any = ...
    text: bytes = ...
    assemblySize: int = ...
    def __init__(self, inputFile: Optional[Any] = ..., skipValidationAndLogic: bool = ...) -> None: ...
    def _parseInputFile(self, inputFile: Optional[Any] = ...) -> None: ...
    def _extractGlobalReferences(self, data: bytes = ...): ...
    def _extractInternalReferences(self, data: bytes = ...): ...
    def _buildDictFromInnerReferenceData(self, data: bytes = ...): ...
    def _extractText(self, data: bytes = ...): ...
    def _extractAssemblySize(self, data: bytes = ...): ...
