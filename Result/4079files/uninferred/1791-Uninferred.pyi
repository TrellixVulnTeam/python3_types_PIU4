from typing import Any, Optional

class FilePathGenerator:
    BUILD_FILE_NAME: str = ...
    _component_generator: Any = ...
    _file_samples: Any = ...
    _file_samples_dirty: bool = ...
    _package_depths: Any = ...
    _file_depths_in_package: Any = ...
    _sizes_by_depth: Any = ...
    _sizes_by_depth_in_package: Any = ...
    _build_file_sizes: Any = ...
    _root: Any = ...
    _package_paths: Any = ...
    _available_directories: Any = ...
    _last_package_path: Any = ...
    _last_package_remaining_targets: Any = ...
    def __init__(self): ...
    def analyze_project_data(self, project_data: Any) -> None: ...
    def add_package_file_sample(self, package_path: Any, relative_path: Any) -> None: ...
    def generate_package_path(self): ...
    def generate_path_in_package(self, package_path: Any, depth: Any, component_generator: Any, extension: Any): ...
    def register_path(self, path: Any) -> None: ...
    def _split_path_into_components(self, path: Any): ...
    def _generate_path(self, package_key: Any, root: Any, depth: Any, sizes_by_depth: Any, component_generator: Any, extension: Optional[Any] = ...): ...
    def _generate_parent(self, package_key: Any, root: Any, depth: Any, sizes_by_depth: Any, component_generator: Any): ...
    def _generate_name(self, directory: Any, generator: Any, extension: Optional[Any] = ...): ...
