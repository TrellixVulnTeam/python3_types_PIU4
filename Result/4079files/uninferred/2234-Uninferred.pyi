import gpflow
from gpflow.test_util import GPflowTestCase
from typing import Any

class FlatModel(gpflow.models.Model):
    def _build_likelihood(self): ...

class TestPriorMode(GPflowTestCase):
    def prepare(self, autobuild: bool = ...): ...
    def testGaussianMode(self) -> None: ...
    def testGaussianModeMatrix(self) -> None: ...
    def testExponential(self) -> None: ...
    def testGammaMode(self) -> None: ...
    def testLaplaceMode(self) -> None: ...
    def testLogNormalMode(self) -> None: ...
    def testBetaMode(self) -> None: ...
    def testUniform(self) -> None: ...

def mc_moments(prior: Any, size: Any = ...): ...
def gaussian_moments(prior: Any): ...
def exponential_moments(prior: Any): ...
def lognormal_moments(prior: Any): ...
def gamma_moments(prior: Any): ...
def laplace_moments(prior: Any): ...
def beta_moments(prior: Any): ...
def uniform_moments(prior: Any): ...
def test_moments(args: Any) -> None: ...
