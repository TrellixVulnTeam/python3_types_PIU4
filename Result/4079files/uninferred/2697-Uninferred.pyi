from django.views.generic import TemplateView, UpdateView
from extra_views import CreateWithInlinesView, InlineFormSet, NamedFormsetsMixin, UpdateWithInlinesView
from typing import Any
from velo.manager.views.participant_manage import ManagerPermissionMixin
from velo.velo.mixins.views import RequestFormKwargsMixin, SetCompetitionContextMixin, SingleTableViewWithRequest

class ManageResultList(ManagerPermissionMixin, SingleTableViewWithRequest):
    model: Any = ...
    table_class: Any = ...
    template_name: str = ...
    def get_context_data(self, **kwargs: Any): ...
    def get_queryset(self): ...

class ManageChipScanList(ManagerPermissionMixin, SingleTableViewWithRequest):
    model: Any = ...
    table_class: Any = ...
    template_name: str = ...
    filter_class: Any = ...
    def get_queryset(self): ...
    def post(self, request: Any, *args: Any, **kwargs: Any): ...

class ManagLapResultInline(InlineFormSet):
    can_order: bool = ...
    model: Any = ...
    form_class: Any = ...
    extra: int = ...
    formset_class: Any = ...
    def get_extra_form_kwargs(self): ...
    def get_formset_kwargs(self): ...

class ManageResultUpdate(ManagerPermissionMixin, SetCompetitionContextMixin, RequestFormKwargsMixin, NamedFormsetsMixin, UpdateWithInlinesView):
    pk_url_kwarg: str = ...
    model: Any = ...
    template_name: str = ...
    form_class: Any = ...
    inlines: Any = ...
    inlines_names: Any = ...
    def get_success_url(self): ...

class ManageResultCreate(ManagerPermissionMixin, SetCompetitionContextMixin, RequestFormKwargsMixin, NamedFormsetsMixin, CreateWithInlinesView):
    pk_url_kwarg: str = ...
    model: Any = ...
    template_name: str = ...
    form_class: Any = ...
    inlines: Any = ...
    inlines_names: Any = ...
    def get_success_url(self): ...

class ManageResultReports(ManagerPermissionMixin, SetCompetitionContextMixin, TemplateView):
    template_name: str = ...
    def post(self, request: Any, *args: Any, **kwargs: Any): ...

class ManageUrlSyncList(ManagerPermissionMixin, SingleTableViewWithRequest):
    model: Any = ...
    table_class: Any = ...
    template_name: str = ...

class ManageUrlSyncUpdate(ManagerPermissionMixin, SetCompetitionContextMixin, RequestFormKwargsMixin, UpdateView):
    pk_url_kwarg: str = ...
    model: Any = ...
    template_name: str = ...
    form_class: Any = ...
    def get_success_url(self): ...
