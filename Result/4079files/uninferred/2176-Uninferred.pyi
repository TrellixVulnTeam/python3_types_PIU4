from gi.repository import Ide
from typing import Any

_: Any

def sniff_python_version(path: Any): ...

class WafBuildSystemDiscovery(Ide.SimpleBuildSystemDiscovery):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

class WafBuildSystem(Ide.Object, Ide.BuildSystem):
    project_file: Any = ...
    python: Any = ...
    waf_local: Any = ...
    def do_get_id(self): ...
    def do_get_display_name(self): ...
    def do_get_priority(self): ...

class WafPipelineAddin(Ide.Object, Ide.PipelineAddin):
    python: Any = ...
    waf_local: Any = ...
    def _create_launcher(self, pipeline: Any): ...
    def do_load(self, pipeline: Any) -> None: ...
    def do_unload(self, application: Any) -> None: ...
    def _query(self, stage: Any, pipeline: Any, targets: Any, cancellable: Any) -> None: ...

class WafBuildTarget(Ide.Object, Ide.BuildTarget):
    name: Any = ...
    def __init__(self, name: Any, *args: Any, **kwargs: Any) -> None: ...
    def do_get_install_directory(self): ...
    def do_get_display_name(self): ...
    def do_get_name(self): ...
    def do_get_kind(self): ...
    def do_get_language(self) -> None: ...
    def do_get_argv(self): ...
    def do_get_priority(self): ...

class WafBuildTargetProvider(Ide.Object, Ide.BuildTargetProvider):
    def do_get_targets_async(self, cancellable: Any, callback: Any, data: Any) -> None: ...
    def do_get_targets_finish(self, result: Any): ...
    def communicate_cb(self, subprocess: Any, result: Any, task: Any) -> None: ...
