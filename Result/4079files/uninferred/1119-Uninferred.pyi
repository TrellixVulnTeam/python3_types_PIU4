from sklearn.base import BaseEstimator
from typing import Any, Optional

class LazyCleanPatchExtractor(BaseEstimator):
    patch_size: Any = ...
    max_patches: Any = ...
    random_state: Any = ...
    def __init__(self, patch_size: Optional[Any] = ..., random_state: Optional[Any] = ..., max_patches: Optional[Any] = ...) -> None: ...
    patches_: Any = ...
    indices_3d: Any = ...
    def fit(self, X: Any, y: Optional[Any] = ...): ...
    def partial_transform(self, X: Optional[Any] = ..., batch: Optional[Any] = ...): ...
    def transform(self, X: Optional[Any] = ...): ...
    def shuffle(self, permutation: Optional[Any] = ...) -> None: ...
    @property
    def n_patches_(self): ...
    @property
    def patch_shape_(self): ...
