from typing import Any, Optional

class BaseConnection:
    app: Any = ...
    friend: Any = ...
    active: bool = ...
    running: bool = ...
    connect_task: Any = ...
    ssl_context: Any = ...
    pause_time: int = ...
    def __init__(self, app: Any, friend: Any) -> None: ...
    async def connect(self) -> None: ...
    def restart_connection(self) -> None: ...
    async def ping(self) -> None: ...
    async def send(self, message: Any): ...
    async def offer_file(self, path: Any) -> None: ...
    async def get_file(self, path: Any, range: Optional[Any] = ...): ...

class TorConnection(BaseConnection):
    host: Any = ...
    pause_time: int = ...
    def __init__(self, app: Any, friend: Any) -> None: ...
    session: Any = ...
    async def _connect(self) -> None: ...
    def __str__(self): ...

class DirectConnection(BaseConnection):
    pause_time: int = ...
    ping_task: Any = ...
    def __init__(self, app: Any, friend: Any) -> None: ...
    host: Any = ...
    session: Any = ...
    async def _connect(self) -> None: ...
    def __str__(self): ...
