import abc
from abc import ABC, abstractmethod
from typing import Any

class DatasetDownloader(ABC, metaclass=abc.ABCMeta):
    @abstractmethod
    def download_and_extract_dataset(self, destination_directory: str) -> Any: ...
    @abstractmethod
    def get_dataset_download_url(self) -> str: ...
    @abstractmethod
    def get_dataset_filename(self) -> str: ...
    @staticmethod
    def copytree(src: Any, dst: Any) -> None: ...
    def extract_dataset(self, absolute_path_to_folder: str, dataset_filename: str=...) -> Any: ...
    def clean_up_temp_directory(self, temp_directory: Any) -> None: ...
    def download_file(self, url: Any, destination_filename: Any=...) -> str: ...
