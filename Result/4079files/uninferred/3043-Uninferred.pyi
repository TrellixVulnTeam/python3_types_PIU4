import logging
from syncrypt.models import Vault as Vault
from trio_typing import Nursery as Nursery
from typing import Any

class VaultLoggerAdapter(logging.LoggerAdapter):
    vault: Any = ...
    def __init__(self, vault: Vault, logger: Any) -> None: ...
    def process(self, msg: Any, kwargs: Any): ...

class VaultController:
    app: Any = ...
    vault: Any = ...
    ready: Any = ...
    nursery: Any = ...
    update_on_idle: Any = ...
    logger: Any = ...
    file_changes_send_channel: Any = ...
    file_changes_receive_channel: Any = ...
    cancel_scope: Any = ...
    def __init__(self, app: Any, vault: Any, update_on_idle: bool = ...) -> None: ...
    async def resync(self) -> None: ...
    async def handle_state_transition(self, new_state: Any, old_state: Any) -> None: ...
    async def autopull_vault_task(self) -> None: ...
    async def watchdog_task(self) -> None: ...
    async def respond_to_file_changes(self) -> None: ...
    async def cancel(self) -> None: ...
    task_status: Any = ...
    do_init: Any = ...
    do_push: Any = ...
    async def run(self, do_init: Any, do_push: Any, task_status: Any = ...) -> None: ...
    async def loop(self) -> None: ...
