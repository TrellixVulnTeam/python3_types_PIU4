from typing import Any

class MockComponentA:
    name: Any = ...
    args: Any = ...
    builder_used_for_setup: Any = ...
    def __init__(self, *args: Any, name: str = ...) -> None: ...

class MockComponentB:
    name: Any = ...
    args: Any = ...
    builder_used_for_setup: Any = ...
    def __init__(self, *args: Any, name: str = ...) -> None: ...
    def setup(self, builder: Any) -> None: ...
    def metrics(self, _: Any, metrics: Any): ...

class NamelessComponent:
    args: Any = ...
    def __init__(self, *args: Any) -> None: ...

class Listener(MockComponentB):
    post_setup_called: bool = ...
    time_step__prepare_called: bool = ...
    time_step_called: bool = ...
    time_step__cleanup_called: bool = ...
    collect_metrics_called: bool = ...
    simulation_end_called: bool = ...
    def __init__(self, *args: Any, name: str = ...) -> None: ...
    def setup(self, builder: Any) -> None: ...
    def on_post_setup(self, _: Any) -> None: ...
    def on_time_step__prepare(self, _: Any) -> None: ...
    def on_time_step(self, _: Any) -> None: ...
    def on_time_step__cleanup(self, _: Any) -> None: ...
    def on_collect_metrics(self, _: Any) -> None: ...
    def on_simulation_end(self, _: Any) -> None: ...
