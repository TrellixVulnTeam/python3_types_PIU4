from antlr4 import *
from equelParser import equelParser
from typing import Any

class equelParserVisitor(ParseTreeVisitor):
    def visitEquel(self, ctx: equelParser.EquelContext) -> Any: ...
    def visitVerb(self, ctx: equelParser.VerbContext) -> Any: ...
    def visitGeneric(self, ctx: equelParser.GenericContext) -> Any: ...
    def visitShortcut(self, ctx: equelParser.ShortcutContext) -> Any: ...
    def visitSearchExpr(self, ctx: equelParser.SearchExprContext) -> Any: ...
    def visitQueryString(self, ctx: equelParser.QueryStringContext) -> Any: ...
    def visitFirstSearchExpr(self, ctx: equelParser.FirstSearchExprContext) -> Any: ...
    def visitQueryStringExpr(self, ctx: equelParser.QueryStringExprContext) -> Any: ...
    def visitFilterExpr(self, ctx: equelParser.FilterExprContext) -> Any: ...
    def visitAggregationExpr(self, ctx: equelParser.AggregationExprContext) -> Any: ...
    def visitPostprocExpr(self, ctx: equelParser.PostprocExprContext) -> Any: ...
    def visitOutputExpr(self, ctx: equelParser.OutputExprContext) -> Any: ...
    def visitShortcutExpr(self, ctx: equelParser.ShortcutExprContext) -> Any: ...
    def visitKVParam(self, ctx: equelParser.KVParamContext) -> Any: ...
    def visitUnnamedValue(self, ctx: equelParser.UnnamedValueContext) -> Any: ...
    def visitUnnamedList(self, ctx: equelParser.UnnamedListContext) -> Any: ...
    def visitSingleParam(self, ctx: equelParser.SingleParamContext) -> Any: ...
    def visitName(self, ctx: equelParser.NameContext) -> Any: ...
    def visitSimpleUQValue(self, ctx: equelParser.SimpleUQValueContext) -> Any: ...
    def visitSimpleSQValue(self, ctx: equelParser.SimpleSQValueContext) -> Any: ...
    def visitSimpleDQValue(self, ctx: equelParser.SimpleDQValueContext) -> Any: ...
    def visitNestedSearch(self, ctx: equelParser.NestedSearchContext) -> Any: ...
    def visitValueList(self, ctx: equelParser.ValueListContext) -> Any: ...
