from typing import Any

INPUT_IMAGE_DIR: str
INTERPOLATED_IMAGE_DIR: str
TRUE_IMAGE_DIR: str

def build_image_set(file_path: Any, channels: int = ..., scale: int = ..., convert_ycbcr: bool = ..., resampling_method: str = ..., print_console: bool = ...): ...
def load_input_image(filename: Any, width: int = ..., height: int = ..., channels: int = ..., scale: int = ..., alignment: int = ..., convert_ycbcr: bool = ..., print_console: bool = ...): ...
def build_input_image(image: Any, width: int = ..., height: int = ..., channels: int = ..., scale: int = ..., alignment: int = ..., convert_ycbcr: bool = ...): ...

class BatchDataSets:
    scale: Any = ...
    batch_image_size: Any = ...
    stride: Any = ...
    channels: Any = ...
    resampling_method: Any = ...
    count: int = ...
    batch_dir: Any = ...
    batch_index: Any = ...
    def __init__(self, scale: Any, batch_dir: Any, batch_image_size: Any, stride_size: int = ..., channels: int = ..., resampling_method: str = ...) -> None: ...
    def build_batch(self, data_dir: Any) -> None: ...
    def load_batch_counts(self) -> None: ...
    input_images: Any = ...
    input_interpolated_images: Any = ...
    true_images: Any = ...
    def load_all_batch_images(self) -> None: ...
    def release_batch_images(self) -> None: ...
    def is_batch_exist(self): ...
    index: int = ...
    def init_batch_index(self) -> None: ...
    def get_next_image_no(self): ...
    def load_batch_image_from_disk(self, image_number: Any): ...
    def load_batch_image(self, max_value: Any): ...
    def load_input_batch_image(self, image_number: Any): ...
    def load_interpolated_batch_image(self, image_number: Any): ...
    def load_true_batch_image(self, image_number: Any): ...
    def save_input_batch_image(self, image_number: Any, image: Any): ...
    def save_interpolated_batch_image(self, image_number: Any, image: Any): ...
    def save_true_batch_image(self, image_number: Any, image: Any): ...

class DynamicDataSets:
    scale: Any = ...
    batch_image_size: Any = ...
    channels: Any = ...
    resampling_method: Any = ...
    filenames: Any = ...
    count: int = ...
    batch_index: Any = ...
    def __init__(self, scale: Any, batch_image_size: Any, channels: int = ..., resampling_method: str = ...) -> None: ...
    def set_data_dir(self, data_dir: Any) -> None: ...
    index: int = ...
    def init_batch_index(self) -> None: ...
    def get_next_image_no(self): ...
    def load_batch_image(self, max_value: Any): ...
    def load_random_patch(self, filename: Any): ...
