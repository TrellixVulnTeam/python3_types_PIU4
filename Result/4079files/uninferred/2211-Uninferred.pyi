from .schema import ResourceObject
from rest_framework import serializers
from typing import Any, Dict, Type, TypeVar

T = TypeVar('T', bound=serializers.Serializer)

def from_serializer(serializer: serializers.Serializer, api_type: str, *, id_field: str=..., **kwargs: Any) -> Type[ResourceObject]: ...

class AutoSchemaDescriptor:
    api_type: Any = ...
    id_field: Any = ...
    init_kwargs: Any = ...
    _cached: Any = ...
    def __init__(self, api_type: str, id_field: str, init_kwargs: Dict[str, Any]) -> None: ...
    def __get__(self, serializer: T, objtype: Type[T]) -> Type[ResourceObject]: ...

def auto_schema(api_type: str, *, id_field: str=..., **kwargs: Any) -> AutoSchemaDescriptor: ...
