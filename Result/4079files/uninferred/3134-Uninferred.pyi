from typing import Any
from unittest import TestCase

class KobinTests(TestCase):
    app: Any = ...
    dummy_start_response: Any = ...
    def setUp(self): ...
    def test_route(self) -> None: ...
    def test_typed_url_var(self) -> None: ...
    def test_404_not_found(self) -> None: ...
    def test_404_when_cast_error(self) -> None: ...
    def test_response_status_when_500_raised(self) -> None: ...
    def test_response_body_when_500_raised_and_enable_debugging(self) -> None: ...
    def test_response_body_when_500_raised_and_disable_debugging(self) -> None: ...
    def test_handled_body_message_when_404_not_found(self) -> None: ...
    def test_wsgi(self) -> None: ...

class KobinHookTests(TestCase):
    app: Any = ...
    dummy_start_response: Any = ...
    before_counter: int = ...
    def setUp(self): ...
    def test_before_request(self) -> None: ...
    def test_after_request(self) -> None: ...

class HandleUnexpectedExceptionTests(TestCase):
    def test_get_exception_message_when_debugging(self) -> None: ...
    def test_get_exception_message_when_not_debugging(self) -> None: ...

class KobinAfterHookTests(TestCase):
    app: Any = ...
    dummy_start_response: Any = ...
    before_counter: int = ...
    def setUp(self): ...
    def test_after_request(self) -> None: ...

class KobinFrozenTests(TestCase):
    app: Any = ...
    before_counter: int = ...
    def setUp(self): ...
    def test_can_change_state_before_running(self) -> None: ...

class ConfigTests(TestCase):
    base_path: Any = ...
    def setUp(self) -> None: ...
    def test_lazy_reverse_router(self, app_mock: Any): ...
    def test_lazy_reverse_router_not_found(self, app_mock: Any) -> None: ...
    def test_load_jinja2_env_with_globals(self) -> None: ...
    def test_load_jinja2_env_with_filters(self): ...
    def test_constructor(self) -> None: ...
    def test_load_from_module(self) -> None: ...
    def test_load_from_pyfile(self) -> None: ...
    def test_config_has_not_lower_case_variable(self) -> None: ...
    def test_failure_for_loading_config(self) -> None: ...
