import asyncio
from typing import Any, List

class Table:
    _rows: Any = ...
    _widths: Any = ...
    def __init__(self, *column_titles: str) -> None: ...
    def _update_widths(self, row: tuple) -> Any: ...
    def add_row(self, *row: str) -> Any: ...
    def add_rows(self, *rows: List[str]) -> Any: ...
    def _render(self): ...
    async def render(self, loop: asyncio.AbstractEventLoop=...) -> Any: ...

class Timer:
    start: Any = ...
    end: Any = ...
    def __init__(self) -> None: ...
    def __enter__(self): ...
    async def __aenter__(self): ...
    def __exit__(self, exc_type: Any, exc_val: Any, exc_tb: Any) -> None: ...
    async def __aexit__(self, exc_type: Any, exc_val: Any, exc_tb: Any): ...
    def __str__(self): ...
    @property
    def duration(self): ...
