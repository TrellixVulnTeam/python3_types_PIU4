from thrift.perf.load.services import LoadTestInterface
from typing import Any, Optional

def us_to_sec(microseconds: Any): ...
def burn_in_executor(us: Any) -> None: ...

class LoadTestHandler(LoadTestInterface):
    loop: Any = ...
    pool: Any = ...
    def __init__(self, loop: Optional[Any] = ...) -> None: ...
    async def noop(self) -> None: ...
    async def onewayNoop(self) -> None: ...
    async def asyncNoop(self) -> None: ...
    async def sleep(self, us: Any) -> None: ...
    async def onewaySleep(self, us: Any) -> None: ...
    async def burn(self, us: Any): ...
    async def onewayBurn(self, us: Any): ...
    async def badSleep(self, us: Any) -> None: ...
    async def badBurn(self, us: Any): ...
    async def throwError(self, code: Any) -> None: ...
    async def throwUnexpected(self, code: Any) -> None: ...
    async def send(self, data: Any) -> None: ...
    async def onewaySend(self, data: Any) -> None: ...
    async def recv(self, bytes: Any): ...
    async def sendrecv(self, data: Any, recvBytes: Any): ...
    async def echo(self, data: Any): ...
    async def add(self, a: Any, b: Any): ...
    async def largeContainer(self, data: Any) -> None: ...
    async def iterAllFields(self, data: Any): ...
