from squeezealexa.settings import MqttSettings
from squeezealexa.transport.mqtt import CustomClient
from typing import Any, Optional

class NoTlsCustomClient(CustomClient):
    def _configure_tls(self) -> None: ...

class EchoingFakeClient(NoTlsCustomClient):
    PREFIX: str = ...
    subscribed: Any = ...
    unsubscribed: Any = ...
    def __init__(self, settings: MqttSettings) -> None: ...
    def connect(self, host: Optional[Any] = ..., port: Optional[Any] = ..., keepalive: int = ..., bind_address: str = ...): ...
    def subscribe(self, topic: Any, qos: int = ...): ...
    def publish(self, topic: Any, payload: Optional[Any] = ..., qos: int = ..., retain: bool = ...): ...
    def unsubscribe(self, topic: Any): ...
    def react_to_msg(self, payload: Any) -> None: ...
    def __str__(self) -> str: ...
    def reconnect(self): ...

def fake_client() -> None: ...

class TestMqttTransport:
    def test_communicate(self, fake_client: Any) -> None: ...
    def test_lazy_communicate(self, fake_client: Any) -> None: ...
    def test_multiline_communicate(self, fake_client: Any) -> None: ...
    def test_details(self, fake_client: Any) -> None: ...
    def test_stop(self, fake_client: Any) -> None: ...

class TestCustomClient:
    def test_get_conf_file(self) -> None: ...
    def test_get_conf_file_raises(self) -> None: ...

class TestMqttSettings:
    def test_configured(self) -> None: ...
