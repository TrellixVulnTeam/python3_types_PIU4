from nassl import _nassl as _nassl
from typing import Any

class TestSslClientClientAuthentication:
    def test_client_authentication_no_certificate_supplied(self, ssl_client_cls: Any) -> None: ...
    def test_client_authentication_no_certificate_supplied_but_ignore(self, ssl_client_cls: Any) -> None: ...
    def test_client_authentication_succeeds(self, ssl_client_cls: Any) -> None: ...

class TestSslClientOnline:
    def test(self, ssl_client_cls: Any) -> None: ...

class TestModernSslClientOnline:
    def test_get_verified_chain(self) -> None: ...
    def test_get_verified_chain_but_validation_failed(self) -> None: ...

class TestLegacySslClientOnlineSsl2:
    def test_ssl_2(self) -> None: ...

class TestModernSslClientOnlineTls13:
    def test_set_ciphersuites(self) -> None: ...
    def test_tls_1_3(self) -> None: ...
    @staticmethod
    def _create_tls_1_3_session(server_host: str, server_port: int) -> _nassl.SSL_SESSION: ...
    def test_tls_1_3_write_early_data_does_not_finish_handshake(self) -> None: ...
    def test_tls_1_3_write_early_data_fail_when_used_on_non_reused_session(self) -> None: ...
    def test_tls_1_3_write_early_data_fail_when_trying_to_send_more_than_max_early_data(self) -> None: ...
    def test_client_authentication_tls_1_3(self) -> None: ...
