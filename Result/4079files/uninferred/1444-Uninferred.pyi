from typing import Any, Optional

def stringify(s: Any): ...

external_taxon: Any
internal_taxon: Any

def normalize_taxon(taxon: Any): ...

class EntityWriter:
    def _split_prefix(self, ref: Any): ...
    def _write_row(self, vals: Any) -> None: ...
    def write_entity(self, e: Any) -> None: ...
    def write(self, entities: Any, meta: Optional[Any] = ...) -> None: ...

class GpiWriter(EntityWriter):
    file: Any = ...
    def __init__(self, file: Optional[Any] = ...) -> None: ...
    def write_entity(self, entity: Any) -> None: ...
