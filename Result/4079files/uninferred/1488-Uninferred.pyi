from PyQt5.QtCore import QObject
from PyQt5.QtGui import QColor, QFont, QTextCharFormat
from PyQt5.QtQml import QJSValue
from PyQt5.QtQuick import QQuickItem as QQuickItem
from typing import Any, List, Optional

__author__: str
__copyright__: str
__credits__: Any
__license__: str

class ExpSyntaxHighlighter(QObject):
    searchMatchedLinesChanged: Any = ...
    _syntax_highlighter: Any = ...
    _base_font: Any = ...
    _search_matched_lines: Any = ...
    def __init__(self, parent: Optional[QObject]=...) -> None: ...
    def _setupFormat(self, color: QColor, fontSettings: QFont, colorIsForeground: bool=...) -> QTextCharFormat: ...
    def addHighlightMultiColorRule(self, patterns: List[str], color: QJSValue, fontSettings: QFont) -> None: ...
    def addHighlightSingleColorRule(self, patterns: List[str], color: QColor, fontSettings: QFont) -> None: ...
    def setSearchPattern(self, pattern: str) -> None: ...
    def searchMatchedLines(self): ...
    @target.setter
    def target(self, v: QQuickItem) -> None: ...
