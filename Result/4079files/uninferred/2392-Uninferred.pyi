from gempy.core.grid_modules.grid_types import CenteredGrid
from typing import Any, Optional

class GeophysicsPreprocessing(CenteredGrid):
    kernel_centers: Any = ...
    kernel_dxyz_right: Any = ...
    kernel_dxyz_left: Any = ...
    tz: Any = ...
    def __init__(self, centered_grid: CenteredGrid=...) -> None: ...
    def set_tz_kernel(self, **kwargs: Any): ...

class GravityPreprocessing:
    interp_data: Any = ...
    ai_extent: Any = ...
    ai_resolution: Any = ...
    model_grid: Any = ...
    eu: Any = ...
    airborne_plane: Any = ...
    model_resolution: Any = ...
    vox_size: Any = ...
    range_max: Any = ...
    b_all: Any = ...
    def __init__(self, interp_data: Any, ai_extent: Any, ai_resolution: Any, ai_z: Optional[Any] = ..., range_max: Optional[Any] = ...) -> None: ...
    def compute_gravity(self, n_chunck_o: int = ...): ...
    def default_range(self): ...
    @staticmethod
    def compile_eu_f(): ...
    def set_airborne_plane(self, z: Any, ai_resolution: Any): ...
    def set_vox_size(self): ...

def precomputations_gravity(interp_data: Any, n_chunck: int = ..., densities: Optional[Any] = ...): ...
def set_densities(interp_data: Any, densities: Any) -> None: ...
def set_geophysics_obj(interp_data: Any, ai_extent: Any, ai_resolution: Any, ai_z: Optional[Any] = ..., range_max: Optional[Any] = ...): ...

class GeoPhysiscs:
    gravity: Any = ...
    magnetics: Any = ...
    def __init__(self) -> None: ...
    def create_geophy(self) -> None: ...
    def set_gravity_precomputations(self) -> None: ...
