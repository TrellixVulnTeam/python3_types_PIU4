from typing import Any, List, Optional

class DataProcessor:
    arg_types: Any = ...
    max_sentence_length: Any = ...
    max_arg_length: Any = ...
    word_index: Any = ...
    def __init__(self) -> None: ...
    def index_data(self, filename: Any, add_new_words: bool = ..., pad_info: Optional[Any] = ..., include_sentences_in_events: bool = ...): ...
    def _index_string(self, string: str, add_new_words: Any=...) -> Any: ...
    @staticmethod
    def _make_one_hot(label_indices: Any): ...
    def pad_data(self, indexed_data: Any, pad_info: Any): ...
    def _pad_indexed_string(self, indexed_string: List[int], max_string_length: int) -> Any: ...
    def get_pad_info(self): ...
    def get_embedding(self, embedding_file: Any): ...
    def get_vocabulary_size(self): ...
