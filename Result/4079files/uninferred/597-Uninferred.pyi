from typing import Any, Optional

class Singleton(type):
    instance: Any = ...
    def __call__(cls, *args: Any, **kwargs: Any): ...

class FoodParser:
    def __init__(self) -> None: ...
    def refresh(self, date: Optional[Any] = ...) -> None: ...
    def get_food(self, place: Any): ...

class SubwayParser(metaclass=Singleton):
    station_name_url: str = ...
    arrival_info_url: str = ...
    def __init__(self) -> None: ...
    def get_station_stat(self, station_name: Any): ...

class BusParser(metaclass=Singleton):
    url: str = ...
    def __init__(self) -> None: ...
    def get_station_stat(self, station_number: Any): ...

class LibParser(metaclass=Singleton):
    url: str = ...
    seat: Any = ...
    def __init__(self) -> None: ...
    def get_lib_stat(self): ...

subway_api: Any
bus_api: Any
lib_api: Any
food_api: Any
