from avatar.bintools.gdb.gdb_debugger import GdbDebugger as GdbDebugger
from avatar.bintools.gdb.mi_parser import Async as Async
from avatar.debuggable import Breakpoint as Breakpoint
from avatar.system import EVENT_BREAKPOINT as EVENT_BREAKPOINT, EVENT_RUNNING as EVENT_RUNNING, EVENT_STOPPED as EVENT_STOPPED
from avatar.targets.target import Target
from queue import Queue as Queue
from typing import Any

log: Any

class NullTarget(Target):
    def __init__(self, system: Any, verbose: bool = ...) -> None: ...
    def init(self) -> None: ...
    def start(self) -> None: ...
    def write_typed_memory(self, address: Any, size: Any, data: Any) -> None: ...
    def read_typed_memory(self, address: Any, size: Any) -> None: ...
    def set_register(self, reg: Any, val: Any) -> None: ...
    def get_register(self, reg: Any) -> None: ...
    def stop(self) -> None: ...
    def set_breakpoint(self, address: Any, **properties: Any) -> None: ...
    def cont(self) -> None: ...

def init_null_target(system: Any) -> None: ...
