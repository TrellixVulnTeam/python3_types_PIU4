from pyDist import Interfaces as Interfaces
from pyDist.comms.Logging import Log
from typing import Any

class WorkItemOptimizer(Log):
    interfaces: Any = ...
    task_manager: Any = ...
    _condition: Any = ...
    def __init__(self, interface_holder: Interfaces.InterfaceHolder, num_cores: Any) -> None: ...
    def add_work_item(self, work_item: Any, data: Any): ...
    def add_network_item(self, work_item: Any, data: Any): ...
    def execute_work_item(self, work_item: Any, user: Any): ...
    def work_item_finished_callback(self, future: Any) -> None: ...
    def run_work_item_from_network(self): ...
    def run_work_item_from_user(self): ...
    def disperse_work_item(self): ...
    def find_open_node(self): ...
    def send_work_item_to_node(self, node: Any, work_item: Any): ...
