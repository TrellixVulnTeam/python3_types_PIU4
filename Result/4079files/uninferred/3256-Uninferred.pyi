from .path import LinkAttributes, Path
from typing import Any

class BaseMessage:
    id: Any = ...
    seq: Any = ...
    addr_v4: Any = ...
    addr_v6: Any = ...
    networks: Any = ...
    routing_data: Any = ...
    node_data: Any = ...
    reflect: Any = ...
    reflected: Any = ...
    def __init__(self) -> None: ...
    def apply_base_data(self, msg: Any) -> None: ...

class Message(BaseMessage):
    _base: Any = ...
    rx_time: Any = ...
    router_id: Any = ...
    interface: Any = ...
    def __init__(self, msg: dict, interface: dict, router_id: str, rx_time: Any) -> None: ...
    def apply_new_msg(self, msg: dict, rx_time: Any) -> bool: ...
    def _validate_msg(self, msg: dict) -> Any: ...
    seq: Any = ...
    addr_v4: Any = ...
    addr_v6: Any = ...
    routing_data: Any = ...
    node_data: Any = ...
    reflect: Any = ...
    reflected: Any = ...
    def _apply_full(self, msg: dict) -> bool: ...
    networks: Any = ...
    def _apply_partial(self, msg: dict) -> bool: ...
    def _save_networks(self, msg: dict) -> bool: ...
    def _get_path(self, path: str, link_attributes: LinkAttributes) -> Path: ...
