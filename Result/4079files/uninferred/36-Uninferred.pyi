from django.test import TestCase
from factory_djoy import CleanModelFactory
from typing import Any

class SimpleItemFactory(CleanModelFactory):
    class Meta:
        model: Any = ...

class SimpleItemFactoryGOC(CleanModelFactory):
    class Meta:
        model: Any = ...
        django_get_or_create: Any = ...

class ItemFactory(CleanModelFactory):
    class Meta:
        model: Any = ...
    name: Any = ...

class FixedItemFactory(CleanModelFactory):
    class Meta:
        model: Any = ...
    name: str = ...

class MaterialFactory(CleanModelFactory):
    class Meta:
        model: Any = ...

class TestSimpleItemFactory(TestCase):
    def test_happy(self) -> None: ...
    def test_happy_build(self) -> None: ...
    def test_happy_build_save(self) -> None: ...
    def test_happy_build_not_clean(self) -> None: ...
    def test_missing_name(self) -> None: ...
    def test_no_get_or_create(self) -> None: ...
    def test_name_too_long(self) -> None: ...

class TestItemFactory(TestCase):
    def test_make_single(self) -> None: ...
    def test_make_multi(self) -> None: ...

class TestFixedItemFactory(TestCase):
    def test_make_single(self) -> None: ...
    def test_duplicate(self) -> None: ...
    def test_happy_build_no_name(self) -> None: ...

class TestMaterialFactory(TestCase):
    def test_make_single(self) -> None: ...
    def test_error_all(self) -> None: ...
