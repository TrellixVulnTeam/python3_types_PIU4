from allennlp.data.fields.field import DataArray, Field
from typing import Any, Dict, List, Mapping

class MetadataField(Field[DataArray], Mapping[str, Any]):
    metadata: Any = ...
    def __init__(self, metadata: Any) -> None: ...
    def __getitem__(self, key: str) -> Any: ...
    def __iter__(self) -> Any: ...
    def __len__(self): ...
    def get_padding_lengths(self) -> Dict[str, int]: ...
    def as_tensor(self, padding_lengths: Dict[str, int]) -> DataArray: ...
    def empty_field(self) -> MetadataField: ...
    def batch_tensors(self, tensor_list: List[DataArray]) -> List[DataArray]: ...
    def __str__(self) -> str: ...
