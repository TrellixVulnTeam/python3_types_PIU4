import requests
from flask import Response
from typing import Any

PROXY_CHUNK_SIZE: int
PROXY_METHODS: Any
PROXY_CACHE_AGE: int
PROXY_CACHE_METHODS: Any
PROXY_CACHE_STATUS_CODES: Any
app: Any

class APIRequestProxyError(Exception): ...
class CacheMiss(Exception): ...

class APIRequestProxyUpstream:
    _method: Any = ...
    url: Any = ...
    headers: Any = ...
    payload: Any = ...
    def __init__(self) -> None: ...
    @property
    def method(self) -> str: ...
    @method.setter
    def method(self, value: str) -> None: ...
    def make_request(self, stream: Any=...) -> requests.Response: ...
    def __str__(self) -> str: ...
    __repr__: Any = ...

class APIRequestProxy:
    proxy_request_cache: Any = ...
    upstream: Any = ...
    @classmethod
    def initialize_cache(cls: Any) -> None: ...
    response: Any = ...
    _enable_cache: Any = ...
    _cache_age: Any = ...
    _proxy_request: Any = ...
    def __init__(self) -> None: ...
    @property
    def headers(self) -> dict: ...
    @headers.setter
    def headers(self, value: dict) -> None: ...
    @property
    def method(self) -> str: ...
    @method.setter
    def method(self, value: str) -> None: ...
    @property
    def url(self) -> str: ...
    @url.setter
    def url(self, value: str) -> None: ...
    @property
    def payload(self) -> dict: ...
    @payload.setter
    def payload(self, value: dict) -> None: ...
    @property
    def enable_cache(self) -> bool: ...
    @enable_cache.setter
    def enable_cache(self, value: bool) -> None: ...
    @property
    def cache_age(self) -> int: ...
    @cache_age.setter
    def cache_age(self, value: int) -> None: ...
    @property
    def proxy_request(self) -> dict: ...
    @proxy_request.setter
    def proxy_request(self, value: dict) -> None: ...
    @property
    def chunk_size(self) -> int: ...
    @property
    def status_passthrough(self) -> bool: ...
    def response_from_upstream(self) -> Response: ...
    def response_from_cache(self) -> Response: ...
    def make_response(self) -> None: ...
    def stream_response(self) -> Response: ...
    def __str__(self) -> str: ...
    __repr__: Any = ...

def flask_restful_proxy(): ...
