import abc
from abc import abstractmethod
from typing import Any

class Mover(metaclass=abc.ABCMeta):
    __metaclass__: Any = ...
    @abstractmethod
    def _run(self) -> Any: ...
    track: Any = ...
    ids: Any = ...
    canvases: Any = ...
    levels: int = ...
    is_miner: bool = ...
    maze: Any = ...
    halo: Any = ...
    body: Any = ...
    goal: Any = ...
    size: Any = ...
    offset: Any = ...
    def __init__(self, maze: Any) -> None: ...
    def run(self) -> None: ...
    def dig(self, cell: Any) -> None: ...
    def go(self, cell: Any) -> None: ...
    def finished(self): ...
    def tk_init(self, maze: Any) -> None: ...
    def cell(self): ...
    def tk_move(self, dim: Any) -> None: ...
    def tk_paint(self) -> None: ...
