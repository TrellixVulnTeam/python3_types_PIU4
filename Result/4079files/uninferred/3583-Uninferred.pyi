from collections import namedtuple
from fcatalog.proto.serializer import MsgDef, ProtoDef
from typing import Any

FSimilar = namedtuple('FSimilar', ['name', 'comment', 'sim_grade'])

class ChooseDB(MsgDef):
    afields: Any = ...
    def serialize(self, msg_inst: Any) -> bytes: ...
    def deserialize(self, msg_data: bytes) -> Any: ...

class AddFunction(MsgDef):
    afields: Any = ...
    def serialize(self, msg_inst: Any) -> bytes: ...
    def deserialize(self, msg_data: bytes) -> Any: ...

class RequestSimilars(MsgDef):
    afields: Any = ...
    def serialize(self, msg_inst: Any) -> bytes: ...
    def deserialize(self, msg_data: bytes) -> Any: ...

class ResponseSimilars(MsgDef):
    afields: Any = ...
    def serialize(self, msg_inst: Any) -> bytes: ...
    def deserialize(self, msg_data: bytes) -> Any: ...

class FCatalogProtoDef(ProtoDef):
    incoming_msgs: Any = ...
    outgoing_msgs: Any = ...

cser_serializer: Any
