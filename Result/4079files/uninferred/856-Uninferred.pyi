import abc
from ..githubhandler import GitHubAppHandler, GitHubHandler
from ..utils import setup_logger as setup_logger
from celery import Task
from typing import Any, Optional

logger: Any

class AsyncTask(Task, metaclass=abc.ABCMeta):
    acks_late: bool = ...
    ghapi: GitHubHandler = ...
    ghappapi: GitHubAppHandler = ...
    _async_run: Any = ...
    def bind(self, app: Optional[Any] = ...): ...
    async def async_init(self) -> None: ...
    async def async_pre_run(self, args: Any, _kwargs: Any) -> None: ...
    @abc.abstractmethod
    def run(self, *_args: Any, **_kwargs: Any) -> Any: ...
    @property
    def loop(self): ...

def custom_dumps(string: Any): ...
def custom_loads(string: Any): ...

capp: Any

def setup_new_celery_process(sender: Optional[Any] = ..., conf: Optional[Any] = ..., **_kwargs: Any) -> None: ...
