from hypothesis import settings as settings
from hypothesis.strategies import sets as sets
from typing import Any, Optional

def bst_invariant(t: Any, min_key: Any = ..., max_key: Any = ..., parent: Optional[Any] = ...): ...
def check_rb_tree_properties(tree: Any, root: bool = ...): ...
def check_avl_properties(tree: Any): ...
def is_left_child(parent: Any, child: Any): ...
def is_right_child(parent: Any, child: Any): ...
def test_bst() -> None: ...
def test_bst_sort() -> None: ...
def test_bst_delete() -> None: ...
def test_bst_invariant(t: Any) -> None: ...
def test_bst_invariant_rotations(t: Any, left: Any) -> None: ...
def test_left_rotate() -> None: ...
def test_right_rotate() -> None: ...
def test_rb_tree() -> None: ...
def test_rb_tree_invariant(t: Any) -> None: ...
def test_rb_deletion() -> None: ...
def insert_delete_queries(draw: Any): ...
def test_rb_queries(queries: Any) -> None: ...
def test_avl_tree_invariant(t: Any) -> None: ...
def test_avl_queries(queries: Any) -> None: ...
