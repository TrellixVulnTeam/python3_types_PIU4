from cate.util.monitor import Monitor
from typing import Any
from unittest import TestCase

class NullMonitorTest(TestCase):
    def test_NONE(self) -> None: ...
    def test_child_monitor(self) -> None: ...
    def test_cancel(self) -> None: ...

class ConsoleMonitorTest(TestCase):
    def test_console_monitor_wo_progress_bar(self) -> None: ...
    def test_console_monitor_with_progress_bar(self) -> None: ...
    def test_label_required(self) -> None: ...
    def test_child_monitor(self) -> None: ...
    def test_cancel(self) -> None: ...

class RecordingMonitorTest(TestCase):
    def test_recording_monitor(self) -> None: ...
    def test_context_manager(self) -> None: ...

class ChildMonitorTest(TestCase):
    def test_child_monitor(self) -> None: ...
    def test_cancel(self) -> None: ...
    def test_no_label(self) -> None: ...

class RecordingMonitor(Monitor):
    _records: Any = ...
    _label: Any = ...
    _worked: Any = ...
    _total_work: Any = ...
    _cancelled: Any = ...
    def __init__(self) -> None: ...
    @property
    def records(self): ...
    def start(self, label: str, total_work: float=...) -> Any: ...
    def progress(self, work: float=..., msg: str=...) -> Any: ...
    def done(self) -> None: ...
    def cancel(self) -> None: ...
    def is_cancelled(self) -> bool: ...
    def __str__(self): ...
