import asyncio
from concurrent import futures
from typing import Any, Optional

EXECUTOR: Any
EXECUTOR_THREAD_COUNT: int

def get_or_create_event_loop() -> asyncio.AbstractEventLoop: ...
def get_or_create_executor() -> futures.ThreadPoolExecutor: ...
def get_executor() -> Optional[futures.ThreadPoolExecutor]: ...
def set_executor(executor: futures.ThreadPoolExecutor) -> None: ...
def create_executor() -> futures.ThreadPoolExecutor: ...
