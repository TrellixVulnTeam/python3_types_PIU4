import unittest
from typing import Any

class TestIO(unittest.TestCase):
    matrix_n: int = ...
    density: float = ...
    similarity: Any = ...
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    def test_save_and_load_csr_matrix(self): ...
    def test_random_sparse_similarity_matrix_quadratic_form(self): ...
    def test_random_sparse_similarity_matrix_correct_size(self): ...
    def test_random_sparse_similarity_matrix_correct_type(self): ...
    def test_random_sparse_similarity_matrix_symmetric(self): ...
    def test_random_sparse_similarity_matrix_min_zero(self): ...
    def test_random_sparse_similarity_matrix_max_one(self): ...
    def test_random_sparse_similarity_matrix_self_similarity_one(self): ...
    def test_random_sparse_similarity_matrix_density(self): ...
    def test_load_dexter(self): ...
    def test_check_shape(self) -> None: ...
    def test_check_dist_vs_classes(self) -> None: ...
    def test_check_dist_vs_vectors(self) -> None: ...
    def test_check_valid_metric(self) -> None: ...
