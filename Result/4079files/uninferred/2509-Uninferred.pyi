import h11
from typing import List, Optional
from wsproto.events import Event as Event, Request
from wsproto.extensions import Extension as Extension
from wsproto.frame_protocol import CloseReason as CloseReason
from wsproto.typing import Headers as Headers

def _make_connection_request(request: Request) -> h11.Request: ...
def test_connection_request() -> None: ...
def test_connection_request_additional_headers() -> None: ...
def test_connection_request_simple_extension() -> None: ...
def test_connection_request_simple_extension_no_offer() -> None: ...
def test_connection_request_parametrised_extension() -> None: ...
def test_connection_request_subprotocols() -> None: ...
def _make_handshake(response_status: int, response_headers: Headers, subprotocols: Optional[List[str]]=..., extensions: Optional[List[Extension]]=..., auto_accept_key: bool=...) -> List[Event]: ...
def test_handshake() -> None: ...
def test_broken_handshake() -> None: ...
def test_handshake_extra_accept_headers() -> None: ...
def test_handshake_response_broken_connection_header(extra_headers: Headers) -> None: ...
def test_handshake_response_broken_upgrade_header(extra_headers: Headers) -> None: ...
def test_handshake_response_missing_websocket_key_header() -> None: ...
def test_handshake_with_subprotocol() -> None: ...
def test_handshake_bad_subprotocol() -> None: ...
def test_handshake_with_extension() -> None: ...
def test_handshake_bad_extension() -> None: ...
def test_protocol_error() -> None: ...
def _make_handshake_rejection(status_code: int, body: Optional[bytes]=...) -> List[Event]: ...
def test_handshake_rejection() -> None: ...
def test_handshake_rejection_with_body() -> None: ...
