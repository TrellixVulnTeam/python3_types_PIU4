import pandas as pd
from typing import Any

class SkData:
    data: Any = ...
    sets: Any = ...
    path: str = ...
    def __del__(self) -> None: ...
    def __init__(self, file_path: str) -> None: ...
    def __getitem__(self, item: Any): ...
    def import_from(self, source: str, dset_id: str=..., index_col: str=..., target_col: str=...) -> Any: ...
    def load(self, file_path: str) -> Any: ...

class SkDataSet:
    parent: Any = ...
    iid: Any = ...
    steps: Any = ...
    result: Any = ...
    def __init__(self, parent: SkData, iid: str) -> None: ...
    def __getitem__(self, item: Any): ...
    def attrs(self, key: str, value: str=...) -> Any: ...
    def attr_update(self, attr: str, value: object) -> Any: ...
    def attr_dump(self, attr: str, value: object) -> Any: ...
    def attr_load(self, attr: str, default: object=...) -> object: ...
    def compute(self): ...
    def drop_columns(self, max_na_values: int=..., max_unique_values: int=...) -> Any: ...
    def dropna(self) -> None: ...
    def log(self, message: str) -> Any: ...
    def summary(self, compute: Any=...) -> pd.DataFrame: ...

class SkDataColumn:
    parent: Any = ...
    column_name: Any = ...
    def __init__(self, parent: SkDataSet, column_name: str) -> None: ...
    def categorize(self, categories: dict=..., max_categories: float=...) -> Any: ...
    def replace(self, dict_map: dict) -> Any: ...

def pandas_dtype_to_hdf5(d: Any): ...
def summary(data: pd.DataFrame) -> pd.DataFrame: ...
def cross_fields(data: pd.DataFrame, y: str, xs: [str], bins: int) -> pd.DataFrame: ...
