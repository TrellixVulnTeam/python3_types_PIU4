from typing import Any

__author__: str

class ContactModel:
    contact_id: Any = ...
    first_name: Any = ...
    last_name: Any = ...
    address: Any = ...
    city: Any = ...
    state: Any = ...
    country: Any = ...
    email: Any = ...
    phone: Any = ...
    zip: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def __str__(self): ...
    @staticmethod
    def convert_contact_model(reply: Any): ...
    @staticmethod
    def _correct_formating(data: str) -> Any: ...

class NameSilo:
    _token: Any = ...
    _base_url: str = ...
    def __init__(self, token: Any, sandbox: bool=...) -> None: ...
    def _process_data(self, url_extend: Any): ...
    @staticmethod
    def _get_error_code(data: Any): ...
    @staticmethod
    def check_error_code(error_code: tuple) -> Any: ...
    def _get_content_xml(self, url: Any): ...
    def check_domain(self, domain_name: Any): ...
    def get_domain_info(self, domain_name: Any): ...
    def change_domain_nameservers(self, domain: Any, primary_ns: Any, secondary_ns: Any): ...
    def list_domains(self): ...
    def register_domain(self, domain_name: Any, years: int = ..., auto_renew: int = ..., private: int = ...): ...
    def renew_domain(self, domain_name: Any, years: int = ...): ...
    def lock_domain(self, domain_name: str) -> Any: ...
    def unlock_domain(self, domain_name: str) -> Any: ...
    def auto_renew_domain(self, domain_name: str) -> Any: ...
    def remove_auto_renew_domain(self, domain_name: str) -> Any: ...
    def get_prices(self): ...
    def list_contacts(self): ...
    def add_contact(self, contact: Any): ...
    def update_contact(self, contact: ContactModel) -> Any: ...
    def delete_contact(self, contact_id: Any): ...
    def add_account_funds(self, amount: Any, payment_id: Any): ...
    def get_account_balance(self): ...
    def add_domain_privacy(self, domain_name: Any): ...
    def remove_domain_privacy(self, domain_name: Any): ...
