from synthplayer.sample import Sample
from typing import Any, List, Optional

class Group:
    volume: float = ...
    amp_veltrack: int = ...
    ampeg_release: float = ...
    key: int = ...
    group: int = ...
    lo_vel: int = ...
    hi_vel: int = ...
    seq_length: int = ...
    regions: Any = ...
    _seq: int = ...
    _uses_random: bool = ...
    def __init__(self) -> None: ...
    def initialize(self): ...
    def get_sample(self) -> Tuple[float, Sample]: ...

class Region:
    sample: Any = ...
    lo_rand: Any = ...
    hi_rand: Any = ...
    seq: Any = ...
    def __init__(self) -> None: ...

class Instrument:
    name: Any = ...
    _samples_location: str = ...
    groups: Any = ...
    total_sample_memory: int = ...
    def __init__(self, name: str) -> None: ...
    def group(self, line: str) -> Group: ...
    def region(self, line: str) -> Optional[Region]: ...
    def get_group(self, velocity: int) -> Group: ...
    @classmethod
    def from_name_and_groups(cls: Any, name: str, groups: List[Group]) -> Instrument: ...
    def load_sfz(self, filename: str, samples_location: str) -> None: ...

class DrumKit:
    instruments: Any = ...
    def __init__(self) -> None: ...
    def load(self, samples_location: str) -> None: ...
