from pymaker.proxy import DSProxy, DSProxyCache, DSProxyFactory, LogCreated as LogCreated
from typing import Any

def web3(): ...
def our_address(web3: Any): ...
def other_address(web3: Any): ...
def proxy_cache(web3: Any): ...
def proxy_factory(web3: Any): ...
def proxy(web3: Any, proxy_cache: Any): ...

class TestProxyCache:
    def test_read(self, proxy_cache: DSProxyCache) -> Any: ...
    def test_write_invalid(self, proxy_cache: DSProxyCache) -> Any: ...
    def test_write(self, proxy_cache: DSProxyCache) -> Any: ...

class TestProxyFactory:
    def test_build(self, proxy_factory: DSProxyFactory) -> Any: ...
    def test_past_build(self, proxy_factory: DSProxyFactory, our_address: Any) -> Any: ...
    def test_build_for(self, proxy_factory: DSProxyFactory, other_address: Any) -> Any: ...
    def test_cache(self, proxy_factory: DSProxyFactory, other_address: Any) -> Any: ...

class TestProxy:
    def test_execute(self, proxy: DSProxy) -> Any: ...
    def test_execute_at(self, proxy: DSProxy) -> Any: ...
    def test_call(self, proxy: DSProxy) -> Any: ...
    def test_call_at(self, proxy: DSProxy) -> Any: ...
