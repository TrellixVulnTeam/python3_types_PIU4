from NeuralNet.Oli.libs.Preprocessor import IPreprocessor as IPreprocessor
from numpy.core.multiarray import ndarray as ndarray
from typing import Any

class ProcessingPipeline:
    font_names: Any = ...
    model_path: Any = ...
    model: Any = ...
    preprocessor: Any = ...
    label_encoder: Any = ...
    def __init__(self) -> None: ...
    def load_features_and_preprocess(self, img_path: str, img_preprocessor: IPreprocessor) -> Tuple[ndarray, ndarray]: ...
    def __compile_model(self) -> None: ...
    def load_model(self, model_path: Any) -> None: ...
    train_logger: Any = ...
    def train_model(self, keras_model: Any, x: ndarray, y: ndarray, epos: Any=..., train_ratio: Any=..., batch_size: Any=...) -> Any: ...
    def save_model(self, model_save_path: str, include_stats: Any=...) -> Any: ...
    def predict(self, x: Any): ...
    def evaluate(self, y: Any, y_pred: Any) -> None: ...
