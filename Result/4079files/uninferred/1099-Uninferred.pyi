from enum import Enum, IntFlag
from typing import Any, Optional

class Reverse:
    reverse_map: Any = ...
    def __init__(self, reverse_map: Any) -> None: ...
    def __call__(self, enum: Any): ...

class Com(IntFlag):
    X: int = ...
    W: int = ...
    E: int = ...
    N: int = ...
    S: int = ...
    C: int = ...
    F: int = ...
    SW: int = ...
    NE: int = ...
    NW: int = ...
    SE: int = ...

class Orientation(Enum):
    NS: bool = ...
    EW: bool = ...

class Dim:
    x: int = ...
    y: int = ...
    z: int = ...
    def __init__(self, x: Optional[Any] = ..., y: Optional[Any] = ..., z: Optional[Any] = ...) -> None: ...
    def __str__(self): ...
    def __cmp__(self, other: Any): ...
