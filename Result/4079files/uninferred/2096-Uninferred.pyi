from typing import List, Tuple

class APSP:
    NAIVE_FW: str = ...
    CUDA_NAIVE_FW: str = ...
    CUDA_BLOCKED_FW: str = ...

def execute_algorithm(exec_path: str, algorithm: APSP, data_input: str) -> Tuple: ...
def gen_graph_out(size: int, value: int=..., diagonal: int=...) -> List: ...
def gen_k1_graph_out(size: int) -> List: ...
def gen_k1_graph_in(size: int) -> str: ...
def gen_k1_predecessors_out(size: int) -> List: ...
def gen_kn_predecessors_out(size: int) -> List: ...
def gen_kn_graph_in(size: int) -> str: ...
def gen_graph_dicircle_in(size: int) -> str: ...
def gen_kn_graph_for_dcircle_out(size: int) -> List: ...
def gen_kn_pred_for_dcircle_out(size: int) -> List: ...
