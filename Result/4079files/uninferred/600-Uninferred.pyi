import unittest
from typing import Any

class TerminalTestCase(unittest.TestCase):
    a: Any = ...
    a2: Any = ...
    def setUp(self) -> None: ...
    def test_inheritance(self) -> None: ...
    def test_underlying(self) -> None: ...
    def test_underlying_type(self) -> None: ...
    def test_surface(self) -> None: ...
    def test_instance_management(self) -> None: ...
    def test_str(self) -> None: ...
    def test_repr(self) -> None: ...

class NonterminalTestCase(unittest.TestCase):
    X: Any = ...
    X2: Any = ...
    def setUp(self) -> None: ...
    def test_inheritance(self) -> None: ...
    def test_underlying(self) -> None: ...
    def test_underlying_type(self) -> None: ...
    def test_label(self) -> None: ...
    def test_instance_management(self) -> None: ...
    def test_str(self) -> None: ...
    def test_repr(self) -> None: ...

class SpanTestCase(unittest.TestCase):
    X: Any = ...
    X01: Any = ...
    X01b: Any = ...
    def setUp(self) -> None: ...
    def test_inheritance(self) -> None: ...
    def test_construct(self) -> None: ...
    def test_underlying(self) -> None: ...
    def test_underlying_type(self) -> None: ...
    def test_base(self) -> None: ...
    def test_start(self) -> None: ...
    def test_end(self) -> None: ...
    def test_instance_management(self) -> None: ...
    def test_str(self) -> None: ...
    def test_repr(self) -> None: ...

class ComparisonTestCase(unittest.TestCase):
    tX1: Any = ...
    tX2: Any = ...
    nX1: Any = ...
    nX2: Any = ...
    def setUp(self) -> None: ...
    def test_type_matters(self) -> None: ...
    def test_underlying_identity(self) -> None: ...

class StaticSymbolFactoryTestCase(unittest.TestCase):
    factory: Any = ...
    factory2: Any = ...
    def setUp(self) -> None: ...
    def test_terminal(self) -> None: ...
    def test_nonterminal(self) -> None: ...
    def test_span(self) -> None: ...
    def test_instance_management(self) -> None: ...
    def test_static(self) -> None: ...

class SymbolFactoryTestCase(unittest.TestCase):
    factory: Any = ...
    factory2: Any = ...
    def setUp(self) -> None: ...
    def test_terminal(self) -> None: ...
    def test_nonterminal(self) -> None: ...
    def test_span(self) -> None: ...
    def test_instance_management(self) -> None: ...
    def test_nonstatic(self) -> None: ...
