from collections.abc import MutableMapping as MutableMapping
from typing import Any, Callable, Optional

sentinel: Any

class lazy:
    __name__: Any = ...
    __module__: Any = ...
    __doc__: Any = ...
    lock: Any = ...
    func: Any = ...
    def __init__(self, func: Callable[[object], None], name: str=..., doc: str=...) -> None: ...
    def __repr__(self): ...
    def __get__(self, instance: Any, type: Optional[Any] = ...): ...

def lazyload(reference: str, *args: Any, **kw: Any) -> Any: ...
