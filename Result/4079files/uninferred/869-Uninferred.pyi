from typing import Any, Optional

SOURCE_URL: str

def _read32(bytestream: Any): ...
def extract_images(f: Any): ...
def dense_to_one_hot(labels_dense: Any, num_classes: Any): ...
def extract_labels(f: Any, one_hot: bool = ..., num_classes: int = ...): ...

class DataSet:
    _num_examples: int = ...
    one_hot: Any = ...
    _images: Any = ...
    _labels: Any = ...
    _epochs_completed: int = ...
    _index_in_epoch: int = ...
    def __init__(self, images: Any, labels: Any, fake_data: bool = ..., one_hot: bool = ..., dtype: Any = ..., reshape: bool = ..., seed: Optional[Any] = ...) -> None: ...
    @property
    def images(self): ...
    @property
    def labels(self): ...
    @property
    def num_examples(self): ...
    @property
    def epochs_completed(self): ...
    def next_batch(self, batch_size: Any, fake_data: bool = ..., shuffle: bool = ...): ...

def read_data_sets(train_dir: Any, fake_data: bool = ..., one_hot: bool = ..., dtype: Any = ..., reshape: bool = ..., validation_size: int = ..., seed: Optional[Any] = ...): ...
