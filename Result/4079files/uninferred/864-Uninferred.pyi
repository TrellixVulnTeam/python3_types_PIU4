from typing import Any, Optional

def dict_reverse_lookup(d: dict, value: Any) -> Any: ...

class LinkAttributes(dict):
    current_id: Any = ...
    def __init__(self, attributes: Optional[Any] = ...) -> None: ...
    def get_next_id(self): ...

class Path:
    __slots__: Any = ...
    links: Any = ...
    nodes: Any = ...
    attributes: Any = ...
    next_hop: Any = ...
    next_hop_interface: Any = ...
    _global_attributes: Any = ...
    policy_cache: Any = ...
    def __init__(self, path: str, attributes: LinkAttributes, next_hop: str, next_hop_interface: str) -> None: ...
    def append(self, node: str, new_next_hop_interface: str, attributes: dict) -> Any: ...
    def apply_attributes(self, attributes: LinkAttributes) -> Any: ...
    def __str__(self) -> str: ...
    def __eq__(self, other: Any) -> bool: ...
