import golib.model
import numpy as np
from typing import Any, Optional

commands_size: int

def promptdiscard(meth: Any): ...

class ControllerV(golib.gui.Controller):
    queue: Any = ...
    video: Any = ...
    bounds: Any = ...
    api: Any = ...
    paused: Any = ...
    def __init__(self, user_input: Any, display: Any, sgffile: Optional[Any] = ..., video: int = ..., bounds: Any = ...): ...
    def _init_sgf(self, sgffile: Any): ...
    def pipe(self, instruction: Any, *args: Any) -> None: ...
    def _cmd(self, event: Any) -> None: ...
    def get_stones(self) -> np.ndarray: ...
    def _on(self) -> None: ...
    def _off(self) -> None: ...
    def _pause(self, boolean: Any) -> None: ...
    def corrected(self, err_move: Any, exp_move: Any) -> None: ...
    def next(self) -> None: ...
    def vidpos(self, new_pos: Any) -> None: ...
    def snapshot(self, save_goban: Any) -> None: ...
    def random(self) -> None: ...
    def _run(self) -> None: ...
    def _add_bfinder(self, bf_class: Any, callback: Any) -> None: ...
    def _add_sfinder(self, sf_class: Any, callback: Any) -> None: ...
    def _select_bfinder(self, label: Any) -> None: ...
    def _select_sfinder(self, label: Any) -> None: ...
    def _cvappend(self, move: Any) -> None: ...
    def _mouse_release(self, event: Any) -> None: ...
    def _delete(self, x: int, y: int, learn: bool=...) -> Any: ...
    def _drag(self, event: Any) -> None: ...
    def _opensgf(self): ...
    def _save(self) -> None: ...
    def _openvideo(self) -> None: ...
    def _openlive(self) -> None: ...
    def __setattr__(self, name: Any, value: Any): ...
    def auto_save(self) -> None: ...
    def del_autosave(self) -> None: ...
    def _onclose(self) -> None: ...
    def quit(self) -> None: ...

class Pause:
    paused: Any = ...
    def __init__(self, paused: bool = ...) -> None: ...
    def true(self): ...
    def false(self): ...
    def __bool__(self): ...
