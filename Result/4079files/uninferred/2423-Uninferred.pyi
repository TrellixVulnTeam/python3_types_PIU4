from .MarkovChain import MarkovChain
from typing import Any

class DynamicMarkovChain(MarkovChain):
    textSample: Any = ...
    sentenceSep: Any = ...
    n: Any = ...
    db: Any = ...
    def generateDatabase(self, textSample: Any, sentenceSep: str = ..., n: int = ...) -> None: ...
    def _temporaryDatabase(self, textSample: Any) -> None: ...
    def _relevantSentences(self, seedwords: Any) -> None: ...
    def _databaseFromSeed(self, seedwords: Any): ...
    def generateStringWithSeed(self, seed: Any): ...
    def _accumulateWithSeed(self, seed: Any): ...
    def _nextWord(self, lastwords: Any): ...
    def flushDatabase(self) -> None: ...
