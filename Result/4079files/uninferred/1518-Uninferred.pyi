from flask.sessions import SessionInterface, SessionMixin
from typing import Any, Optional
from werkzeug.datastructures import CallbackDict

__version_info__: Any
__version__: Any
__author__: str
__license__: str
__copyright__: str

class MongoSessionManager:
    collection_name: str = ...
    _permanent: Any = ...
    _client: Any = ...
    _db: Any = ...
    _collection: Any = ...
    def __init__(self, db: str = ..., permanent: bool = ..., *args: Any, **kwargs: Any) -> None: ...
    def _check_indexes(self) -> None: ...
    def get_session(self, sid: Any): ...
    def update_session(self, session: Any, expired: Any) -> None: ...
    def logout_all_devices(self, session: Any) -> None: ...

class MongoSession(CallbackDict, SessionMixin):
    manager: Any = ...
    session_id: Any = ...
    user_id: Any = ...
    modified: bool = ...
    permanent: Any = ...
    def __init__(self, data: Any = ..., session_id: Optional[Any] = ..., user_id: Optional[Any] = ..., permanent: Optional[Any] = ..., manager: Optional[Any] = ...) -> None: ...
    def login(self, uid: Any) -> None: ...
    def logout(self) -> None: ...
    def is_authenticated(self): ...
    def logout_all_devices(self) -> None: ...

class MongoSessionInterface(SessionInterface):
    collection_name: str = ...
    _manager: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def open_session(self, app: Any, request: Any): ...
    def save_session(self, app: Any, session: MongoSession, response: Any) -> Any: ...
