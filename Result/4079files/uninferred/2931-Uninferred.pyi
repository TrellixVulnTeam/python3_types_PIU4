from .resource import Member, MemberList
from typing import Any

class Parliament:
    LDA_ENDPOINT: str = ...
    MEMBERS_NAMES_ENDPOINT: str = ...
    http: Any = ...
    commons: Any = ...
    lords: Any = ...
    parties: Any = ...
    def __init__(self) -> None: ...
    def get_bills(self, limit: int=..., page: int=...) -> Any: ...
    def get(self, path: str, limit: int=..., page: int=..., additional_params: Any=...) -> Any: ...
    def get_members(self, **kwargs: Any): ...

class Members:
    parl: Any = ...
    house: Any = ...
    _members: Any = ...
    def __init__(self, house: Any) -> None: ...
    def from_id(self, member_id: int) -> Member: ...
    def from_url(self, url: str) -> Member: ...
    def from_vote(self, data: dict) -> Member: ...
    def current(self) -> MemberList: ...

class House:
    name: Any = ...
    parl: Any = ...
    members: Any = ...
    def __init__(self, name: str, parl: Any) -> None: ...
    def recent_divisions(self, limit: int=..., page: int=..., since: str=..., cachebust: bool=...) -> Any: ...

class Commons(House):
    def __init__(self, parl: Any) -> None: ...
    def get_edms(self, limit: int = ..., page: int = ...) -> None: ...
