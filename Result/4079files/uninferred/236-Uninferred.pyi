from typing import Any, List, Optional

class Frames:
    pinwheel: Any = ...
    pacman: Any = ...
    sticks: Any = ...
    ping: Any = ...

class Bar:
    total: Any = ...
    width: Any = ...
    after: Any = ...
    before: Any = ...
    def __init__(self, total: int, width: int=..., before: str=..., after: str=...) -> None: ...
    def eval(self, current: int) -> str: ...

class Percentage:
    total: Any = ...
    def __init__(self, total: int) -> None: ...
    def eval(self, current: int) -> str: ...

class Animated:
    _N_PER_CYCLE: int = ...
    n_per_cycle: Any = ...
    frames: Any = ...
    _last_state: int = ...
    def __init__(self, total: Optional[int]=..., frames: List[str]=..., n_per_cycle: Optional[int]=...) -> None: ...
    def eval(self, current: Optional[int]) -> str: ...

class Timing:
    _DEFAULT_FORMAT: str = ...
    total: Any = ...
    print_format: Any = ...
    fmt: str = ...
    start_time: Any = ...
    def __init__(self, total: Optional[int]=..., print_format: str=...) -> None: ...
    def eval(self, current: Optional[int]) -> str: ...

class Composite:
    meters: Any = ...
    print_format: Any = ...
    def __init__(self, meters: List, print_format: Optional[str]=...) -> None: ...
    def eval(self, current: Optional[int], message: str=...) -> str: ...

class ProgressBar(Composite):
    _METERS_LEN: int = ...
    _SAFE_MARGIN: int = ...
    _FIRST_MESSAGE_TIME: int = ...
    _SECOND_MESSAGE_TIME: int = ...
    _THIRD_MESSAGE_TIME: int = ...
    _is_lying: Any = ...
    _verbose: Any = ...
    _show_default_message: Any = ...
    current: Any = ...
    total: Any = ...
    _width: Any = ...
    _start_time: Any = ...
    def __init__(self, total: Optional[Any] = ..., verbose: bool = ..., show_default_message: bool = ..., is_lying: bool = ..., n_per_cycle: Optional[Any] = ...) -> None: ...
    def eval(self, current: Optional[int]=..., message: str=...) -> Any: ...
    def finish(self) -> None: ...
    def inc(self, amount: int=..., message: str=...) -> Any: ...

class ProgressBarIterator:
    _iterator: Any = ...
    _progress_bar: Any = ...
    def __init__(self, iterable: Any, total: Optional[int]=..., verbose: bool=..., show_default_message: bool=..., is_lying: bool=..., n_per_cycle: Optional[int]=...) -> None: ...
    def __iter__(self) -> Any: ...
    def __next__(self): ...
