import numpy as np
from typing import Any, Optional, Tuple

class NonStationaryLinearRegression:
    _n_obs: int = ...
    _window: Any = ...
    _obs_buffer: Any = ...
    _slope: Any = ...
    _intercept: Any = ...
    _variance: Any = ...
    _weights: Any = ...
    _summed_weights: Any = ...
    _x: Any = ...
    _kern: Any = ...
    def __init__(self, window: int=...) -> None: ...
    @staticmethod
    def _get_lambda(window: int) -> float: ...
    @staticmethod
    def _generate_auxiliary_vars(lam: float, n: int) -> Tuple[np.ndarray, float, np.ndarray, np.ndarray]: ...
    def add_observation(self, y: float) -> Any: ...
    def _update_regression(self) -> None: ...
    def get_slope(self) -> Optional[float]: ...
    def get_intercept(self) -> Optional[float]: ...
    def get_variance(self) -> Optional[float]: ...
