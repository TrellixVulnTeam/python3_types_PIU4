import builtins
from codot.container import ProgramData as ProgramData
from codot.utils import rm_ext as rm_ext
from typing import Any

real_open = builtins.open
FakeFilePaths: Any

def copy_config(fs: Any) -> None: ...
def fake_files(fs: Any, copy_config: Any) -> FakeFilePaths: ...

class TestAddTemplateCommand:
    def patch_editor(self, monkeypatch: Any): ...
    def test_add_new_template(self, fake_files: Any, patch_editor: Any) -> None: ...
    def test_add_revised_template(self, fake_files: Any, patch_editor: Any) -> None: ...

class TestRmTemplateCommand:
    def test_nonexistent_template(self, fake_files: Any) -> None: ...
    def test_remove_template_file(self, fake_files: Any) -> None: ...
    def test_remove_unused_options(self, fs: Any, fake_files: Any) -> None: ...

class TestRoleCommand:
    def test_no_role_specified(self) -> None: ...
    def test_no_config_specified(self, fake_files: Any) -> None: ...
    def test_role_nonexistent(self, fake_files: Any) -> None: ...
    def test_config_nonexistent(self, fake_files: Any) -> None: ...
    def test_symlink_created(self, fs: Any, fake_files: Any, extension: Any) -> None: ...

class TestSyncCommand:
    def test_overwrite_source_files(self, fs: Any, fake_files: Any, overwrite: Any) -> None: ...
    def test_missing_identifiers(self, fs: Any, fake_files: Any) -> None: ...
    def test_missing_source_files(self, fs: Any, fake_files: Any) -> None: ...
    def test_propagate_config_changes(self, fake_files: Any, monkeypatch: Any, id_format: Any) -> None: ...
