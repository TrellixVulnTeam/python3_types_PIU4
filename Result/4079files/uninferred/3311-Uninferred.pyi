from typing import Any, Optional

class ZenobaseAPI:
    HOST: str = ...
    access_token: Any = ...
    client_id: Any = ...
    def __init__(self, username: Optional[Any] = ..., password: Optional[Any] = ...) -> None: ...
    def __enter__(self): ...
    def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any) -> None: ...
    def _request(self, method: Any, endpoint: Any, data: Optional[Any] = ..., headers: Any = ...): ...
    def _get(self, *args: Any, **kwargs: Any): ...
    def _post(self, *args: Any, **kwargs: Any): ...
    def _delete(self, *args: Any, **kwargs: Any): ...
    def list_buckets(self, offset: int = ..., limit: int = ...): ...
    def get_bucket(self, bucket_id: Any): ...
    def create_bucket(self, label: Any, description: str = ...): ...
    def create_or_get_bucket(self, label: Any, description: str = ...): ...
    def delete_bucket(self, bucket_id: Any) -> None: ...
    def list_events(self, bucket_id: Any): ...
    @staticmethod
    def _bucket_id_from_bucket_or_id(bucket_or_bucket_id: Any): ...
    def create_event(self, bucket_or_bucket_id: Any, event: Any): ...
    def create_events(self, bucket_or_bucket_id: Any, events: Any): ...
    def close(self): ...
