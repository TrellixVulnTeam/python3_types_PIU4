from typing import Any, Tuple, Union

class RancherUpgradeException(Exception): ...
class RancherUpgradeFailException(Exception): ...

class RancherUpgradeOptions:
    sleep_time: Any = ...
    retries: Any = ...
    stack_name: Any = ...
    rancher_url: Any = ...
    service_name: Any = ...
    rancher_secret_key: Any = ...
    rancher_access_key: Any = ...
    def __init__(self, stack_name: str, service_name: str, rancher_url: str, rancher_access_key: str, rancher_secret_key: str, *, retries: int=..., sleep_time: int=...) -> None: ...

def do_rollback(config: RancherUpgradeOptions, service_id: str) -> Any: ...
def do_request_upgrade(config: RancherUpgradeOptions, service_id: str, payload: dict) -> Any: ...
def do_finish_request_upgrade(config: RancherUpgradeOptions, service_id: str) -> Any: ...
def get_stack_id(config: RancherUpgradeOptions) -> Union[str, RancherUpgradeException]: ...
def get_service_info(config: RancherUpgradeOptions, stack_id: str) -> Union[Tuple[str, dict], RancherUpgradeException]: ...
def check_upgrading_status(config: RancherUpgradeOptions, service_id: str) -> Union[str, RancherUpgradeFailException]: ...
def make_upgrade(config: RancherUpgradeOptions, service_id: str, payload: dict) -> Any: ...
def do_tasks(config: RancherUpgradeOptions) -> Any: ...
def main() -> None: ...
