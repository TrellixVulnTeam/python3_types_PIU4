import enum
from gi.repository import Gtk
from meld.melddoc import LabeledObjectMixin
from typing import Any

class DiffType(enum.IntEnum):
    Unselected: int = ...
    File: int = ...
    Folder: int = ...
    Version: int = ...
    def supports_blank(self): ...

class NewDiffTab(Gtk.Alignment, LabeledObjectMixin):
    __gtype_name__: str = ...
    __gsignals__: Any = ...
    close_signal: Any = ...
    label_changed_signal: Any = ...
    label_text: Any = ...
    button_compare: Any = ...
    button_new_blank: Any = ...
    button_type_dir: Any = ...
    button_type_file: Any = ...
    button_type_vc: Any = ...
    choosers_notebook: Any = ...
    dir_chooser0: Any = ...
    dir_chooser1: Any = ...
    dir_chooser2: Any = ...
    dir_three_way_checkbutton: Any = ...
    file_chooser0: Any = ...
    file_chooser1: Any = ...
    file_chooser2: Any = ...
    file_three_way_checkbutton: Any = ...
    filechooserdialog0: Any = ...
    filechooserdialog1: Any = ...
    filechooserdialog2: Any = ...
    vc_chooser0: Any = ...
    button_types: Any = ...
    diff_methods: Any = ...
    diff_type: Any = ...
    def __init__(self, parentapp: Any) -> None: ...
    def on_button_type_toggled(self, button: Any, *args: Any) -> None: ...
    def on_three_way_checkbutton_toggled(self, button: Any, *args: Any) -> None: ...
    def on_file_set(self, filechooser: Any, *args: Any) -> None: ...
    def _get_num_paths(self): ...
    def on_button_compare_clicked(self, *args: Any) -> None: ...
    def on_button_new_blank_clicked(self, *args: Any) -> None: ...
    def on_container_switch_in_event(self, *args: Any) -> None: ...
    def on_container_switch_out_event(self, *args: Any) -> None: ...
    def on_delete_event(self, *args: Any): ...
