import aiounittest
from aiohttp import TCPConnector
from aiovk.drivers import BaseDriver
from aiovk.mixins import LimitRateDriverMixin
from typing import Any, Optional

class TestMethodsMixin:
    driver_class: Any = ...
    json_filepath: Any = ...
    driver_kwargs: Any = ...
    @classmethod
    def setUpClass(cls) -> None: ...
    async def json(self, loop: Optional[Any] = ...) -> None: ...
    async def test_json_default_loop(self) -> None: ...
    async def test_json_custom_loop(self) -> None: ...
    async def get_text(self, loop: Optional[Any] = ...) -> None: ...
    async def test_get_text_default_loop(self) -> None: ...
    async def test_get_text_custom_loop(self) -> None: ...
    async def get_bin(self, loop: Optional[Any] = ...) -> None: ...
    async def test_get_bin_default_loop(self) -> None: ...
    async def test_get_bin_custom_loop(self) -> None: ...
    async def post_text(self, loop: Optional[Any] = ...) -> None: ...
    async def test_post_text_default_loop(self) -> None: ...
    async def test_post_text_custom_loop(self) -> None: ...

class HttpDirverTestCase(TestMethodsMixin, aiounittest.AsyncTestCase):
    driver_class: Any = ...

class TestSocksConnector(TCPConnector):
    def __init__(self, proxy: Any, proxy_auth: Any, loop: Any) -> None: ...

class SOCKS5DriverANONTestCase(TestMethodsMixin, aiounittest.AsyncTestCase):
    driver_class: Any = ...
    driver_kwargs: Any = ...

class SOCKS5DriverAUTHTestCase(TestMethodsMixin, aiounittest.AsyncTestCase):
    driver_class: Any = ...
    driver_kwargs: Any = ...

class LimitRateBaseTestDriver(BaseDriver):
    async def json(self, *args: Any, **kwargs: Any): ...
    def close(self) -> None: ...

class LimitRateTestDriver(LimitRateDriverMixin, LimitRateBaseTestDriver):
    period: int = ...
    requests_per_period: int = ...

class LimitRateDriverMixinTestCase(aiounittest.AsyncTestCase):
    period: int = ...
    requests_per_period: int = ...
    def get_driver(self): ...
    async def test_json_fast(self) -> None: ...
    async def test_json_slow(self) -> None: ...
