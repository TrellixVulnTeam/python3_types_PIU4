from typing import Any

def test_eval_chebyt() -> None: ...
def test_eval_genlaguerre_restriction() -> None: ...
def test_warnings() -> None: ...

class TestPolys:
    def check_poly(self, func: Any, cls: Any, param_ranges: Any = ..., x_range: Any = ..., nn: int = ..., nparam: int = ..., nx: int = ..., rtol: float = ...): ...
    def test_jacobi(self) -> None: ...
    def test_sh_jacobi(self) -> None: ...
    def test_gegenbauer(self) -> None: ...
    def test_chebyt(self) -> None: ...
    def test_chebyu(self) -> None: ...
    def test_chebys(self) -> None: ...
    def test_chebyc(self) -> None: ...
    def test_sh_chebyt(self) -> None: ...
    def test_sh_chebyu(self) -> None: ...
    def test_legendre(self) -> None: ...
    def test_sh_legendre(self) -> None: ...
    def test_genlaguerre(self) -> None: ...
    def test_laguerre(self) -> None: ...
    def test_hermite(self) -> None: ...
    def test_hermitenorm(self) -> None: ...

class TestRecurrence:
    def check_poly(self, func: Any, param_ranges: Any = ..., x_range: Any = ..., nn: int = ..., nparam: int = ..., nx: int = ..., rtol: float = ...): ...
    def test_jacobi(self) -> None: ...
    def test_sh_jacobi(self) -> None: ...
    def test_gegenbauer(self) -> None: ...
    def test_chebyt(self) -> None: ...
    def test_chebyu(self) -> None: ...
    def test_chebys(self) -> None: ...
    def test_chebyc(self) -> None: ...
    def test_sh_chebyt(self) -> None: ...
    def test_sh_chebyu(self) -> None: ...
    def test_legendre(self) -> None: ...
    def test_sh_legendre(self) -> None: ...
    def test_genlaguerre(self) -> None: ...
    def test_laguerre(self) -> None: ...
    def test_hermite(self) -> None: ...
