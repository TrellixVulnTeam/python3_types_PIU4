from abc import ABC, abstractmethod
from typing import Any

class BaseSession(ABC):
    @abstractmethod
    async def __aenter__(self): ...
    async def __aexit__(self, exc_type: Any, exc_val: Any, exc_tb: Any) -> None: ...
    async def close(self) -> None: ...
    @abstractmethod
    async def send_api_request(self, method_name: str, params: dict=..., timeout: int=...) -> dict: ...

class TokenSession(BaseSession):
    API_VERSION: str = ...
    REQUEST_URL: str = ...
    timeout: Any = ...
    access_token: Any = ...
    driver: Any = ...
    def __init__(self, access_token: str=..., timeout: int=..., driver: Any=...) -> None: ...
    async def __aenter__(self) -> BaseSession: ...
    async def __aexit__(self, exc_type: Any, exc_val: Any, exc_tb: Any): ...
    async def send_api_request(self, method_name: str, params: dict=..., timeout: int=...) -> dict: ...
    async def authorize(self) -> None: ...
    async def enter_captcha(self, url: str, sid: str) -> str: ...

class ImplicitSession(TokenSession):
    AUTH_URL: str = ...
    login: Any = ...
    password: Any = ...
    app_id: Any = ...
    num_of_attempts: Any = ...
    scope: Any = ...
    def __init__(self, login: str, password: str, app_id: int, scope: None=..., timeout: int=..., num_of_attempts: int=..., driver: Any=...) -> None: ...
    access_token: Any = ...
    async def authorize(self) -> None: ...
    async def _get_auth_page(self) -> str: ...
    async def _process_auth_form(self, html: str) -> Tuple[str, str]: ...
    async def _process_2auth_form(self, html: str) -> Tuple[str, str]: ...
    async def _process_access_form(self, html: str) -> Tuple[str, str]: ...
    async def enter_confirmation_code(self) -> str: ...

class AuthorizationCodeSession(TokenSession):
    CODE_URL: str = ...
    code: Any = ...
    app_id: Any = ...
    app_secret: Any = ...
    redirect_uri: Any = ...
    def __init__(self, app_id: int, app_secret: str, redirect_uri: str, code: str, timeout: int=..., driver: Any=...) -> None: ...
    access_token: Any = ...
    async def authorize(self, code: str=...) -> None: ...
    async def get_code(self, code: str=...) -> str: ...
