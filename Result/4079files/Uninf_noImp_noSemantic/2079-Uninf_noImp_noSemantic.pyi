from constants import *
from typing import Any, Optional
from ugui import Screen

def to_string(val: Any): ...
def quitbutton(x: Any, y: Any) -> None: ...
def fwdbutton(x: Any, y: Any, cls_screen: Any, text: str = ...) -> None: ...
def backbutton(x: Any, y: Any) -> None: ...

class BackScreen(Screen):
    open_arg: str = ...
    hide_arg: str = ...
    def __init__(self) -> None: ...
    def on_open(self) -> None: ...
    def on_hide(self) -> None: ...

class ThreadScreen(Screen):
    dial1: Any = ...
    dial2: Any = ...
    pause: bool = ...
    def __init__(self) -> None: ...
    def on_open(self) -> None: ...
    def on_hide(self) -> None: ...
    async def mainthread(self, dial: Any, can_pause: bool = ...) -> None: ...

class BaseScreen(Screen):
    def __init__(self) -> None: ...

class KnobScreen(Screen):
    def __init__(self) -> None: ...
    def callback(self, knob: Any, control_name: Any) -> None: ...
    def knob_moved(self, knob: Any, dial: Any, pointer: Any, label: Any, meter: Optional[Any] = ...) -> None: ...

class SliderScreen(Screen):
    lstlbl: Any = ...
    slave1: Any = ...
    slave2: Any = ...
    def __init__(self) -> None: ...
    def callback(self, slider: Any, device: Any) -> None: ...
    def master_moved(self, slider: Any, idx_label: Any) -> None: ...
    def slave_moved(self, slider: Any, idx_label: Any) -> None: ...

class AssortedScreen(Screen):
    led: Any = ...
    def __init__(self) -> None: ...
    def callback(self, button: Any, arg: Any, label: Any) -> None: ...
    def cbcb(self, checkbox: Any, label: Any, test: Any) -> None: ...

def test() -> None: ...
