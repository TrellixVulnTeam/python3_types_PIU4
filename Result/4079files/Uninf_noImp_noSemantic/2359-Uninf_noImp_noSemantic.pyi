import asyncio
from chatterbot import ChatBot, logic
from typing import Any

class ThanksLogicAdapter(logic.LogicAdapter):
    def can_process(self, statement: Any): ...
    def process(self, statement: Any): ...

class TagLogicAdapter(logic.LogicAdapter):
    def can_process(self, statement: Any): ...
    def process(self, statement: Any): ...

class CleverCacheLogicAdapter(logic.LowConfidenceAdapter):
    api_key: Any = ...
    sessions: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def can_process(self, statement: Any): ...
    def process(self, input_statement: Any): ...

class AsyncChatBot(ChatBot):
    loop: Any = ...
    def __init__(self, loop: asyncio.BaseEventLoop, *args: Any, **kwargs: Any) -> None: ...
    async def async_get_response(self, statement: str, session_id: str=...) -> Any: ...
    def generate_response(self, input_statement: Any, session_id: Any): ...

class Conversation:
    services: Any = ...
    bot: Any = ...
    sessions: Any = ...
    chatname: str = ...
    chatbot: Any = ...
    def __init__(self, bot: Any) -> None: ...
    async def on_message(self, message: Any) -> None: ...
    async def train(self, ctx: Any) -> None: ...

def setup(bot: Any) -> None: ...
