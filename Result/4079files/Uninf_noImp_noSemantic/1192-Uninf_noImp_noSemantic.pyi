from typing import Any

class Peak:
    alpha: Any = ...
    scale: Any = ...
    min_duration: Any = ...
    log_scale: Any = ...
    def __init__(self, alpha: float = ..., min_duration: float = ..., scale: str = ..., log_scale: bool = ...) -> None: ...
    def apply(self, predictions: Any, dimension: int = ...): ...

class Binarize:
    onset: Any = ...
    offset: Any = ...
    scale: Any = ...
    log_scale: Any = ...
    pad_onset: Any = ...
    pad_offset: Any = ...
    min_duration_on: Any = ...
    min_duration_off: Any = ...
    def __init__(self, onset: float = ..., offset: float = ..., scale: str = ..., log_scale: bool = ..., pad_onset: float = ..., pad_offset: float = ..., min_duration_on: float = ..., min_duration_off: float = ...) -> None: ...
    def apply(self, predictions: Any, dimension: int = ...): ...

class GMMResegmentation:
    n_components: Any = ...
    n_iter: Any = ...
    window: Any = ...
    def __init__(self, n_components: int = ..., n_iter: int = ..., window: float = ...) -> None: ...
    def apply(self, annotation: Any, features: Any): ...
