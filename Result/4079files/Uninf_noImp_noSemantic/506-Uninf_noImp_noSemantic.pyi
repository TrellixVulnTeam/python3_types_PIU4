from typing import Any

class ErrorHandlingSystem:
    def __init__(self) -> None: ...
    def preamble(self, idx: Any): ...
    def function_cont(self, name: Any): ...
    def function_final(self): ...
    def generate_sources(self, no: Any) -> None: ...

class ExceptionThrow(ErrorHandlingSystem):
    def preamble(self, idx: Any): ...
    def function_final(self): ...

class ResultErrorValue(ErrorHandlingSystem):
    def preamble(self, idx: Any): ...
    def function_cont(self, name: Any): ...
    def function_final(self): ...

class ResultErrorError(ResultErrorValue):
    def function_final(self): ...

class ResultExceptionValue(ResultErrorValue):
    def function_cont(self, name: Any): ...
    def function_final(self): ...

class ResultExceptionError(ResultExceptionValue):
    def function_cont(self, name: Any): ...
    def function_final(self): ...

class ResultExperimentalValue(ErrorHandlingSystem):
    def preamble(self, idx: Any): ...
    def function_cont(self, name: Any): ...
    def function_final(self): ...

class ResultExperimentalError(ResultExperimentalValue):
    def function_final(self): ...

matrix: Any
compilers: Any
SOURCES: int
instance: Any
exename: Any
args: Any
compile_begin: Any
compile_end: Any
result: Any
