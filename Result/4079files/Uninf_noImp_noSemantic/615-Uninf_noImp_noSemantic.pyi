from eth_abi.decoding import BaseDecoder
from eth_abi.encoding import BaseEncoder
from typing import Any

NULL_ENCODING: Any

def encode_null(x: Any): ...
def decode_null(stream: Any) -> None: ...

class EncodeNull(BaseEncoder):
    word_width: Any = ...
    @classmethod
    def from_type_str(cls, type_str: Any, registry: Any): ...
    def encode(self, value: Any): ...
    def validate_value(self, value: Any) -> None: ...

class DecodeNull(BaseDecoder):
    word_width: Any = ...
    @classmethod
    def from_type_str(cls, type_str: Any, registry: Any): ...
    def decode(self, stream: Any) -> None: ...

def test_register_and_use_callables() -> None: ...
def test_register_and_use_coder_classes(): ...
