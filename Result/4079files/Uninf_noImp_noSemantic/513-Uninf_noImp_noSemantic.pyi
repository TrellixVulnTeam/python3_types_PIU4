from typing import Any

class Hsp:
    limit_length: int = ...
    align_length: Any = ...
    bits: Any = ...
    expect: Any = ...
    frame: Any = ...
    gaps: Any = ...
    identities: Any = ...
    match: Any = ...
    num_alignments: Any = ...
    positives: Any = ...
    query: Any = ...
    query_end: Any = ...
    query_start: Any = ...
    sbjct: Any = ...
    sbjct_end: Any = ...
    sbjct_start: Any = ...
    score: Any = ...
    strand: Any = ...
    str: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    @staticmethod
    def chop_sequence(sequence: Any, limit_length: Any): ...
    def chop_query(self): ...
    def chop_match(self): ...
    def chop_sbjct(self): ...
    def get_tabular_str(self): ...
    def get_hsp_key_from_cache(self): ...
    def get_query_key_from_cache(self): ...
    def get_subject_key_from_cache(self): ...
    @staticmethod
    def get_set_key(prefix: Any, value_to_set: Any): ...

class Alignment:
    hit_def: Any = ...
    title: Any = ...
    length: Any = ...
    hsp_list: Any = ...
    hit_url: str = ...
    hit_protein_name: str = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def best_evalue(self): ...
    def best_score(self): ...
    def best_identities(self): ...
    def get_id(self): ...

class BlastRecord:
    query: Any = ...
    version: Any = ...
    expect: Any = ...
    application: Any = ...
    reference: Any = ...
    alignments: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
