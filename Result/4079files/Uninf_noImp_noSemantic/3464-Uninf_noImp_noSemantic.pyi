from typing import Any, Optional

class MfaException(Exception): ...
class FormError(Exception): ...

class Login:
    _SAML_REQUEST: str = ...
    _BEGIN_AUTH_URL: str = ...
    _END_AUTH_URL: str = ...
    _PROCESS_AUTH_URL: str = ...
    _SAML_URL: str = ...
    _REFERER: str = ...
    _CREDENTIALS: Any = ...
    _MFA_DELAY: int = ...
    _MFA_TIMEOUT: int = ...
    _AWAIT_TIMEOUT: int = ...
    _SLEEP_TIMEOUT: int = ...
    _EXEC_PATH: Any = ...
    _RETRIES: int = ...
    _session: Any = ...
    _role: Any = ...
    _account: Any = ...
    _debug: Any = ...
    _headless: Any = ...
    _config: Any = ...
    _config_writer: Any = ...
    _azure_tenant_id: Any = ...
    _azure_app_id_uri: Any = ...
    _azure_mfa: Any = ...
    _azure_kmsi: Any = ...
    _azure_username: Any = ...
    _azure_password: Any = ...
    _session_duration: Any = ...
    _use_keyring: Any = ...
    saml_response: Any = ...
    def __init__(self, session: Any, role: Optional[Any] = ..., account: Optional[Any] = ..., debug: bool = ..., headless: bool = ..., saml_request: Optional[Any] = ...) -> None: ...
    def __call__(self): ...
    def _set_config_value(self, key: Any, value: Any) -> None: ...
    def _build_saml_login_url(self): ...
    @classmethod
    async def _querySelector(cls, page: Any, element: Any, retries: int = ...): ...
    async def _render_js_form(self, url: Any, username: Any, password: Any, mfa: Optional[Any] = ...) -> None: ...
    @staticmethod
    def _get_aws_roles(saml_response: Any): ...
    def _assume_role(self, role_arn: Any, principal_arn: Any, saml_response: Any): ...
    def _save_credentials(self, credentials: Any, role_arn: Any) -> None: ...
    @staticmethod
    def _choose_role(self, aws_roles: Any): ...
    @staticmethod
    def _post(session: Any, url: Any, data: Any, headers: Any): ...
    def _login(self): ...
