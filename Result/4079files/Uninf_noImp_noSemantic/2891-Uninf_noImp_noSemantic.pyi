from qcodes.instrument.visa import VisaInstrument
from typing import Any

class QuTech_Duplexer(VisaInstrument):
    _nr_input_channels: Any = ...
    _nr_output_channels: Any = ...
    SCPI_command_pause: float = ...
    def __init__(self, name: Any, address: str = ..., reset: bool = ..., nr_input_channels: int = ..., nr_output_channels: int = ...) -> None: ...
    _calibration_array: Any = ...
    def add_parameters(self, nr_input_channels: Any, nr_output_channels: Any) -> None: ...
    def set_all_switches_to(self, mode: str) -> Any: ...
    def set_all_phases_to(self, val: Any) -> None: ...
    def set_all_attenuations_to(self, val: Any) -> None: ...
    def _mode_set_parser(self, val: Any): ...
    def get_scaling_increment(self, scaling_factor: Any): ...
    def calculate_attenuation(self, current_dac_value: Any, scaling_factor: Any): ...

class Dummy_Duplexer(QuTech_Duplexer):
    _dummy_instr: bool = ...
    _address: str = ...
    _terminator: str = ...
    def __init__(self, name: Any, nr_input_channels: int = ..., nr_output_channels: int = ..., **kw: Any) -> None: ...
    def add_parameter(self, name: Any, parameter_class: Any = ..., **kwargs: Any) -> None: ...
