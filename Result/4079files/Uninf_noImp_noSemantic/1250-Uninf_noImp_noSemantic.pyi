from collections import *
from glob import glob as glob
from typing import Any, Optional

class pycoQCError(Exception): ...
class pycoQCWarning(Warning): ...

def is_readable_file(fn: Any): ...
def check_arg(arg_name: Any, arg_val: Any, required_type: Any, allow_none: bool = ..., min: Optional[Any] = ..., max: Optional[Any] = ..., choices: Any = ...): ...
def sequencing_summary_file_sample(infile: Any, outfile: Optional[Any] = ..., n_seq: int = ...): ...
def dict_to_str(c: Any, prefix: str = ..., suffix: str = ...): ...
def recursive_file_gen(dir: Any, ext: Any) -> None: ...
def get_logger(name: Optional[Any] = ..., verbose: bool = ..., quiet: bool = ...): ...
def doc_func(func: Any): ...
def make_arg_dict(func: Any): ...
def arg_opt(func: Any, arg: Any, **kwargs: Any): ...
def jhelp(f: 'python function or method') -> Any: ...
def head(fp: Any, n: int = ..., sep: str = ..., comment: Optional[Any] = ...): ...
