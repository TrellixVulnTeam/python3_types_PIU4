from typing import Any

_generator: Any

class Node:
    c: Any = ...
    parent: Any = ...
    children: Any = ...
    access: Any = ...
    fully_qualified_name: Any = ...
    contextual_unique_name: Any = ...
    def __init__(self, c: Any, parent: Any, access: Any) -> None: ...
    def __repr__(self): ...
    def __getattr__(self, item: Any): ...
    def remove(self) -> None: ...
    def find_children(self, **kwargs: Any) -> None: ...
    def find_child(self, **kwargs: Any): ...
    def find_any_child(self, **kwargs: Any): ...

class Generator:
    two_stage_visit: Any = ...
    types: Any = ...
    def __init__(self) -> None: ...
    def process(self, module: Module, args: Any) -> Any: ...
    @staticmethod
    def _build_tree(file_path: Any, compiler_parameters: Any): ...
