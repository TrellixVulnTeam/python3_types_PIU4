from typing import Any, Dict
from werkzeug.datastructures import ImmutableDict

class ConfigAttribute:
    __name__: Any = ...
    get_converter: Any = ...
    def __init__(self, name: str, get_converter: Any=...) -> None: ...
    def __get__(self, obj: object, type_: Any=...) -> object: ...
    def __set__(self, obj: object, value: object) -> None: ...

class Config(dict):
    root_path: Any = ...
    def __init__(self, root_path: str, defaults: ImmutableDict=...) -> None: ...
    def from_envvar(self, variable_name: str, silent: bool=...) -> bool: ...
    def from_pyfile(self, filename: str, silent: bool=...) -> bool: ...
    def from_object(self, obj: Any) -> None: ...
    def get_namespace(self, namespace: str, lowercase: Any=..., trim_namespace: Any=...) -> Dict[str, Any]: ...
