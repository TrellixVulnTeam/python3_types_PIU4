import argparse
import datetime
import queue
import threading
import watchdog.observers
from typing import Any, List, Optional

logger: Any

class HashCache:
    hashes: Any = ...
    def __init__(self): ...
    def has_file(self, target_folder: str, path: str) -> bool: ...
    def _add_file(self, path: str) -> Any: ...
    @staticmethod
    def _hash(path: str) -> str: ...
    @staticmethod
    def _target_folder(path: str) -> str: ...
    @staticmethod
    def _files_in_folder(folder_path: str) -> List[str]: ...

hash_cache: Any

def move_file(root_folder: str, path: str) -> Any: ...
def resolve_duplicate(path: str) -> str: ...
def is_valid_filename(path: str) -> bool: ...
def dest_path(root_folder: str, path: str) -> str: ...
def path_from_datetime(root_folder: str, dt: datetime.datetime, path: str) -> str: ...
def folder_from_datetime(dt: datetime.datetime) -> str: ...
def filename_from_datetime(dt: datetime.datetime, path: str) -> str: ...
def basename_from_datetime(dt: datetime.datetime) -> str: ...
def creation_date(path: str) -> datetime.datetime: ...
def file_creation_date(path: str) -> datetime.datetime: ...
def exif_creation_date(path: str) -> Optional[datetime.datetime]: ...

class BadExifTimestampError(Exception): ...
class MissingExifTimestampError(Exception): ...

def exif_creation_timestamp(path: str) -> str: ...
def exif_timestamp_to_datetime(ts: str) -> datetime.datetime: ...

class EventHandler(watchdog.events.PatternMatchingEventHandler):
    shared_queue: Any = ...
    target_folder: Any = ...
    def __init__(self, shared_queue: queue.Queue, target_folder: str) -> None: ...
    def on_created(self, event: Any) -> None: ...
    def on_modified(self, event: Any) -> None: ...
    def on_moved(self, event: Any) -> None: ...

class MoveFileThread(threading.Thread):
    shared_queue: Any = ...
    dest_folder: Any = ...
    is_running: bool = ...
    def __init__(self, shared_queue: queue.Queue, dest_folder: str) -> None: ...
    def run(self) -> None: ...
    def stop(self) -> None: ...

def parse_args(argv: List[str]) -> argparse.Namespace: ...
def run(src_folder: str, dest_folder: str) -> Any: ...
def main(argv: List[str]) -> int: ...
