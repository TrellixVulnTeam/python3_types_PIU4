import re
from numbers import Number
from typing import Union

__author__: str

def num_greater_than(value: Number, comparable: Number) -> bool: ...
def num_less_than(value: Number, comparable: Number) -> bool: ...
def str_contains(value: str, comparable: str) -> bool: ...
def str_matches_regex(value: str, comparable: Union[str, re._pattern_type]) -> bool: ...
def str_not_contains(value: str, comparable: str) -> bool: ...
def str_not_matches_regex(value: str, comparable: Union[str, re._pattern_type]) -> bool: ...
def equal(value: object, comparable: object) -> bool: ...
def identical(value: object, comparable: object) -> bool: ...
def not_equal(value: object, comparable: object) -> bool: ...
def not_identical(value: object, comparable: object) -> bool: ...
def is_instance(value: object, comparable: type) -> bool: ...
def is_not_instance(value: object, comparable: type) -> bool: ...
