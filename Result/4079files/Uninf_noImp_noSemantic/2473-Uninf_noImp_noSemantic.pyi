from typing import Any, Optional

_NO_DEFAULT: Any

class Features(dict):
    subject: Any = ...
    def __init__(self, subject: Any, other: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def __delitem__(self, key: Any) -> None: ...
    def __setitem__(self, key: Any, value: Any) -> None: ...
    def clear(self) -> None: ...
    def pop(self, _key: Any, _default: Optional[Any] = ...) -> None: ...
    def popitem(self) -> None: ...
    def setdefault(self, _key: Any, _default: Optional[Any] = ...) -> None: ...
    def update(self, other: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def _recursive_check(self, attr: Optional[Any] = ..., feature: Any, default: Any, *, check_adminvm: bool = ..., check_app: bool = ...): ...
    def check_with_template(self, feature: Any, default: Any = ...): ...
    def check_with_netvm(self, feature: Any, default: Any = ...): ...
    def check_with_adminvm(self, feature: Any, default: Any = ...): ...
    def check_with_template_and_adminvm(self, feature: Any, default: Any = ...): ...
