from pathlib import Path
from typing import Any, Optional, Tuple

def determine_file_encoding(file_path: Path, default: str=...) -> str: ...
def read_file_contents(file_path: Path, encoding: str, fallback_encoding: str) -> Tuple[Optional[str], Optional[str]]: ...
def resolve(path: Path) -> Path: ...
def get_settings_path(settings_path: Optional[Path], current_file_path: Optional[Path]) -> Path: ...

class SortImports:
    incorrectly_sorted: bool = ...
    skipped: bool = ...
    config: Any = ...
    output: Any = ...
    file_path: Any = ...
    sorted_imports: Any = ...
    def __init__(self, file_path: Optional[str]=..., file_contents: Optional[str]=..., write_to_stdout: bool=..., check: bool=..., show_diff: bool=..., settings_path: Optional[str]=..., ask_to_apply: bool=..., run_path: str=..., check_skip: bool=..., extension: Optional[str]=..., **setting_overrides: Any) -> None: ...
    @property
    def sections(self): ...
    @property
    def length_change(self) -> int: ...
