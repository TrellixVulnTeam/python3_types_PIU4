from .symbol_ import Symbol
from typing import Any, Optional

def _get_val(other: Any): ...

class SymbolNUMBER(Symbol):
    class_: Any = ...
    value: Any = ...
    type_: Any = ...
    lineno: Any = ...
    def __init__(self, value: Any, lineno: Any, type_: Optional[Any] = ...) -> None: ...
    def __str__(self): ...
    def __repr__(self): ...
    def __hash__(self) -> Any: ...
    @property
    def t(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __lt__(self, other: Any) -> Any: ...
    def __le__(self, other: Any) -> Any: ...
    def __gt__(self, other: Any) -> Any: ...
    def __ge__(self, other: Any) -> Any: ...
    def __add__(self, other: Any): ...
    def __radd__(self, other: Any): ...
    def __sub__(self, other: Any): ...
    def __rsub__(self, other: Any): ...
    def __mul__(self, other: Any): ...
    def __rmul__(self, other: Any): ...
    def __truediv__(self, other: Any): ...
    def __div__(self, other: Any): ...
    def __rtruediv__(self, other: Any): ...
    def __rdiv__(self, other: Any): ...
    def __or__(self, other: Any): ...
    def __ror__(self, other: Any): ...
    def __and__(self, other: Any): ...
    def __rand__(self, other: Any): ...
    def __mod__(self, other: Any): ...
    def __rmod__(self, other: Any): ...
