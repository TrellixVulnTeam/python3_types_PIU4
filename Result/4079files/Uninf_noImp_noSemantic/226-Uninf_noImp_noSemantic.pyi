from logging.handlers import RotatingFileHandler as RotatingFileHandler
from typing import Any, List
from vhpi.api.types import Interval as Interval

def _job_start_info(ip: str, src: str, due_snapshots: List[Interval]) -> str: ...
def _job_out_info(init_time: float, message: str=..., completed: bool=..., skipped: bool=..., failed: bool=..., unknown: bool=...) -> str: ...
def _fix_len(string: str, limit: int, filler: str=..., rpl: str=...) -> str: ...
def _skip_info(online: bool, due_jobs: list, ip: str, path: str) -> str: ...
def _cfg_type_error(item: str, type_: str) -> None: ...
def _cfg_no_absolute_path_error(item: str) -> None: ...
def _cfg_dst_not_exists_error(item: str) -> None: ...
def _ts_msg_lvl0(msg: str=...) -> str: ...

class lvl0:
    job_start_info: Any = ...
    job_out_info: Any = ...
    skip_info: Any = ...
    cfg_type_error: Any = ...
    cfg_no_absolute_path_error: Any = ...
    cfg_dst_not_exists_error: Any = ...
    ts_msg: Any = ...

def _backup_src_not_exist_error(backup_src: str) -> None: ...
def _backup_dst_invalid_error(backup_dst: str) -> None: ...
def _ts_msg_lvl1(msg: str=...) -> str: ...

class lvl1:
    backup_src_not_exist_error: Any = ...
    backup_dst_invalid_error: Any = ...
    ts_msg: Any = ...

def init(log_output_dir: str) -> None: ...

logger: Any
info: Any
debug: Any
warning: Any
error: Any
critical: Any
