from rest_framework import mixins, viewsets
from typing import Any, Optional

def index(request: Any, path: str = ...): ...
def about(request: Any): ...
def privacy_policy(request: Any): ...
def main_hall(request: Any): ...
def adventure(request: Any, slug: Any): ...
def adventure_list(request: Any): ...
def manual(request: Any): ...

class AuthorViewSet(viewsets.ReadOnlyModelViewSet):
    queryset: Any = ...
    serializer_class: Any = ...
    def get_queryset(self): ...

class AdventureViewSet(viewsets.ReadOnlyModelViewSet):
    queryset: Any = ...
    serializer_class: Any = ...
    def get_queryset(self): ...
    def retrieve(self, request: Any, pk: Optional[Any] = ...): ...

class RoomViewSet(viewsets.ReadOnlyModelViewSet):
    queryset: Any = ...
    serializer_class: Any = ...
    def get_queryset(self): ...

class ArtifactViewSet(viewsets.ReadOnlyModelViewSet):
    queryset: Any = ...
    serializer_class: Any = ...
    def get_queryset(self): ...

class EffectViewSet(viewsets.ReadOnlyModelViewSet):
    queryset: Any = ...
    serializer_class: Any = ...
    def get_queryset(self): ...

class MonsterViewSet(viewsets.ReadOnlyModelViewSet):
    queryset: Any = ...
    serializer_class: Any = ...
    def get_queryset(self): ...

class HintViewSet(viewsets.ReadOnlyModelViewSet):
    queryset: Any = ...
    serializer_class: Any = ...
    def get_queryset(self): ...

class PlayerProfileViewSet(viewsets.ModelViewSet):
    serializer_class: Any = ...
    queryset: Any = ...
    permission_classes: Any = ...
    def retrieve(self, request: Any, *args: Any, **kwargs: Any) -> None: ...
    def create(self, request: Any, *args: Any, **kwargs: Any): ...

class PlayerViewSet(viewsets.ModelViewSet):
    queryset: Any = ...
    serializer_class: Any = ...
    permission_classes: Any = ...
    def get_queryset(self): ...
    def update(self, request: Any, *args: Any, **kwargs: Any): ...

class LogViewSet(mixins.CreateModelMixin, viewsets.GenericViewSet):
    queryset: Any = ...
    serializer_class: Any = ...
    permission_classes: Any = ...
