from color_harmonization.gui.gl_widget import GLRenderer, GLWidget as GLWidget
from typing import Any

DEBUG: bool

class GLQuadRenderer(GLRenderer):
    scale: Any = ...
    log_scale: Any = ...
    __do_harmonization: bool = ...
    __new_texture: Any = ...
    __view_size: Any = ...
    __loaded: bool = ...
    __create_histogram: Any = ...
    __size: Any = ...
    def __init__(self, view_size: int=..., create_histogram: bool=..., size: int=...) -> None: ...
    program: Any = ...
    vertex_shader: Any = ...
    fragment_shader: Any = ...
    array_buffer: Any = ...
    vertex_array: Any = ...
    __uniform_world: Any = ...
    __uniform_projection: Any = ...
    __uniform_texture: Any = ...
    __uniform_data_texture: Any = ...
    __uniform_do_harmonization: Any = ...
    __texture: int = ...
    __data_texture: int = ...
    def load(self) -> None: ...
    __image_loader_thread: Any = ...
    def load_texture(self, path: str) -> None: ...
    __image_width: Any = ...
    __image_height: Any = ...
    def __image_loader(self, path: str) -> None: ...
    __data: Any = ...
    def __load_texture(self) -> None: ...
    world: Any = ...
    def resize(self, width: int, height: int) -> None: ...
    def render(self) -> None: ...
    def update(self) -> None: ...
