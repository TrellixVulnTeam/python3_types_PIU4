from guesslang.utils import DataSet
from pathlib import Path
from typing import Any, Callable, Dict, Iterator, List, Optional, Tuple

LOGGER: Any
NEURAL_NETWORK_HIDDEN_LAYERS: Any
OPTIMIZER_STEP: float
FITTING_FACTOR: int
CHUNK_PROPORTION: float
CHUNK_SIZE: int
ACCURACY_THRESHOLDS: Any

class Guess:
    model_dir: Any = ...
    is_default: Any = ...
    languages: Any = ...
    _classifier: Any = ...
    def __init__(self, model_dir: Optional[str]=...) -> None: ...
    def language_name(self, text: str) -> str: ...
    def scores(self, text: str) -> Dict[str, float]: ...
    def probable_languages(self, text: str, max_languages: int=...) -> Tuple[str, ...]: ...
    def learn(self, input_dir: str) -> float: ...
    def test(self, input_dir: str) -> Dict[str, Any]: ...

def _pop_many(items: List[Path], chunk_size: int) -> Iterator[List[Path]]: ...
def _to_func(vector: DataSet) -> Callable[[], Tuple[Any, Any]]: ...
def _comment(accuracy: float) -> None: ...
