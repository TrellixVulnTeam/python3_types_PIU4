import numpy as np
from typing import Any

class Plots:
    @staticmethod
    def plot(x: np.ndarray, D: np.ndarray=..., label: str=..., title: str=..., legend: str=..., place: int=...) -> Any: ...
    @staticmethod
    def plotRealAndImag(vector: np.ndarray, n: np.ndarray, title: str=..., place: int=..., label: str=...) -> Any: ...

class FPlots:
    @staticmethod
    def plot(func: Any, D: Any, ylabel: str, legend: str=...) -> Any: ...
    @staticmethod
    def Magnitude(x: Any, ylabel: str, legend: str=..., place: int=...) -> Any: ...
    @staticmethod
    def Phase(x: Any, ylabel: str, legend: str=..., place: int=...) -> Any: ...
    @staticmethod
    def X(x: Any, ylabel: str, legend: str=..., place: int=...) -> Any: ...
    @staticmethod
    def Real(x: Any, ylabel: str, legend: str=..., place: int=...) -> Any: ...

class Transforms:
    @staticmethod
    def convolute(x: Any, y: Any, n: int, D: Any) -> int: ...

class Signal:
    @staticmethod
    def u(n: int) -> int: ...
    @staticmethod
    def d(n: int) -> int: ...
    @staticmethod
    def hermitianTransposed(x: Any): ...
    def create(func: Any, D: Any): ...

class VectorSignal:
    @staticmethod
    def u(n: np.ndarray, n1: int=...) -> np.ndarray: ...
    @staticmethod
    def d(n: np.ndarray, n1: int=...) -> np.ndarray: ...
