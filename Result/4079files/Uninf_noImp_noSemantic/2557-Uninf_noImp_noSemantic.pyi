from .telegramclient import TelegramClient
from typing import Any

class _TakeoutClient:
    __PROXY_INTERFACE: Any = ...
    __finalize: Any = ...
    __client: Any = ...
    __request: Any = ...
    __success: Any = ...
    def __init__(self, finalize: Any, client: Any, request: Any) -> None: ...
    @property
    def success(self): ...
    @success.setter
    def success(self, value: Any) -> None: ...
    async def __aenter__(self): ...
    async def __aexit__(self, exc_type: Any, exc_value: Any, traceback: Any) -> None: ...
    __enter__: Any = ...
    __exit__: Any = ...
    async def __call__(self, request: Any, ordered: bool = ...): ...
    def __getattribute__(self, name: Any): ...
    def __getattr__(self, name: Any): ...
    def __setattr__(self, name: Any, value: Any): ...

class AccountMethods:
    def takeout(self, finalize: bool=..., *, contacts: bool=..., users: bool=..., chats: bool=..., megagroups: bool=..., channels: bool=..., files: bool=..., max_file_size: bool=...) -> TelegramClient: ...
    async def end_takeout(self, success: bool) -> bool: ...
