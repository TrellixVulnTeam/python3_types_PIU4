from .types import JSONType
from .util import SQLAlchemyMixin
from falcon import Request, Response
from sqlalchemy.engine import Engine
from typing import Any, Union

def put_json_to_context(res: Response, item: JSONType, key: Any=...) -> Any: ...

class _SQLResource(SQLAlchemyMixin):
    schema: Any = ...
    _sqlurl: Any = ...
    _engine: Any = ...
    _session_maker: Any = ...
    def __init__(self, sqlurl_or_engine: Union[str, Engine], **kwargs: Any) -> None: ...
    def set_engine(self, engine: Engine, **kwargs: Any) -> Any: ...
    def make_session(self, **kwds: Any): ...

class SQLRootResource(_SQLResource):
    def on_get(self, req: Request, res: Response) -> Any: ...
    def on_post(self, req: Request, res: Response) -> Any: ...

class SQLItemResource(_SQLResource):
    def on_get(self, req: Request, res: Response, item_id: Any) -> Any: ...
    def on_put(self, req: Request, res: Response, item_id: Any) -> Any: ...
    def on_patch(self, req: Request, res: Response, item_id: Any) -> Any: ...
    def on_delete(self, req: Request, res: Response, item_id: Any) -> Any: ...
