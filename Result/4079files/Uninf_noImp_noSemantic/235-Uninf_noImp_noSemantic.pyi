import unittest
from typing import Any

json_file_name: Any

def load_test_data(func: Any): ...

class JSONStreamerTests(unittest.TestCase):
    _assertions: Any = ...
    _streamer: Any = ...
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    def _catch_all(self, event_name: Any, *args: Any) -> None: ...
    def test_simple_object(self, json_input: Any) -> None: ...

class ObjectStreamerTests(unittest.TestCase):
    _assertions: Any = ...
    _streamer: Any = ...
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    def _catch_all(self, event_name: Any, *args: Any) -> None: ...
    def _assert_value(self, expected_value: Any, value: Any) -> None: ...
    def test_nested_dict(self, json_input: Any) -> None: ...
    def test_array(self, json_input: Any) -> None: ...
    def test_spl_chars_in_value(self, json_input: Any) -> None: ...
    def test_space_preservation(self, json_input: Any) -> None: ...
    def test_arbit_1(self, json_input: Any) -> None: ...

class ObjectStreamerListenerTests(unittest.TestCase):
    _streamer: Any = ...
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    _assertions: Any = ...
    def test_on_element(self, json_input: Any) -> None: ...
    def test_on_element_multiple_parses(self, json_input: Any) -> None: ...
