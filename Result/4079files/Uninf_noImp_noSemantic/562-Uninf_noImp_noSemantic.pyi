from .transitmodel import TransitModel
from numpy import int32 as int32, ndarray
from typing import Any, Optional

class QPower2ModelCL(TransitModel):
    ctx: Any = ...
    queue: Any = ...
    nptb: int = ...
    npb: int = ...
    u: Any = ...
    f: Any = ...
    pv: Any = ...
    time: Any = ...
    lcids: Any = ...
    pbids: Any = ...
    nsamples: Any = ...
    exptimes: Any = ...
    _b_u: Any = ...
    _b_time: Any = ...
    _b_f: Any = ...
    _b_p: Any = ...
    _time_id: Any = ...
    prg: Any = ...
    def __init__(self, method: str=..., is_secondary: bool=..., cl_ctx: Any=..., cl_queue: Any=...) -> None: ...
    nlc: Any = ...
    _b_lcids: Any = ...
    _b_pbids: Any = ...
    _b_nsamples: Any = ...
    _b_etimes: Any = ...
    def set_data(self, time: Any, lcids: Optional[Any] = ..., pbids: Optional[Any] = ..., nsamples: Optional[Any] = ..., exptimes: Optional[Any] = ...) -> None: ...
    def evaluate_ps(self, k: Any, ldc: Any, t0: Any, p: Any, a: Any, i: Any, e: Any=..., w: Any=..., copy: Any=...) -> ndarray: ...
    npv: Any = ...
    spv: Any = ...
    def evaluate_pv(self, pvp: ndarray, ldc: ndarray, copy: bool=...) -> ndarray: ...
