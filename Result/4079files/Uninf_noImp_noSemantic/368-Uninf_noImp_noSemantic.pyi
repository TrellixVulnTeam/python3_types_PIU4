from enum import Enum
from implements import Interface
from typing import Any

class Direction(Enum):
    N: str = ...
    W: str = ...
    S: str = ...
    E: str = ...

class Flyable(Interface):
    def fly(self) -> None: ...
    def migrate(self) -> Direction: ...

class Quackable(Interface):
    echoes: Any = ...
    def quack(self) -> None: ...

class Animal:
    name: Any = ...
    def __init__(self, name: Any) -> None: ...

class BaldEagle(Animal):
    def fly(self) -> None: ...
    def migrate(self) -> Direction: ...

class MallardDuck(Animal):
    echoes: bool = ...
    def fly(self) -> None: ...
    def quack(self) -> None: ...
    def migrate(self) -> Direction: ...
