from typing import Any, Optional

class Exhausted(Exception): ...

class ParameterMaker:
    forbidden: Any = ...
    interface: Any = ...
    channel: Any = ...
    next_cc: Any = ...
    prefix: Any = ...
    expand: Any = ...
    exhausted: bool = ...
    def __init__(self, interface: Any, channel: Any, prefix: str = ..., first_cc: int = ..., expand: bool = ...) -> None: ...
    def make(self, is_button: bool = ...): ...
    def advance(self) -> None: ...
    def skip(self, n: Any) -> None: ...

class ViewMaker:
    interface: Any = ...
    next_index: int = ...
    prefix: Any = ...
    def __init__(self, interface: Any, prefix: str = ...) -> None: ...
    def make(self, view: Optional[Any] = ...): ...
