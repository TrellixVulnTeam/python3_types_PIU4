from typing import Any, Optional

_MAX_CATEGORICAL_FEATURE_VALUES: Any
_CATEGORICAL_FEATURE_KEYS: Any
_DENSE_FLOAT_FEATURE_KEYS: Any
_FEATURE_BUCKET_COUNT: int
_BUCKET_FEATURE_KEYS: Any
_VOCAB_SIZE: int
_OOV_SIZE: int
_VOCAB_FEATURE_KEYS: Any
_LABEL_KEY: str
_FARE_KEY: str

def _transformed_name(key: Any): ...
def _transformed_names(keys: Any): ...
def _get_raw_feature_spec(schema: Any): ...
def _gzip_reader_fn(): ...
def _fill_in_missing(x: Any): ...
def preprocessing_fn(inputs: Any): ...
def _build_estimator(config: Any, hidden_units: Optional[Any] = ..., warm_start_from: Optional[Any] = ...): ...
def _example_serving_receiver_fn(transform_output: Any, schema: Any): ...
def _eval_input_receiver_fn(transform_output: Any, schema: Any): ...
def _input_fn(filenames: Any, transform_output: Any, batch_size: int = ...): ...
def trainer_fn(hparams: Any, schema: Any): ...
