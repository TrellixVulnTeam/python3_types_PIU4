import os
import sqlite3
from ..lexical_analysis import Lexeme as Lexeme
from ..source_vector import SourceVector
from pathlib import Path as Path
from typing import Any, Iterable, Iterator, MutableMapping, Optional, Union

SCHEMA: str

class Vectors(MutableMapping[str, SourceVector]):
    conn: Any = ...
    def __init__(self, conn: Optional[sqlite3.Connection]=...) -> None: ...
    def _instantiate_schema(self) -> None: ...
    def _mmap(self) -> None: ...
    def length_of_vectors(self, hashes: Iterable[str]) -> int: ...
    def disconnect(self) -> None: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator[str]: ...
    def __getitem__(self, filehash: str) -> SourceVector: ...
    def __setitem__(self, filehash: str, vector: SourceVector) -> None: ...
    def __delitem__(self) -> None: ...
    @classmethod
    def from_filename(cls: Any, path: Union[str, os.PathLike]) -> Vectors: ...

def query_table(conn: sqlite3.Connection, hashes: Iterable[str]) -> Any: ...
def determine_from_language() -> sqlite3.Connection: ...
