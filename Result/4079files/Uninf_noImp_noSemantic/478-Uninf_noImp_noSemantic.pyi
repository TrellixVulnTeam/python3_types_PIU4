from typing import Any, Optional

def init(self, context: Optional[Any] = ...) -> None: ...
def path(path: Any): ...
def function(context: Any, *args: Any): ...

class Simple:
    _protected: bool = ...
    __init__: Any = ...
    static: str = ...
    class foo:
        __init__: Any = ...
        class bar:
            __init__: Any = ...
            def baz(self): ...

class CallableShallow:
    __init__: Any = ...
    def __call__(self, *args: Any): ...

class CallableDeep:
    __init__: Any = ...
    class foo:
        __init__: Any = ...
        class bar:
            __init__: Any = ...
            def __call__(self, *extra: Any): ...

class CallableMixed:
    __init__: Any = ...
    def __call__(self, *args: Any): ...
    class foo:
        __init__: Any = ...
        class bar:
            __init__: Any = ...
            def baz(self): ...
