from PyQt5.QtCore import QAbstractItemModel, QAbstractListModel as QAbstractListModel, QByteArray as QByteArray, QDataStream as QDataStream, QJsonValue as QJsonValue, QMimeData as QMimeData, QModelIndex, Qt
from PyQt5.QtWidgets import QFileDialog as QFileDialog
from typing import Any, Optional

class QJsonTreeItem:
    mParent: Any = ...
    mChilds: Any = ...
    mType: Any = ...
    mValue: Any = ...
    def __init__(self, parent: Optional[Any] = ...) -> None: ...
    def appendChild(self, item: Any) -> None: ...
    def child(self, row: int) -> Any: ...
    def parent(self): ...
    def childCount(self): ...
    def row(self): ...
    mKey: Any = ...
    def setKey(self, key: str) -> Any: ...
    def setValue(self, value: str) -> Any: ...
    def setType(self, type: QJsonValue.Type) -> Any: ...
    def key(self): ...
    def value(self): ...
    def type(self): ...
    def load(self, value: Any, parent: Optional[Any] = ...): ...

class QJsonModel(QAbstractItemModel):
    mRootItem: Any = ...
    mHeaders: Any = ...
    def __init__(self, parent: Optional[Any] = ...) -> None: ...
    def load(self, fileName: Any): ...
    mDocument: Any = ...
    def loadJson(self, json: Any): ...
    def data(self, index: QModelIndex, role: int=...) -> Any: ...
    def headerData(self, section: int, orientation: Qt.Orientation, role: int=...) -> Any: ...
    def index(self, row: int, column: int, parent: QModelIndex=...) -> Any: ...
    def parent(self, index: QModelIndex) -> Any: ...
    def rowCount(self, parent: QModelIndex=...) -> Any: ...
    def columnCount(self, parent: QModelIndex=...) -> Any: ...
