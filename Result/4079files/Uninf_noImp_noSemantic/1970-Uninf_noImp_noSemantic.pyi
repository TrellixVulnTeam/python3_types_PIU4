from keras.models import Model
from typing import Any, Optional

NUM_EPOCHS: int
PATIENCE: int

class NEM:
    use_event_structure: Any = ...
    embedding_dim: Any = ...
    data_processor: Any = ...
    model: Any = ...
    model_prefix: Any = ...
    custom_objects: Any = ...
    def __init__(self, use_event_structure: bool = ..., embedding_dim: int = ...) -> None: ...
    def train_nem(self, inputs: Any, labels: Any, pretrained_embedding_file: Optional[Any] = ..., tune_embedding: bool = ...) -> None: ...
    def test_nem(self, inputs: Any, labels: Any, output_filename: Optional[Any] = ...) -> None: ...
    def _build_structured_model(self, inputs: Any, pretrained_embedding: Any=..., tune_embedding: Any=...) -> Model: ...
    def _build_flat_model(self, inputs: Any, pretrained_embedding: Any=..., tune_embedding: Any=...) -> Model: ...
    def make_inputs(self, filename: str, for_test: Any=..., pad_info: Any=..., include_sentences_in_events: Any=...) -> Any: ...
    def _save_model(self, epoch: int) -> Any: ...
    def _save_model_as_best(self, epoch: int) -> Any: ...
    def load_model(self, epoch: int=...) -> Any: ...

def main() -> None: ...
