from collections import *
from pycoQC.common import *
from typing import Any

logger: Any
logLevel_dict: Any

class Fast5_to_seq_summary:
    attrs_grp_dict: Any = ...
    fast5_dir: Any = ...
    seq_summary_fn: Any = ...
    threads: Any = ...
    max_fast5: Any = ...
    fields: Any = ...
    basecall_id: Any = ...
    include_path: Any = ...
    verbose_level: Any = ...
    def __init__(self, fast5_dir: str, seq_summary_fn: str, max_fast5: int=..., threads: int=..., basecall_id: int=..., verbose_level: 'int {0,1,2}'=..., include_path: bool=..., fields: 'list of str'=...) -> None: ...
    def _list_fast5(self, in_q: Any, error_q: Any) -> None: ...
    def _read_fast5(self, in_q: Any, out_q: Any, error_q: Any, counter_q: Any, worker_id: Any) -> None: ...
    def _write_seq_summary(self, out_q: Any, error_q: Any, counter_q: Any) -> None: ...
    @staticmethod
    def _get_h5_attrs(fp: Any, grp: Any, attrs: Any): ...
