from ....symbols import POS as POS
from typing import Any, Optional

class DutchLemmatizer:
    univ_pos_name_variants: Any = ...
    @classmethod
    def load(cls, path: Any, index: Optional[Any] = ..., exc: Optional[Any] = ..., rules: Optional[Any] = ..., lookup: Optional[Any] = ...): ...
    index: Any = ...
    exc: Any = ...
    rules: Any = ...
    lookup_table: Any = ...
    def __init__(self, index: Optional[Any] = ..., exceptions: Optional[Any] = ..., rules: Optional[Any] = ..., lookup: Optional[Any] = ...) -> None: ...
    def __call__(self, string: Any, univ_pos: Any, morphology: Optional[Any] = ...): ...
    def lookup(self, string: Any): ...
    def noun(self, string: Any, morphology: Optional[Any] = ...): ...
    def verb(self, string: Any, morphology: Optional[Any] = ...): ...
    def adj(self, string: Any, morphology: Optional[Any] = ...): ...
    def det(self, string: Any, morphology: Optional[Any] = ...): ...
    def pron(self, string: Any, morphology: Optional[Any] = ...): ...
    def adp(self, string: Any, morphology: Optional[Any] = ...): ...
    def punct(self, string: Any, morphology: Optional[Any] = ...): ...

def lemmatize(string: Any, index: Any, exceptions: Any, rules: Any): ...
