from typing import Any

def make_pem(public_key: str) -> str: ...

class GooglePlayValidator:
    purchase_state_ok: int = ...
    bundle_id: Any = ...
    public_key: Any = ...
    def __init__(self, bundle_id: str, api_key: str, default_valid_purchase_state: int=...) -> None: ...
    def validate(self, receipt: str, signature: str) -> dict: ...
    def _validate_signature(self, receipt: str, signature: str) -> bool: ...

class GoogleVerificationResult:
    raw_response: dict = ...
    is_expired: bool = ...
    is_canceled: bool = ...
    def __init__(self, raw_response: dict, is_expired: bool, is_canceled: bool) -> None: ...
    def __repr__(self): ...

class GooglePlayVerifier:
    bundle_id: Any = ...
    private_key_path: Any = ...
    http_timeout: Any = ...
    http: Any = ...
    def __init__(self, bundle_id: str, private_key_path: str, http_timeout: int=...) -> None: ...
    @staticmethod
    def _ms_timestamp_expired(ms_timestamp: str) -> bool: ...
    def _authorize(self): ...
    def check_purchase_subscription(self, purchase_token: str, product_sku: str, service: Any) -> dict: ...
    def check_purchase_product(self, purchase_token: str, product_sku: str, service: Any) -> dict: ...
    def verify(self, purchase_token: str, product_sku: str, is_subscription: bool=...) -> dict: ...
    def verify_with_result(self, purchase_token: str, product_sku: str, is_subscription: bool=...) -> GoogleVerificationResult: ...
