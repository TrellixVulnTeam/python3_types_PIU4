from .constants import *
from . import socketcan
from typing import Any

class Message(socketcan.Message):
    def __init__(self, fc: Any, node_id: Any, data: Any = ...) -> None: ...
    @property
    def function_code(self): ...
    @property
    def node_id(self): ...
    @classmethod
    def factory(cls: Any, msg: socketcan.Message) -> Any: ...

class NmtMessage(Message):
    def __init__(self, command: Any, data: Any) -> None: ...
    @classmethod
    def factory(cls, cmd: Any, data: Any): ...

class NmtNodeControlMessage(NmtMessage):
    def __init__(self, cmd: Any, target_id: Any) -> None: ...
    @classmethod
    def factory(cls, data: Any): ...

class NmtGfcMessage(NmtMessage):
    def __init__(self) -> None: ...

class NmtMasterNodeIdMessage(NmtMessage):
    def __init__(self, priority: Any, node_id: Any) -> None: ...
    @classmethod
    def factory(cls, data: Any): ...

class NmtFlyingMasterRequest(NmtMessage):
    def __init__(self) -> None: ...

class NmtActiveMasterRequest(NmtMessage):
    def __init__(self) -> None: ...

class NmtMasterResponse(NmtMessage):
    def __init__(self) -> None: ...

class NmtMasterRequest(NmtMessage):
    def __init__(self) -> None: ...

class NmtForceFlyingMasterRequest(NmtMessage):
    def __init__(self) -> None: ...

class SyncMessage(Message):
    def __init__(self) -> None: ...

class EmcyMessage(Message):
    def __init__(self, emcy_id: Any, eec: Any, er: Any, msef: int = ...) -> None: ...
    @classmethod
    def factory(cls, id: Any, data: Any): ...

class PdoMessage(Message):
    def __init__(self, fc: Any, node_id: Any, data: Any) -> None: ...

class SdoMessage(Message):
    def __init__(self, fc: Any, node_id: Any, header: Any, sdo_data: Any) -> None: ...
    @property
    def node_id(self): ...
    @property
    def header(self): ...
    @property
    def sdo_data(self): ...

class SdoRequest(SdoMessage):
    def __init__(self, node_id: Any, header: Any, data: Any) -> None: ...
    @classmethod
    def factory(cls, node_id: Any, data: Any): ...

class SdoResponse(SdoMessage):
    def __init__(self, node_id: Any, header: Any, data: Any) -> None: ...
    @classmethod
    def factory(cls, node_id: Any, data: Any): ...

class SdoAbortResponse(SdoResponse):
    def __init__(self, node_id: Any, index: Any, subindex: Any, abort_code: Any) -> None: ...

class SdoDownloadInitiateRequest(SdoRequest):
    def __init__(self, node_id: Any, n: Any, e: Any, s: Any, index: Any, subindex: Any, data: Any) -> None: ...

class SdoDownloadSegmentRequest(SdoRequest):
    def __init__(self, node_id: Any, t: Any, n: Any, c: Any, data: Any) -> None: ...

class SdoDownloadInitiateResponse(SdoResponse):
    def __init__(self, node_id: Any, index: Any, subindex: Any) -> None: ...

class SdoDownloadSegmentResponse(SdoResponse):
    def __init__(self, node_id: Any, t: Any) -> None: ...

class SdoUploadInitiateRequest(SdoRequest):
    def __init__(self, node_id: Any, index: Any, subindex: Any) -> None: ...

class SdoUploadInitiateResponse(SdoResponse):
    def __init__(self, node_id: Any, n: Any, e: Any, s: Any, index: Any, subindex: Any, data: Any) -> None: ...

class SdoUploadSegmentRequest(SdoRequest):
    def __init__(self, node_id: Any, t: Any) -> None: ...

class SdoUploadSegmentResponse(SdoResponse):
    def __init__(self, node_id: Any, t: Any, n: Any, c: Any, data: Any) -> None: ...

class NmtErrorControlMessage(Message):
    def __init__(self, node_id: Any, data: Any) -> None: ...
    @classmethod
    def factory(self, node_id: Any, data: Any): ...

class BootupMessage(NmtErrorControlMessage):
    def __init__(self, node_id: Any) -> None: ...

class HeartbeatMessage(NmtErrorControlMessage):
    def __init__(self, node_id: Any, nmt_state: Any) -> None: ...
