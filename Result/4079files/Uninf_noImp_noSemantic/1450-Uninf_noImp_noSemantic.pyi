from .casetypes import CASETYPES as CASETYPES
from .events import Events
from .kickban import KickBanMixin
from .movetocore import MoveToCore
from .mutes import MuteMixin
from .names import ModInfo
from .settings import ModSettings
from .slowmode import Slowmode
from redbot.core import commands, modlog as modlog
from redbot.core.bot import Red
from typing import Any

_: Any
T_: Any
__version__: str

class CompositeMetaClass: ...

class Mod(ModSettings, Events, KickBanMixin, MoveToCore, MuteMixin, ModInfo, Slowmode, commands.Cog, metaclass=CompositeMetaClass):
    default_global_settings: Any = ...
    default_guild_settings: Any = ...
    default_channel_settings: Any = ...
    default_member_settings: Any = ...
    default_user_settings: Any = ...
    bot: Any = ...
    settings: Any = ...
    cache: Any = ...
    tban_expiry_task: Any = ...
    last_case: Any = ...
    def __init__(self, bot: Red) -> None: ...
    async def initialize(self) -> None: ...
    def cog_unload(self) -> None: ...
    async def _maybe_update_config(self) -> None: ...
    async def bot_check(self, ctx: Any): ...
