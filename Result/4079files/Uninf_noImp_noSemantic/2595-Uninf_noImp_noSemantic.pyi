from queue import Queue
from typing import Any

class SkillDataLoader:
    def __init__(self) -> None: ...
    max_qsize: Any = ...
    def load_skill_queue(self, max_qsize: int = ...): ...
    def make_data_set(self, q: Any): ...
    def __read_file_then_convert(self): ...
    def convert_data(self, line: Any, prev_func: Any): ...
    def make_X(self): ...
    def make_y(self, text: Any): ...

class RemoveOldDataQueue(Queue):
    def put_nowait(self, *args: Any, **kwargs: Any) -> None: ...

class SkillData:
    class __Singleton:
        q: Any = ...
        def __init__(self) -> None: ...
    instance: Any = ...
    def __init__(self) -> None: ...
    def __getattr__(self, name: Any): ...
    def reset(self) -> None: ...

class FeedDataLoader:
    FALSE_LABEL: int = ...
    TRUE_LABEL: int = ...
    data_handler: Any = ...
    def __init__(self) -> None: ...
    def load_data(self, fname: Any): ...
    def make_train_set(self, feed: Any, pocket: Any): ...
    def map_str_to_dict(self, data: Any): ...
    def map_category2id(self, feed: Any): ...

class FeedData:
    class __Singleton:
        def __init__(self) -> None: ...
    instance: Any = ...
    def __init__(self) -> None: ...
    def __getattr__(self, name: Any): ...
    def reset(self) -> None: ...
