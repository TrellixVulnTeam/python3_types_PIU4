from core.environment import Environment
from typing import Any, Optional

conf: Any

def set_logging(verbose: bool = ...) -> None: ...
def get_arguments(): ...

class CLIEnvironment(Environment):
    def __init__(self, cli_args: Any, *args: Any, **kwargs: Any) -> None: ...

def exec_scripts(path: Any, name_pattern: Any): ...
def run_python_module(exp_name: Any, file_name: Any, benchmark_name: Optional[Any] = ...): ...

class Manager:
    names: Any = ...
    benchmark_name: Any = ...
    verbose: Any = ...
    debug: Any = ...
    def __init__(self, args: Any) -> None: ...
    def set_configuration(self, args: Any) -> None: ...
    def set_environment(self, args: Any) -> None: ...
    def start(self, action: Any) -> None: ...
    def run_benchmark(self, name: Any) -> None: ...
    def print_hw_parameters(self, args: Any) -> None: ...

def main() -> None: ...
