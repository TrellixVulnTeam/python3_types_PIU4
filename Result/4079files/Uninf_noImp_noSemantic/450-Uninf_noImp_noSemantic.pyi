from openvino.inference_engine import IECore
from typing import Any

class tiny_yolo_processor:
    EXAMPLES_BASE_DIR: str = ...
    DETECTION_THRESHOLD: float = ...
    MAX_IOU: float = ...
    LABELS_FILE_NAME: str = ...
    _ie: Any = ...
    _ty_labels: Any = ...
    _ty_net: Any = ...
    _ty_input_blob: Any = ...
    _ty_output_blob: Any = ...
    _ty_input_shape: Any = ...
    _ty_output_shape: Any = ...
    _ty_exec_net: Any = ...
    def __init__(self, ty_ir: str, ie: IECore, device: str) -> None: ...
    _ty_output: Any = ...
    _filtered_objs: Any = ...
    def tiny_yolo_inference(self, input_image: Any): ...
    _probability_threshold: Any = ...
    def _filter_objects(self, input_image_width: Any, input_image_height: Any): ...
    def _get_duplicate_box_mask(self, box_list: Any): ...
    def _boxes_to_pixel_units(self, box_list: Any, image_width: Any, image_height: Any, grid_size: Any) -> None: ...
    def _get_intersection_over_union(self, box_1: Any, box_2: Any): ...
