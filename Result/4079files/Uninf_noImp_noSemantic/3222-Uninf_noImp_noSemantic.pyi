import numpy as np
from typing import Any, Callable, Dict, List

class Board:
    landscape_template: Any = ...
    gameover_template: Any = ...
    shooter: Any = ...
    landscape: Any = ...
    y1: Any = ...
    y2: Any = ...
    x1: Any = ...
    x2: Any = ...
    def __init__(self) -> None: ...
    def play_game(self, get_command_callback: Callable[[int, int, int], str]) -> int: ...
    def find_game_position(self, threshold: Any) -> Dict: ...
    @staticmethod
    def reject_outliers(values: List[float]) -> np.array: ...
    @staticmethod
    def compute_distance_and_size(roi: np.array, max_distance: int) -> Tuple[int, int]: ...
    def compute_speed(self, distance: int, last_distance: int, speed: int, last_speeds: List[float], last_compute_speed: float) -> int: ...
    @staticmethod
    def start_game() -> None: ...
    @staticmethod
    def reset_game() -> None: ...
    def get_game_landscape_and_set_focus_or_die(self, threshold: Any=...) -> Dict: ...
