from typing import Any, Optional

log: Any

class HAWebsocketEventHandler:
    callbacks: Any = ...
    daemon: bool = ...
    connected: bool = ...
    authenticated: bool = ...
    requestCallbacks: Any = ...
    lastId: int = ...
    worker: Any = ...
    settings: Any = ...
    url: Any = ...
    ws: Any = ...
    password: Any = ...
    def __init__(self, group: Optional[Any] = ..., target: Optional[Any] = ..., name: Optional[Any] = ..., settings: Any = ..., kwargs: Optional[Any] = ..., verbose: Optional[Any] = ...) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def on_open(self) -> None: ...
    def on_message(self, message: Any) -> None: ...
    def on_error(self, error: Any) -> None: ...
    def on_close(self) -> None: ...
    def after_auth(self) -> None: ...
    def request(self, data: Any, response: Optional[Any] = ...) -> None: ...
    def call_service(self, domain: Any, service: Any, service_data: Any = ...) -> None: ...
    def _register(self, Id: Any, cb: Any) -> None: ...
    def _handleAuth(self, msg: Any) -> None: ...
    def _handleEvent(self, msg: Any) -> None: ...
    def add_listener(self, entity: Any, callback: Any) -> None: ...
