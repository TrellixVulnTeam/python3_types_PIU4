import networkx as nx
from pybel import BELGraph, BaseEntity as BaseEntity
from pybel.struct.mutation import get_nodes_in_all_shortest_paths as get_nodes_in_all_shortest_paths
from typing import Any, List, Mapping, Optional, Tuple

__all__: Any
default_edge_ranking: Any

def rank_path(graph: BELGraph, path: List[BaseEntity], edge_ranking: Optional[Mapping[str, int]]=...) -> int: ...
def _get_shortest_path_between_subgraphs_helper(graph: nx.Graph, a: nx.Graph, b: nx.Graph) -> List[List[Any]]: ...
def get_shortest_directed_path_between_subgraphs(graph: BELGraph, a: BELGraph, b: BELGraph) -> List[List[Any]]: ...
def get_shortest_undirected_path_between_subgraphs(graph: BELGraph, a: BELGraph, b: BELGraph) -> List[List[Any]]: ...
def find_root_in_path(graph: BELGraph, path_nodes: List[BaseEntity]) -> Tuple[BELGraph, BaseEntity]: ...
