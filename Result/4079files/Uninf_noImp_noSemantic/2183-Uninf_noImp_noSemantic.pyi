from collections import defaultdict
from types import GeneratorType
from typing import Any

MAX_NAME_LEN: int
CHAT_FILENAME_FMT: str
EXT: str
COL_SQL: str
MSG_SQL: str
MSG_FMT: str
CHAT_FMT: str
DEFAULT_CHAT_ID: str

class Message:
    def __str__(self): ...
    @property
    def formatted_msg(self) -> str: ...

class Chat:
    def __new__(cls: Any, msgs: tuple, id: int=...) -> Any: ...
    def __str__(self): ...
    def __repr__(self): ...
    def __hash__(self) -> Any: ...
    def __iter__(self) -> Any: ...
    def save(self, filename: str=..., max_length: int=...) -> str: ...

def gen_rows(path: str) -> GeneratorType: ...
def get_skype_map(path: str) -> defaultdict: ...
def gen_skype_chats(path: str) -> GeneratorType: ...
def chats_to_files(file: str=..., save: str=...) -> Any: ...
