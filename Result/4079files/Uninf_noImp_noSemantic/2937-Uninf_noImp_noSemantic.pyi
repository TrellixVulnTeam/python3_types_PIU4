from gitexplorer import basics
from typing import Any

class AggregatorRegistry(type):
    aggregators: Any = ...
    def __new__(cls, name: Any, bases: Any, dct: Any): ...
    @classmethod
    def get(cls, name: Any): ...
    @classmethod
    def load(cls, *aggregator_modules: Any) -> None: ...

class AbstractAggregator(basics.GitExplorerBase, metaclass=AggregatorRegistry):
    @property
    def name(self) -> None: ...
    def provides(self) -> str: ...
    def requires(self) -> str: ...
    def run(self) -> None: ...
