from typing import Any

class AnyJoint:
    _id: Any = ...
    _handle: Any = ...
    _def_op_mode: Any = ...
    def __init__(self, id: Any, handle: Any) -> None: ...
    def set_target_velocity(self, target: Any) -> None: ...
    def set_target_position(self, target: Any) -> None: ...
    def get_force(self): ...
    def set_maximum_force(self, force: Any) -> None: ...
    def set_position(self, position: Any) -> None: ...
    def get_position(self): ...
    def get_matrix(self): ...
    def set_matrix(self, matrix: Any) -> None: ...

class JointWithVelocityControl:
    _any_joint: Any = ...
    def __init__(self, any_joint: AnyJoint) -> None: ...
    def set_target_velocity(self, target: float) -> Any: ...
    def set_maximum_force(self, force: float) -> Any: ...
    def get_position(self): ...
    def get_force(self): ...

class JointWithPositionControl:
    _any_joint: Any = ...
    def __init__(self, any_joint: AnyJoint) -> None: ...
    def set_target_position(self, target: float) -> Any: ...
    def set_maximum_force(self, force: float) -> Any: ...
    def get_position(self): ...
    def get_force(self): ...

class PassiveJoint:
    _any_joint: Any = ...
    def __init__(self, any_joint: AnyJoint) -> None: ...
    def get_position(self): ...
    def set_position(self, pos: float) -> Any: ...

class SphericalJoint:
    _any_joint: Any = ...
    def __init__(self, any_joint: AnyJoint) -> None: ...
    def set_matrix(self, matrix: Any) -> None: ...
    def get_matrix(self): ...

class SpringJoint:
    _any_joint: Any = ...
    def __init__(self, any_joint: AnyJoint) -> None: ...
    def set_target_position(self, target: float) -> Any: ...
    def set_maximum_force(self, force: float) -> Any: ...
    def get_position(self): ...
    def get_force(self): ...
    def set_target_velocity(self, target: float) -> Any: ...

class Joints:
    _id: Any = ...
    _def_op_mode: Any = ...
    def __init__(self, id: Any) -> None: ...
    def spherical(self, name: str) -> SphericalJoint: ...
    def spring(self, name: str) -> SpringJoint: ...
    def passive(self, name: str) -> PassiveJoint: ...
    def with_position_control(self, name: str) -> JointWithPositionControl: ...
    def with_velocity_control(self, name: str) -> JointWithVelocityControl: ...
    def _get_joint_with_param(self, name: Any, types: Any, mode: Any) -> AnyJoint: ...
    def _get_info_about_joint(self, handle: Any): ...
    def _get_object_handle(self, name: Any): ...
