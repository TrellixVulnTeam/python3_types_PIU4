from typing import Any, Optional

class HMMEstimator:
    transmat: Any = ...
    obprob: Any = ...
    startprob: Any = ...
    n_iter: Any = ...
    error: Any = ...
    n_states: Any = ...
    def __init__(self, transmat: Optional[Any] = ..., obprob: Optional[Any] = ..., startprob: Optional[Any] = ..., n_states: Optional[Any] = ..., n_iter: int = ..., error: float = ...) -> None: ...
    def fit(self, seq: Any) -> None: ...
    def predict(self, seq: Any) -> None: ...
    def score(self, seq: Any, method: str = ...): ...
    def decoding(self, seq: Any): ...
    def _forward(self, seq: Any): ...
    def forward_prob(self, seq: Any): ...
    def backward_prob(self, seq: Any): ...
    def _backward(self, seq: Any): ...
    def _gamma(self, seq: Any): ...
    def _xi(self, seq: Any): ...
