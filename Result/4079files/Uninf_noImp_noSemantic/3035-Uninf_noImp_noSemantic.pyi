from collections import *
from pycoQC.common import *
from typing import Any

class pycoQC_parse:
    logger: Any = ...
    counter: Any = ...
    runid_list: Any = ...
    filter_calibration: Any = ...
    min_barcode_percent: Any = ...
    summary_files_list: Any = ...
    barcode_files_list: Any = ...
    bam_file_list: Any = ...
    def __init__(self, summary_file: str, barcode_file: str=..., bam_file: str=..., runid_list: list=..., filter_calibration: bool=..., min_barcode_percent: float=..., verbose: bool=..., quiet: bool=...) -> None: ...
    def __call__(self): ...
    def __str__(self): ...
    def __repr__(self): ...
    run_type: str = ...
    def _parse_summary(self): ...
    def _parse_barcode(self, df: Any): ...
    def _parse_bam(self, df: Any): ...
    def _clean_df(self, df: Any): ...
    @staticmethod
    def _check_df_columns(df: Any, required_colnames: Any, optional_colnames: Any): ...
    @staticmethod
    def _expand_file_names(fn: Any): ...
    @staticmethod
    def _merge_files_to_df(fn_list: Any): ...
