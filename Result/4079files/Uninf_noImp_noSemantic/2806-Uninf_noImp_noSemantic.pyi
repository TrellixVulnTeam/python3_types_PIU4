import bpy
from bpy.types import Operator, Panel, PropertyGroup
from typing import Any

bl_info: Any

class RockBuilderPanel(Panel):
    bl_label: str = ...
    bl_idname: str = ...
    bl_space_type: str = ...
    bl_region_type: str = ...
    bl_context: str = ...
    bl_category: str = ...
    def draw(self, context: Any) -> None: ...

def setup_big_texture(text: bpy.types.Texture) -> Any: ...
def displace_big() -> bpy.types.Texture: ...
def setup_small_texture(text: bpy.types.Texture) -> Any: ...
def displace_small() -> bpy.types.Texture: ...
def active(): ...
def build_rock(context: Any) -> None: ...

class RockBuilderOperator(Operator):
    bl_label: str = ...
    bl_idname: str = ...
    bl_description: str = ...
    bl_options: Any = ...
    def execute(self, context: Any): ...

class RockBuilderUpdate(Operator):
    bl_label: str = ...
    bl_idname: str = ...
    bl_description: str = ...
    bl_options: Any = ...
    def execute(self, context: Any): ...

class RockGeneratorProperties(PropertyGroup):
    viewport_subsurf: Any = ...
    render_subsurf: Any = ...
    random_variation: Any = ...
    bevel_width: Any = ...
    displace_amount: Any = ...
    small_displace_amount: Any = ...
    texture_size: Any = ...
    small_texture_size: Any = ...
    elongation: Any = ...

classes: Any

def register() -> None: ...
def unregister() -> None: ...
