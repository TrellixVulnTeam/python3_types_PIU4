import passgithelper
from typing import Any

def xdg_dir(request: Any, mocker: Any) -> None: ...
def test_handle_skip_nothing(monkeypatch: Any) -> None: ...
def test_handle_skip_exits(monkeypatch: Any) -> None: ...

class TestSkippingDataExtractor:
    class ExtractorImplementation(passgithelper.SkippingDataExtractor):
        def configure(self, config: Any) -> None: ...
        def __init__(self, skip_characters: int=...) -> None: ...
        def _get_raw(self, entry_text: Any, entry_lines: Any): ...
    def test_smoke(self) -> None: ...
    def test_too_short(self) -> None: ...

class TestSpecificLineExtractor:
    def test_smoke(self) -> None: ...
    def test_no_such_line(self) -> None: ...

class TestRegexSearchExtractor:
    def test_smoke(self) -> None: ...
    def test_missing_group(self) -> None: ...
    def test_configuration(self) -> None: ...
    def test_configuration_checks_groups(self) -> None: ...

class TestEntryNameExtractor:
    def test_smoke(self) -> None: ...

def test_parse_mapping_file_missing(xdg_dir: Any) -> None: ...
def test_parse_mapping_from_xdg(xdg_dir: Any) -> None: ...

class TestScript:
    def test_help(self, capsys: Any) -> None: ...
    def test_skip(self, monkeypatch: Any, capsys: Any) -> None: ...
    def test_smoke_resolve(self, xdg_dir: Any, monkeypatch: Any, mocker: Any, capsys: Any) -> None: ...
    def test_path_used_if_present_fails(self, xdg_dir: Any, monkeypatch: Any, caplog: Any) -> None: ...
    def test_path_used_if_present(self, xdg_dir: Any, monkeypatch: Any, mocker: Any, capsys: Any) -> None: ...
    def test_wildcard_matching(self, xdg_dir: Any, monkeypatch: Any, mocker: Any, capsys: Any) -> None: ...
    def test_username_provided(self, xdg_dir: Any, monkeypatch: Any, mocker: Any, capsys: Any) -> None: ...
    def test_username_skipped_if_provided(self, xdg_dir: Any, monkeypatch: Any, mocker: Any, capsys: Any) -> None: ...
    def test_custom_mapping_used(self, xdg_dir: Any, monkeypatch: Any, mocker: Any, capsys: Any) -> None: ...
    def test_prefix_skipping(self, xdg_dir: Any, monkeypatch: Any, mocker: Any, capsys: Any) -> None: ...
    def test_select_unknown_extractor(self, xdg_dir: Any, monkeypatch: Any, capsys: Any) -> None: ...
    def test_regex_username_selection(self, xdg_dir: Any, monkeypatch: Any, mocker: Any, capsys: Any) -> None: ...
    def test_entry_name_is_user(self, xdg_dir: Any, monkeypatch: Any, mocker: Any, capsys: Any) -> None: ...
