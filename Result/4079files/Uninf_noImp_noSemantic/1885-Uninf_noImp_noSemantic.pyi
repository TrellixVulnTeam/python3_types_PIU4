from battle.models import Battle, BattleOrganization, BattleSide, BattleTurn, BattleUnit
from typing import Any
from unit.models import WorldUnit

def create_contubernia(unit: BattleUnit) -> Any: ...
def initialize_from_conflict(battle: Any, conflict: Any, tile: Any) -> None: ...
def initialize_side_positioning(side: BattleSide) -> Any: ...
def set_contubernia_starting_pos(unit: BattleUnit) -> Any: ...

class Line:
    depth: Any = ...
    columns: Any = ...
    def __init__(self, depth: Any) -> None: ...
    def push_contubernium_on_right_side(self, contubernium: Any) -> None: ...
    def push_contubernium_on_left_side(self, contubernium: Any) -> None: ...
    def push_contubernium(self, contubernium: Any, side: Any) -> None: ...
    def push_unit(self, unit: Any, side: Any) -> None: ...
    @property
    def width(self): ...

class LineFormation:
    formation_object: Any = ...
    battle_side: Any = ...
    main_lines: Any = ...
    flanks: Any = ...
    far_flanks: Any = ...
    def __init__(self, battle_side: Any, formation_object: Any) -> None: ...
    def new_line(self): ...
    def make_formation(self) -> None: ...
    def get_battle_units_by_battle_settings(self, line_index: Any, side_index: Any): ...
    def output_formation(self) -> None: ...

def initialize_battle_positioning(battle: Any) -> None: ...
def generate_in_turn_objects(battle: Any) -> None: ...
def generate_in_turn_objects_for_unit(turn: BattleTurn, unit: BattleUnit) -> Any: ...
def joining_contubernium_position_generator() -> None: ...
def add_unit_to_battle_in_progress(battle_organization: BattleOrganization, world_unit: WorldUnit) -> Any: ...

class BattleAlreadyStartedException(Exception): ...

def start_battle(battle: Battle) -> Any: ...
