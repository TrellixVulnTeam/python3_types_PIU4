from hwt.synthesizer.rtlLevel.rtlSignal import RtlSignal
from hwtHls.codeOps import HlsOperation, HlsRead, HlsWrite
from hwtHls.hls import Hls
from typing import Any, Union

class TimeIndependentRtlResource:
    INVARIANT_TIME: str = ...
    timeOffset: Any = ...
    allocator: Any = ...
    valuesInTime: Any = ...
    def __init__(self, signal: RtlSignal, time: Union[int, TimeIndependentRtlResource.INVARIANT_TIME], hlsAllocator: HlsAllocator) -> None: ...
    def get(self, time: Any): ...

class HlsAllocator:
    parentHls: Any = ...
    node2instance: Any = ...
    _reg: Any = ...
    _sig: Any = ...
    def __init__(self, parentHls: Hls) -> None: ...
    def _instantiate(self, node: Union[HlsOperation, HlsRead, HlsWrite]) -> Any: ...
    def instantiateOperation(self, node: HlsOperation) -> Any: ...
    def instanciateRead(self, readOp: HlsRead) -> Any: ...
    def inistanciateWrite(self, write: HlsWrite) -> Any: ...
    def allocate(self) -> None: ...
