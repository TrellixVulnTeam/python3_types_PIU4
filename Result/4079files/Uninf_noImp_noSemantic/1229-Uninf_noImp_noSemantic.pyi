import datetime
from pages.datepicker import JqueryUIDatePicker
from typing import Any

logger: Any

class RestaurantPageAvailabilityForm:
    date_input_selector: str = ...
    date_input_real_selector: str = ...
    date_input_id: str = ...
    time_select_selector: str = ...
    time_select_id: str = ...
    party_size_select_selector: str = ...
    party_size_id: str = ...
    availability_check_submit_selector: str = ...
    loading_overylay_selector: str = ...
    url: Any = ...
    browser: Any = ...
    has_fetched: bool = ...
    _submitted_at: Any = ...
    def __init__(self, url: str, browser: Any, implicit_wait: int=...) -> None: ...
    @property
    def name(self): ...
    def get_datepicker(self) -> JqueryUIDatePicker: ...
    def set_time(self, dt: datetime.datetime) -> Any: ...
    def set_breakfast(self) -> None: ...
    def set_lunch(self) -> None: ...
    def set_dinner(self) -> None: ...
    @property
    def date_input_element(self): ...
    @property
    def current_date(self): ...
    def set_date(self, dt: datetime.datetime) -> Any: ...
    def set_partysize(self, size: int) -> Any: ...
    def _form_nudge(self, trigger_selector: Any): ...
    @property
    def loading_overlay_displayed(self): ...
    @property
    def availability_submit(self): ...
    def check_has_fetched(self) -> None: ...
    def get(self) -> None: ...
    def submit_availability_check(self): ...
    @property
    def available_times(self): ...
    def find_availability_for(self, dt: datetime.datetime, party_size: int, breakfast: Any=..., lunch: Any=..., dinner: Any=..., any_time: Any=...) -> Any: ...
