from typing import Any

logger: Any

class HTTPError(Exception):
    status: Any = ...
    message: Any = ...
    def __init__(self, status: Any, message: Any) -> None: ...
    def __repr__(self): ...

class API:
    _scheduler_url: Any = ...
    def __init__(self, scheduler_url: Any) -> None: ...
    def _url(self, path: Any): ...

class Queues(API):
    def create(self, project_id: Any, seeders: Any, timeout: Any, interval: Any, results_mode: Any, exist_ok: bool = ...) -> None: ...
    def pop_urls(self, worker_id: Any, limit: Any) -> list: ...
    def add_urls(self, project_id: Any, urls: Any, priority: Any) -> list: ...
    def report_finish(self, project_id: Any, url: Any) -> None: ...
    def report_error(self, project_id: Any, url: Any, tag: Any) -> None: ...

class Workers(API):
    def create(self, name: Any) -> str: ...
    def patch_projects(self, worker_id: Any, projects: Any) -> None: ...

class Projects(API):
    def create(self, name: Any) -> str: ...

class Buckets(API):
    def create(self, project_id: Any, exist_ok: bool = ...) -> None: ...

class Client:
    queues: Any = ...
    worker: Any = ...
    projects: Any = ...
    buckets: Any = ...
    def __init__(self, scheduler_url: Any) -> None: ...
