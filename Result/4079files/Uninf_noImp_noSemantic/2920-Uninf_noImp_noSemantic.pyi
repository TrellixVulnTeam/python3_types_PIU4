from typing import Any
from unittest import TestCase

class SingleProfileMixin:
    ydata: Any = ...
    normalize_sides: bool = ...
    fwxm_indices: Any = ...
    fwxm_center_values: Any = ...
    fwxm_center_indices: Any = ...
    field_value_length: int = ...
    penumbra_widths_8020: Any = ...
    penumbra_widths_9010: Any = ...
    field_edge_indices: Any = ...
    field_calculations: Any = ...
    peak_idx: int = ...
    @classmethod
    def setUpClass(cls) -> None: ...
    def test_fwxms(self) -> None: ...
    def test_fwxm_centers(self) -> None: ...
    def test_penum_widths(self) -> None: ...
    def test_field_value_length(self) -> None: ...
    def test_field_edges(self) -> None: ...
    def test_field_calculations(self) -> None: ...
    def test_initial_peak(self) -> None: ...
    def test_unnormalized_peaks(self) -> None: ...

class SingleProfileTriangle(SingleProfileMixin, TestCase):
    xdata: Any = ...
    ydata: Any = ...
    fwxm_indices: Any = ...
    fwxm_center_values: Any = ...
    fwxm_center_indices: Any = ...
    penumbra_widths_8020: Any = ...
    penumbra_widths_9010: Any = ...
    field_edge_indices: Any = ...
    field_calculations: Any = ...
    field_value_length: int = ...
    peak_idx: int = ...

class SingleProfileCutoffTriangle(SingleProfileMixin, TestCase):
    xdata: Any = ...
    ydata: Any = ...
    fwxm_indices: Any = ...
    fwxm_center_values: Any = ...
    fwxm_center_indices: Any = ...
    penumbra_widths_8020: Any = ...
    penumbra_widths_9010: Any = ...
    field_edge_indices: Any = ...
    field_calculations: Any = ...
    field_value_length: int = ...
    peak_idx: int = ...

class MultiProfileTestMixin:
    values: Any = ...
    peak_max_idxs: Any = ...
    valley_max_idxs: Any = ...
    peak_fwxm_idxs: Any = ...
    subdivide_fwxm_centers: Any = ...
    @classmethod
    def setUpClass(cls) -> None: ...
    def test_find_peaks(self) -> None: ...
    def test_find_fwxm_peaks(self) -> None: ...
    def test_find_valleys(self) -> None: ...
    def test_subdivide(self) -> None: ...

class MultiProfileTriangle(MultiProfileTestMixin, TestCase):
    x_values: Any = ...
    values: Any = ...
    valley_max_idxs: Any = ...
    peak_max_idxs: Any = ...
    peak_fwxm_idxs: Any = ...
    subdivide_fwxm_centers: Any = ...
    def test_ground_profile(self) -> None: ...

class CircleProfileTestMixin:
    klass: Any = ...
    image_file_location: Any = ...
    radius: int = ...
    peak_idxs: Any = ...
    valley_idxs: Any = ...
    fwxm_peak_idxs: Any = ...
    center_point: Any = ...
    @classmethod
    def setUpClass(cls) -> None: ...
    def test_locations(self) -> None: ...
    def test_peak_idxs(self) -> None: ...
    def test_valley_idxs(self) -> None: ...
    def test_fwxm_peak_idxs(self) -> None: ...
    def test_add_to_axes(self) -> None: ...

class CircleProfileStarshot(CircleProfileTestMixin, TestCase):
    peak_idxs: Any = ...
    valley_idxs: Any = ...
    fwxm_peak_idxs: Any = ...

class CollapsedCircleProfileStarshot(CircleProfileTestMixin, TestCase):
    klass: Any = ...
    peak_idxs: Any = ...
    valley_idxs: Any = ...
    fwxm_peak_idxs: Any = ...
