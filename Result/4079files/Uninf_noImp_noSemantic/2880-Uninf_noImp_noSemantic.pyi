from nutils.testing import TestCase
from typing import Any

line: Any
square: Any
triangle: Any

class common(TestCase):
    def test_fromdims(self) -> None: ...
    def test_len(self) -> None: ...
    def test_getitem_scalar_pos(self) -> None: ...
    def test_getitem_scalar_neg(self) -> None: ...
    def test_getitem_scalar_invalid(self) -> None: ...
    def test_getitem_slice(self) -> None: ...
    def test_getitem_intarray(self) -> None: ...
    def test_getitem_intarray_outofbounds(self) -> None: ...
    def test_getitem_intarray_invalidndim(self) -> None: ...
    def test_getitem_boolarray(self) -> None: ...
    def test_getitem_boolarray_invalidshape(self) -> None: ...
    def test_iter(self) -> None: ...
    def test_add(self) -> None: ...
    def test_mul_int(self) -> None: ...
    def test_mul_references(self) -> None: ...
    def test_children(self) -> None: ...
    def test_getpoints(self) -> None: ...

class exceptions(TestCase):
    def test_PlainReferences_invalid_ndims(self) -> None: ...
    def test_PlainReferences_multiple_ndims(self) -> None: ...
    def test_UniformReferences_negative_length(self) -> None: ...
    def test_SelectedReferences_invalid_indices(self) -> None: ...
    def test_ChainedReferences_no_items(self) -> None: ...
    def test_ChainedReferences_multiple_ndims(self) -> None: ...
    def test_RepeatedReferences_negative_count(self) -> None: ...

class asreferences(TestCase):
    def test_References(self) -> None: ...
    def test_Reference_invalid_ndims(self) -> None: ...
    def test_References_list_empty(self) -> None: ...
    def test_References_list_pluriform(self) -> None: ...
    def test_References_list_uniform(self) -> None: ...
    def test_invalid(self) -> None: ...
