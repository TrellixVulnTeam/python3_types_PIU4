from collections import Mapping
from typing import Any, Optional

def get_data_home(data_home: Optional[Any] = ...): ...
def clear_data_home(data_home: Optional[Any] = ...) -> None: ...
def fetch(url: Any, dest: Any, force: bool = ...): ...

class Bunch(Mapping):
    _data: Any = ...
    def __init__(self, data: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def __repr__(self): ...
    def __getitem__(self, key: Any): ...
    def __iter__(self) -> Any: ...
    def __len__(self): ...
    def __dir__(self): ...
    def __getattr__(self, key: Any): ...
    def __setstate__(self, state: Any) -> None: ...

LightCurveBase: Any

class LightCurve(LightCurveBase, Mapping):
    def __repr__(self): ...
    def __getitem__(self, k: Any): ...
    def __iter__(self) -> Any: ...
    def __len__(self): ...

class Data(Mapping):
    id: Any = ...
    ds_name: Any = ...
    description: Any = ...
    bands: Any = ...
    metadata: Any = ...
    data: Any = ...
    def __getitem__(self, k: Any): ...
    def __iter__(self) -> Any: ...
    def __len__(self): ...
