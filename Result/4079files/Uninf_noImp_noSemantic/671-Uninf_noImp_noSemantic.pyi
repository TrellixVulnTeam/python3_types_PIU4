from typing import Any

lineNrLength: int
maxNrOfSourceLinesPerModule: int

class Base64VlqConverter:
    encoding: str = ...
    decoding: Any = ...
    prefabSize: int = ...
    prefab: Any = ...
    def __init__(self) -> None: ...
    def encode(self, numbers: Any, init: bool = ...): ...
    def decode(self, segment: Any): ...

base64VlqConverter: Any
mapVersion: int
iTargetLine: Any
iTargetColumn: Any
iSourceIndex: Any
iSourceLine: Any
iSourceColumn: Any

class SourceMapper:
    moduleName: Any = ...
    targetDir: Any = ...
    minify: Any = ...
    dump: Any = ...
    def __init__(self, moduleName: Any, targetDir: Any, minify: Any, dump: Any) -> None: ...
    prettyMappings: Any = ...
    def generateAndSavePrettyMap(self, sourceLineNrs: Any) -> None: ...
    cascadeMapdumpFile: Any = ...
    miniMappings: Any = ...
    def cascadeAndSaveMiniMap(self): ...
    shrinkMappings: Any = ...
    def loadShrinkMap(self) -> None: ...
    def save(self, mappings: Any, infix: Any) -> None: ...
    def dumpMap(self, mappings: Any, infix: Any, sourceExtension: Any) -> None: ...
    def dumpDeltaMap(self, deltaMappings: Any, infix: Any) -> None: ...
    def generateMultilevelMap(self) -> None: ...
