from . import hints as hints
from typing import Any

__all__: Any

class MemoryView:
    __slots__: Any = ...
    memory: Any = ...
    def __init__(self, buffer: Any) -> None: ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    def __lt__(self, other: Any) -> Any: ...
    def __gt__(self, other: Any) -> Any: ...
    def __le__(self, other: Any) -> Any: ...
    def __ge__(self, other: Any) -> Any: ...
    def __hash__(self) -> Any: ...
    def __int__(self): ...
    def __repr__(self): ...
    def __str__(self): ...
    @property
    def bytes(self) -> hints.Bytes: ...
    @property
    def int(self) -> hints.Int: ...
    @property
    def str(self) -> hints.Str: ...

class Timestamp(MemoryView):
    __slots__: Any = ...
    @property
    def str(self) -> hints.Str: ...
    @property
    def timestamp(self) -> hints.Float: ...
    @property
    def datetime(self) -> hints.Datetime: ...

class Randomness(MemoryView):
    __slots__: Any = ...
    @property
    def str(self) -> hints.Str: ...

class ULID(MemoryView):
    __slots__: Any = ...
    @property
    def str(self) -> hints.Str: ...
    def timestamp(self) -> Timestamp: ...
    def randomness(self) -> Randomness: ...
    @property
    def uuid(self) -> hints.UUID: ...
