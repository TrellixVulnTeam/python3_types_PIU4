from . import SmartThingsEntity
from collections import namedtuple
from typing import Any, Optional, Sequence

Map = namedtuple('map', 'attribute name default_unit device_class')
CAPABILITY_TO_SENSORS: Any
UNITS: Any
THREE_AXIS_NAMES: Any

async def async_setup_platform(hass: Any, config: Any, async_add_entities: Any, discovery_info: Optional[Any] = ...) -> None: ...
async def async_setup_entry(hass: Any, config_entry: Any, async_add_entities: Any) -> None: ...
def get_capabilities(capabilities: Sequence[str]) -> Optional[Sequence[str]]: ...

class SmartThingsSensor(SmartThingsEntity):
    _attribute: Any = ...
    _name: Any = ...
    _device_class: Any = ...
    _default_unit: Any = ...
    def __init__(self, device: Any, attribute: str, name: str, default_unit: str, device_class: str) -> None: ...
    @property
    def name(self) -> str: ...
    @property
    def unique_id(self) -> str: ...
    @property
    def state(self): ...
    @property
    def device_class(self): ...
    @property
    def unit_of_measurement(self): ...

class SmartThingsThreeAxisSensor(SmartThingsEntity):
    _index: Any = ...
    def __init__(self, device: Any, index: Any) -> None: ...
    @property
    def name(self) -> str: ...
    @property
    def unique_id(self) -> str: ...
    @property
    def state(self): ...
