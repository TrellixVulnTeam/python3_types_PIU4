from ipykernel.kernelbase import Kernel
from pexpect import replwrap
from typing import Any, Optional

__version__: str
version_pat: Any
log_file: Any
logger: Any

class MongoShellWrapper(replwrap.REPLWrapper):
    args: Any = ...
    kwargs: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    @staticmethod
    def _filter_response(res: Any): ...
    def _isbufferempty(self): ...
    def _send_line(self, cmd: Any) -> None: ...
    def _expect_prompt(self, timeout: int = ...): ...
    def run_command(self, command: Any, timeout: int = ...): ...

class MongoKernel(Kernel):
    implementation: str = ...
    implementation_version: Any = ...
    _banner: Any = ...
    language_info: Any = ...
    @property
    def language_version(self): ...
    @property
    def banner(self): ...
    def __init__(self, **kwargs: Any) -> None: ...
    mongowrapper: Any = ...
    def _start_mongo(self) -> None: ...
    @staticmethod
    def _parse_spawn_options(): ...
    @staticmethod
    def _pretty_output(json_data: Any, show_levels: int = ...): ...
    @staticmethod
    def _parse_shell_output(shell_output: Any): ...
    def do_execute(self, code: Any, silent: Any, store_history: bool = ..., user_expressions: Optional[Any] = ..., allow_stdin: bool = ...): ...
    def do_complete(self, code: Any, cursor_pos: Any): ...
