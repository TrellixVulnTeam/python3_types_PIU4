from marshmallow import Schema
from typing import Any, Optional

def end_of_local_date(d: Any): ...
def document_path(id: Any): ...
def number_of_pages(document: Any): ...
def save_file(document: Any, file_storage: Any) -> None: ...
def serialize(data: Any, schema: Any, many: bool = ...): ...

class PaginatedResult:
    pagination: Any = ...
    schema: Any = ...
    def __init__(self, pagination: Any, schema: Any) -> None: ...
    @property
    def data(self): ...

def deserialize(schema: Any): ...

class PaginatedResultSchema(Schema):
    data: Any = ...
    page: Any = ...
    number_of_pages: Any = ...
    total: Any = ...

def filtered_results(query: Any, schema: Any, paginate: bool = ...): ...
def jsonify(*args: Any, **kwargs: Any): ...
def handle_client_errors(f: Any): ...
def api_route(url: Any, *args: Any, **kwargs: Any): ...

ROUTE_ID: int

def endpoint(query_fn: Any, schemas: Optional[Any] = ..., allow_delete: bool = ..., paginate_many: bool = ...): ...

class NonConfidentialException(Exception): ...

def event_stream(f: Any): ...
