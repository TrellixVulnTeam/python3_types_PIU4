from .config import BuildConfig, ImageConfig
from .script import SCRIPT_PATH as SCRIPT_PATH
from typing import Any, Optional

class Builder:
    config: Any = ...
    build_num: Any = ...
    commit_info: Any = ...
    job_num: Any = ...
    client: Any = ...
    args: Any = ...
    images: Any = ...
    plugins: Any = ...
    def __init__(self, build_config: BuildConfig, args: Any=..., build_num: Any=..., job_num: Any=..., commit_info: Any=...) -> None: ...
    def _stage_to_image_builders_mapping(self): ...
    @property
    def image_builders(self) -> None: ...
    @property
    def test_tag(self): ...
    @property
    def test_name(self): ...

class ImageBuilder:
    builder: Any = ...
    client: Any = ...
    config: Any = ...
    environment: Any = ...
    volumes: Any = ...
    script: Any = ...
    archive: Any = ...
    exception: Any = ...
    def __init__(self, builder: Builder, image_config: ImageConfig) -> None: ...
    def ensure_from_image(self) -> None: ...
    def start_and_commit(self, container: Any, cmd: Any, e: Any): ...
    def create(self, script: Any, labels: Optional[Any] = ...): ...
    def notify(self, event: Any, extra: Optional[Any] = ...) -> None: ...
    def execute(self, modes: Optional[Any] = ...) -> None: ...
    def build(self, e: Any): ...
    def run(self, e: Any): ...
    def _run_test_container(self, service: Any, reports: Any): ...
    def start(self, e: Any): ...

def read_container_log_for_seconds(container: Any, secs: Any): ...
