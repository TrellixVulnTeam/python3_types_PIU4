from apscheduler import events
from apscheduler.job import Job as Job
from typing import Any, Dict, List, Mapping, Tuple

CAPTURED_OPENER: str
CAPTURED_CLOSER: str
CAPTURED_SURROUNDING_LENGTH: Any
log: Any
scheduler: Any

def start_scheduler() -> None: ...
def on_max_instances(event: events.JobSubmissionEvent) -> None: ...
def on_executed(event: events.JobExecutionEvent) -> None: ...
def on_error(event: events.JobExecutionEvent) -> None: ...
def on_missed(event: events.JobExecutionEvent) -> None: ...
def exec_job(**definition: Any) -> Tuple[int, bytes]: ...
def add(container_id: str, definitions: Mapping[str, Dict], paused: bool=...) -> None: ...
def remove(job_id: str) -> None: ...
def get_jobs_for_container(container_id: str) -> List[Job]: ...
