from baseGate import *
from Gate import *
from typing import Any

class DMO:
    DMOql: Any = ...
    split: Any = ...
    DMOvl: Any = ...
    def __init__(self, ql: Any, vl: Any) -> None: ...
    def get_curl_info(self): ...
    def __fullGName(self, gn: str, vl: list, ql: list) -> Any: ...
    def __setFullGName(self, cgn: str, gn: str) -> Any: ...
    def Operator(self, gateName: str, tq: Qubit, cq: Any=..., angle: Any=...) -> Any: ...
    def X(self, q: Qubit) -> Any: ...
    def Y(self, q: Qubit) -> Any: ...
    def Z(self, q: Qubit) -> Any: ...
    def H(self, q: Qubit) -> Any: ...
    def S(self, q: Qubit) -> Any: ...
    def Sd(self, q: Qubit) -> Any: ...
    def T(self, q: Qubit) -> Any: ...
    def Td(self, q: Qubit) -> Any: ...
    def CNOT(self, q1: Qubit, q2: Qubit) -> Any: ...
    def Rz(self, phi: Any, q: Qubit) -> Any: ...
    def Ry(self, phi: Any, q: Qubit) -> Any: ...

class MO(DMO):
    MOql: Any = ...
    MOvl: Any = ...
    header: str = ...
    bool: bool = ...
    def __init__(self, ql: Any, vl: Any) -> None: ...
    def MO(self, ql: list, vl: list) -> Any: ...
    def recordGate(self, gate: str, ql: list) -> Any: ...
    def Operator(self, gateName: str, tq: Qubit, cq: Any=..., angle: Any=...) -> Any: ...

class QWMO(DMO):
    angle: Any = ...
    def __init__(self, ql: Any, vl: Any, angle: Any) -> None: ...
    def end(self): ...
