from PyQt5.QtGui import *
from PyQt5.QtCore import *
import threading
from electrum.plugin import BasePlugin
from electrum.util import PrintError
from typing import Any

class Processor(threading.Thread, PrintError):
    polling_interval: Any = ...
    daemon: bool = ...
    username: Any = ...
    password: Any = ...
    imap_server: Any = ...
    on_receive: Any = ...
    M: Any = ...
    def __init__(self, imap_server: Any, username: Any, password: Any, callback: Any) -> None: ...
    connect_wait: int = ...
    def reset_connect_wait(self) -> None: ...
    def poll(self) -> None: ...
    def run(self) -> None: ...
    def send(self, recipient: Any, message: Any, payment_request: Any) -> None: ...

class QEmailSignalObject(QObject):
    email_new_invoice_signal: Any = ...

class Plugin(BasePlugin):
    def fullname(self): ...
    def description(self): ...
    def is_available(self): ...
    imap_server: Any = ...
    username: Any = ...
    password: Any = ...
    processor: Any = ...
    obj: Any = ...
    wallets: Any = ...
    def __init__(self, parent: Any, config: Any, name: Any) -> None: ...
    pr: Any = ...
    def on_receive(self, pr_str: Any) -> None: ...
    def load_wallet(self, wallet: Any, main_window: Any) -> None: ...
    def close_wallet(self, wallet: Any) -> None: ...
    def new_invoice(self) -> None: ...
    def receive_list_menu(self, menu: Any, addr: Any): ...
    def send(self, window: Any, addr: Any) -> None: ...
    def requires_settings(self): ...
    def settings_widget(self, window: Any): ...
    def settings_dialog(self, window: Any): ...

class CheckConnectionThread(QThread):
    connection_error_signal: Any = ...
    server: Any = ...
    username: Any = ...
    password: Any = ...
    def __init__(self, server: Any, username: Any, password: Any) -> None: ...
    def run(self) -> None: ...
