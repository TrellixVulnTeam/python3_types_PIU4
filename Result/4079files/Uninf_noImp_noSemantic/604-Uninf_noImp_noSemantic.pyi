from typing import Any

class DataPoint:
    label: Any = ...
    vector: Any = ...
    def __init__(self, label: Any, vector: Any) -> None: ...
    def is_cluster(self): ...

class Cluster:
    left: Any = ...
    right: Any = ...
    distance: Any = ...
    def __init__(self, left: Any, right: Any, distance: Any) -> None: ...
    def is_cluster(self): ...

class PreclusterMaker:
    words: Any = ...
    vectors: Any = ...
    number_of_steps: Any = ...
    metric: Any = ...
    linkage: Any = ...
    def __init__(self, words: Any, vectors: Any, number_of_steps: int = ..., metric: str = ..., linkage: str = ...) -> None: ...
    def __call__(self): ...
    _min_dist: Any = ...
    _max_dist: Any = ...
    _dist_step: Any = ...
    def _linkage_matrix_to_dendrogram(self, linkage_matrix: Any, labels: Any, vectors: Any): ...
    def _create_clusterings(self, dendrogram: Any): ...
    def _find_optimal_clustering(self, clusterings: Any): ...

def _get_cluster_nodes(node: Any): ...
