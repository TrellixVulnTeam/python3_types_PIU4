import unittest
from robo.models.base_model import BaseModel
from typing import Any

class DemoModel(BaseModel):
    m: Any = ...
    v: Any = ...
    def __init__(self, m: Any, v: Any) -> None: ...
    X: Any = ...
    y: Any = ...
    def train(self, X: Any, y: Any) -> None: ...
    def predict(self, X_test: Any): ...

class DemoModelMCMC(BaseModel):
    n_hypers: int = ...
    models: Any = ...
    def __init__(self) -> None: ...
    def predict(self, X_test: Any): ...
    def train(self, X: Any, y: Any) -> None: ...

class TestMarginalizationGPMCMC(unittest.TestCase):
    X: Any = ...
    y: Any = ...
    model: Any = ...
    def setUp(self) -> None: ...
    def test_lcb(self) -> None: ...
    def test_ei(self) -> None: ...
    def test_log_ei(self) -> None: ...
    def test_pi(self) -> None: ...
