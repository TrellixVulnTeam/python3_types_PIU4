from typing import Any

class ComponentError(BaseException):
    def __init__(self, message: Any, component: Any, *args: Any) -> None: ...

class PortError(Exception):
    def __init__(self, message: Any, channel: Any, *args: Any) -> None: ...

class PortNotExistingError(ComponentError):
    def __init__(self, component: Any, item: Any, *args: Any) -> None: ...

class StopComputation(StopIteration): ...

class PortAlreadyConnectedError(PortError):
    def __init__(self, channel: Any, other_channel: Any, *args: Any) -> None: ...

class PortAlreadyExistingError(PortError):
    def __init__(self, channel: Any, other_channel: Any, *args: Any) -> None: ...

class PortDisconnectedError(PortError):
    def __init__(self, channel: Any, *args: Any) -> None: ...

class OutputOnlyError(PortError):
    def __init__(self, channel: Any, *args: Any) -> None: ...

class InputOnlyError(PortError):
    def __init__(self, channel: Any, *args: Any) -> None: ...

class MultipleConnectionError(PortError):
    def __init__(self, channel: Any, *args: Any) -> None: ...

class PortClosedError(PortError):
    def __init__(self, channel: Any, *args: Any) -> None: ...

class FormatterError(Exception):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

class WildcardNotExistingError(Exception):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

class CommandFailedError(ComponentError):
    def __init__(self, component: Any, message: Any, *args: Any) -> None: ...

class FileExistingError(Exception):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

class FileNotExistingError(Exception):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

class PacketOwnedError(Exception):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

class NotCoroutineError(Exception):
    def __init__(self, fun: Any, *args: Any, **kwargs: Any) -> None: ...
