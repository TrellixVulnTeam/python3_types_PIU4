import datetime
import numpy as np
from typing import Any, Tuple, Union

def blob_to_str(val: Any) -> str: ...
def read_is_market_open(field: str) -> bool: ...
def read_is_short_restricted(field: str) -> bool: ...
def read_tick_direction(field: str) -> np.int8: ...
def read_int(field: str) -> int: ...
def read_hex(field: str) -> int: ...
def read_uint8(field: str) -> np.uint8: ...
def read_uint16(field: str) -> np.uint16: ...
def read_uint64(field: str) -> np.uint64: ...
def read_float(field: str) -> float: ...
def read_float64(field: str) -> np.float64: ...
def read_split_string(split_str: str) -> Tuple[np.float64, np.datetime64]: ...
def read_hhmmss_no_colon(field: str) -> int: ...
def read_hhmmss(field: str) -> int: ...
def read_hhmmssmil(field: str) -> int: ...
def read_hhmmssus(field: str) -> int: ...
def read_mmddccyy(field: str) -> np.datetime64: ...
def read_ccyymmdd(field: str) -> np.datetime64: ...
def read_timestamp_msg(dt_tm: str) -> Tuple[np.datetime64, int]: ...
def read_live_news_timestamp(dt_tm: str) -> Tuple[np.datetime64, int]: ...
def read_hist_news_timestamp(dt_tm: str) -> Tuple[np.datetime64, int]: ...
def read_posix_ts_mil(dt_tm_str: str) -> Tuple[np.datetime64, int]: ...
def read_posix_ts_us(dt_tm_str: str) -> Tuple[np.datetime64, int]: ...
def read_posix_ts(dt_tm_str: str) -> Tuple[np.datetime64, int]: ...
def str_or_blank(val: Any) -> str: ...
def us_since_midnight_to_time(us_dt: Union[int, np.int64]) -> datetime.time: ...
def time_to_hhmmss(tm: datetime.time) -> str: ...
def datetime64_to_date(dt64: np.datetime64) -> datetime.date: ...
def date_to_yyyymmdd(dt: datetime.date) -> str: ...
def date_us_to_datetime(dt64: np.datetime64, tm_int: Union[int, np.datetime64]) -> datetime.datetime: ...
def datetime_to_yyyymmdd_hhmmss(dt_tm: datetime.datetime) -> str: ...
