from abc import ABC, abstractmethod
from typing import Any

class BaseConfigObject(ABC):
    @classmethod
    @abstractmethod
    def from_dict(cls: Any, data: dict) -> BaseConfigObject: ...
    @abstractmethod
    def to_cli(self) -> str: ...
    @abstractmethod
    def to_dict(self) -> dict: ...
    def to_json(self) -> str: ...
    def __repr__(self) -> str: ...
