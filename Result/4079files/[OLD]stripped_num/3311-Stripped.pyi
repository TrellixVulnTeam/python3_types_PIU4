# (generated with --quick)

from typing import Any, TypeVar

ZenobaseEvent: Any
json: module
requests: module

_TZenobaseAPI = TypeVar('_TZenobaseAPI', bound=ZenobaseAPI)

class ZenobaseAPI:
    HOST: str
    access_token: Any
    client_id: Any
    def __enter__(self: _TZenobaseAPI) -> _TZenobaseAPI: ...
    def __exit__(self, exc_type, exc_value, traceback) -> None: ...
    def __init__(self, username = ..., password = ...) -> None: ...
    @staticmethod
    def _bucket_id_from_bucket_or_id(bucket_or_bucket_id) -> Any: ...
    def _delete(self, *args, **kwargs) -> Any: ...
    def _get(self, *args, **kwargs) -> Any: ...
    def _post(self, *args, **kwargs) -> Any: ...
    def _request(self, method, endpoint, data = ..., headers = ...) -> Any: ...
    def close(self) -> Any: ...
    def create_bucket(self, label, description = ...) -> Any: ...
    def create_event(self, bucket_or_bucket_id, event) -> Any: ...
    def create_events(self, bucket_or_bucket_id, events) -> Any: ...
    def create_or_get_bucket(self, label, description = ...) -> Any: ...
    def delete_bucket(self, bucket_id) -> None: ...
    def get_bucket(self, bucket_id) -> Any: ...
    def list_buckets(self, offset = ..., limit = ...) -> Any: ...
    def list_events(self, bucket_id) -> Any: ...
