# (generated with --quick)

import goban
from typing import Any, IO, List, Match, Optional, Type, Union

Goban: Type[goban.Goban]
Move: Type[goban.Move]
SlackClient: Any
WebSocketConnectionClosedException: Any
argv: List[str]
bot: GoBot
config: Any
datetime: Type[datetime.datetime]
pycron: Any
random: module
re: module

class GoBot:
    STATE_FILE_NAME: str
    goban: Any
    id: Any
    last_ping: Union[float, int]
    ran_cron: bool
    resign_requested: bool
    slack_client: Any
    def __init__(self, token) -> None: ...
    def get_id(self) -> Any: ...
    def load_goban(self) -> Any: ...
    def ping(self) -> None: ...
    def process_message(self, message, channel, user, private_message) -> None: ...
    def run_cron(self) -> None: ...
    def save_goban(self) -> None: ...
    def start(self) -> None: ...
    def vocab_in_message(self, command, message) -> Match[str]: ...

def dump(obj, file: IO[bytes], protocol: Optional[int] = ..., *, fix_imports: bool = ...) -> None: ...
def load(file: IO[bytes], *, fix_imports: bool = ..., encoding: str = ..., errors: str = ...) -> Any: ...
def sleep(secs: float) -> None: ...
def time() -> float: ...
