# (generated with --quick)

from typing import Any, Dict, List, Optional

WordList = List[str]

Entropy: Any
math: module
mnemonic_dict: Mnemonic
os: module

class Mnemonic:
    __doc__: str
    _bits_per_word: Dict[Any, Optional[int]]
    _dictionary: dict
    _language_length: Dict[Any, Optional[int]]
    language_files: dict
    languages: list
    def __init__(self) -> None: ...
    def _load_lang(self, lang, filename = ...) -> None: ...
    def bits_per_word(self, lang) -> Optional[int]: ...
    def entropy_from_indexes(self, indexes, lang) -> str: ...
    def indexes_from_entropy(self, entropy, lang) -> list: ...
    def indexes_from_mnemonic(self, mnemonic, lang) -> list: ...
    def language_length(self, lang) -> Optional[int]: ...
    def mnemonic_from_indexes(self, indexes, lang) -> str: ...
    def word_list(self, lang) -> Any: ...
