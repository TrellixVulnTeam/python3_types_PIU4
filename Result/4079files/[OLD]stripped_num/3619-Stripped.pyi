# (generated with --quick)

from typing import Any, Generator, List, Tuple

PHI5_INDEX: Any
TLG_INDEX: Any
__author__: List[str]
__license__: str
assemble_phi5_author_filepaths: Any
assemble_tlg_author_filepaths: Any
os: module
regex: Any
string: module
x: Tuple[Any, Any]

def _keyword_expander(word, language, lemmatized = ..., threshold = ...) -> Any: ...
def _paragraph_context(match) -> Any: ...
def _regex_span(_regex, _str, case_insensitive = ...) -> Generator[Any, Any, None]: ...
def _sentence_context(match, language = ..., case_insensitive = ...) -> Any: ...
def _window_match(match, window = ...) -> Any: ...
def match_regex(input_str, pattern, language, context, case_insensitive = ...) -> Generator[Any, Any, None]: ...
def search_corpus(pattern, corpus, context, case_insensitive = ..., expand_keyword = ..., lemmatized = ..., threshold = ...) -> Generator[Tuple[Any, Any], Any, None]: ...
