# (generated with --quick)

from typing import Any
import unittest.mock

Asset: Any
DEFAULT_DURATION: Any
DEFAULT_HEIGHT: Any
DEFAULT_WIDTH: Any
Madam: Any
UnsupportedFormatError: Any
asset: Any
audio_asset: Any
avi_video_asset: Any
bmp_image_asset: Any
get_jpeg_image_asset: Any
gif_image_asset: Any
image_asset: Any
io: module
jpeg_data_with_exif: Any
jpeg_image_asset: Any
mkv_video_asset: Any
mp2_video_asset: Any
mp3_audio_asset: Any
mp4_video_asset: Any
nut_audio_asset: Any
nut_video_asset: Any
ogg_video_asset: Any
opus_audio_asset: Any
patch: unittest.mock._patcher
piexif: Any
png_image_asset: Any
png_image_asset_gray: Any
png_image_asset_gray_alpha: Any
png_image_asset_palette: Any
png_image_asset_rgb: Any
png_image_asset_rgb_alpha: Any
pytest: Any
svg_vector_asset: Any
sys: module
tiff_image_asset: Any
tiff_image_asset_cmyk: Any
tiff_image_asset_gray_16bit: Any
tiff_image_asset_gray_8bit: Any
tiff_image_asset_gray_8bit_alpha: Any
tiff_image_asset_palette: Any
tiff_image_asset_rgb: Any
tiff_image_asset_rgb_alpha: Any
unknown_asset: Any
video_asset: Any
wav_audio_asset: Any
webp_image_asset: Any
webp_image_asset_rgb: Any
webp_image_asset_rgb_alpha: Any

class TestAsset:
    def test_asset_string_representation_contains_class_name(self) -> None: ...
    def test_asset_string_representation_contains_metadata(self) -> None: ...
    def test_asset_string_representation_does_not_contain_complex_metadata(self) -> None: ...

class TestMadam:
    madam_instance: Any
    read_asset: Any
    def test_config_contains_list_of_all_metadata_processors_by_default(self, manager) -> None: ...
    def test_config_contains_list_of_all_processors_by_default(self, manager) -> None: ...
    def test_config_does_not_contain_metadata_processor_when_it_is_not_installed(self) -> None: ...
    def test_get_processor_returns_none_for_unreadable_asset(self, manager, unknown_asset) -> None: ...
    def test_get_processor_returns_processor_for_readable_asset(self, manager, asset) -> None: ...
    def test_read_empty_file_raises_error(self, manager) -> None: ...
    def test_read_jpeg_does_not_alter_the_original_file(self, manager) -> None: ...
    def test_read_only_returns_python_types_in_metadata(self, manager, jpeg_image_asset, tmpdir) -> None: ...
    def test_read_raises_error_when_format_is_unknown(self, manager, unknown_asset) -> None: ...
    def test_read_raises_when_file_is_none(self, manager) -> None: ...
    def test_read_returns_asset_containing_image_size_metadata(self, manager, image_asset) -> None: ...
    def test_read_returns_asset_when_reading_valid_data(self, read_asset) -> None: ...
    def test_read_returns_asset_whose_essence_is_filled(self, read_asset) -> None: ...
    def test_read_returns_asset_with_correct_mime_type(self, manager, asset) -> None: ...
    def test_read_returns_image_asset_containing_color_depth_metadata(self, manager, image_asset) -> None: ...
    def test_read_returns_image_asset_with_correct_color_mode(self, manager, image_asset) -> None: ...
    def test_read_returns_jpeg_asset_whose_essence_does_not_contain_metadata(self, manager, jpeg_image_asset, tmpdir) -> None: ...
    def test_read_returns_jpeg_asset_with_correct_metadata(self, manager, jpeg_data_with_exif) -> None: ...
    def test_read_returns_video_asset_containing_color_mode_metadata(self, manager, video_asset) -> None: ...
    def test_read_returns_video_asset_containing_video_stream_metadata(self, manager, video_asset) -> None: ...
    def test_read_stores_additional_metadata(self, manager, asset) -> None: ...
    def test_read_video_returns_asset_containing_video_size_metadata(self, manager, video_asset) -> None: ...
    def test_read_video_returns_asset_with_duration_metadata(self, manager, video_asset) -> None: ...
    def test_writes_correct_essence_with_metadata(self, manager, jpeg_image_asset) -> None: ...
    def test_writes_correct_essence_without_metadata(self, manager, asset) -> None: ...
