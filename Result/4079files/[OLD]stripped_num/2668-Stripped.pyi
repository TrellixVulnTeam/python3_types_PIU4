# (generated with --quick)

import requests.sessions
from typing import Any, TextIO, Type

API_URL: str
CONNECT_TIMEOUT: float
READ_TIMEOUT: int
ad: bool
console_output_handler: logging.StreamHandler
datetime: Type[datetime.datetime]
exceptions: Any
formatter: logging.Formatter
logger: logging.Logger
logging: module
proxy: None
requests: module
session: requests.sessions.Session
stderr: TextIO
util: Any

def _check_result(method_name, result) -> Any: ...
def _make_request(token, method_name, method = ..., params = ..., base_url = ..., json = ...) -> Any: ...
def cheque_file(token, txn_id, _type, _format) -> Any: ...
def cheque_send(token, txn_id, _type, email) -> Any: ...
def create_account(token, person_id, dto) -> Any: ...
def detect(phone) -> Any: ...
def funding_sources(token) -> Any: ...
def get_accounts_offer(token, person_id) -> Any: ...
def get_by_alias(token, person_id) -> Any: ...
def get_transaction(token, txn_id, txn_type) -> Any: ...
def identification(token, wallet, birth_date, first_name, middle_name, last_name, passport, inn, snils, oms) -> Any: ...
def local_commission(token, pid) -> Any: ...
def online_commission(token, recipient, pid, amount) -> Any: ...
def payment_history(token, number, rows, operation = ..., start_date = ..., end_date = ..., sources = ..., next_txn_date = ..., next_txn_id = ...) -> Any: ...
def payments(token, pid, amount, recipient, comment = ..., fields = ...) -> Any: ...
def person_profile(token, auth_info_enabled, contract_info_enabled, user_info_enabled) -> Any: ...
def total_payment_history(token, number, start_date, end_date, operation = ..., sources = ...) -> Any: ...
