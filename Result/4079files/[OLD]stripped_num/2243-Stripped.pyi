# (generated with --quick)

from typing import Any, Union

socketcan: Any
struct: module

class BootupMessage(NmtErrorControlMessage):
    def __init__(self, node_id) -> None: ...

class EmcyMessage(Message):
    def __init__(self, emcy_id, eec, er, msef = ...) -> None: ...
    @classmethod
    def factory(cls, id, data) -> Any: ...

class HeartbeatMessage(NmtErrorControlMessage):
    def __init__(self, node_id, nmt_state) -> None: ...

class Message(Any):
    function_code: Any
    node_id: Any
    def __init__(self, fc, node_id, data = ...) -> None: ...
    @classmethod
    def factory(cls, msg) -> Any: ...

class NmtActiveMasterRequest(NmtMessage):
    def __init__(self) -> None: ...

class NmtErrorControlMessage(Message):
    def __init__(self, node_id, data) -> None: ...
    @classmethod
    def factory(self, node_id, data) -> Union[BootupMessage, HeartbeatMessage]: ...

class NmtFlyingMasterRequest(NmtMessage):
    def __init__(self) -> None: ...

class NmtForceFlyingMasterRequest(NmtMessage):
    def __init__(self) -> None: ...

class NmtGfcMessage(NmtMessage):
    def __init__(self) -> None: ...

class NmtMasterNodeIdMessage(NmtMessage):
    def __init__(self, priority, node_id) -> None: ...
    @classmethod
    def factory(cls, data) -> Any: ...

class NmtMasterRequest(NmtMessage):
    def __init__(self) -> None: ...

class NmtMasterResponse(NmtMessage):
    def __init__(self) -> None: ...

class NmtMessage(Message):
    def __init__(self, command, data) -> None: ...
    @classmethod
    def factory(cls, cmd, data) -> Any: ...

class NmtNodeControlMessage(NmtMessage):
    def __init__(self, cmd, target_id) -> None: ...
    @classmethod
    def factory(cls, data) -> Any: ...

class PdoMessage(Message):
    def __init__(self, fc, node_id, data) -> None: ...

class SdoAbortResponse(SdoResponse):
    def __init__(self, node_id, index, subindex, abort_code) -> None: ...

class SdoDownloadInitiateRequest(SdoRequest):
    def __init__(self, node_id, n, e, s, index, subindex, data) -> None: ...

class SdoDownloadInitiateResponse(SdoResponse):
    def __init__(self, node_id, index, subindex) -> None: ...

class SdoDownloadSegmentRequest(SdoRequest):
    def __init__(self, node_id, t, n, c, data) -> None: ...

class SdoDownloadSegmentResponse(SdoResponse):
    def __init__(self, node_id, t) -> None: ...

class SdoMessage(Message):
    header: Any
    node_id: Any
    sdo_data: Any
    def __init__(self, fc, node_id, header, sdo_data) -> None: ...

class SdoRequest(SdoMessage):
    def __init__(self, node_id, header, data) -> None: ...
    @classmethod
    def factory(cls, node_id, data) -> Union[SdoDownloadInitiateRequest, SdoDownloadSegmentRequest, SdoUploadInitiateRequest, SdoUploadSegmentRequest]: ...

class SdoResponse(SdoMessage):
    def __init__(self, node_id, header, data) -> None: ...
    @classmethod
    def factory(cls, node_id, data) -> Union[SdoAbortResponse, SdoDownloadInitiateResponse, SdoDownloadSegmentResponse, SdoUploadInitiateResponse, SdoUploadSegmentResponse]: ...

class SdoUploadInitiateRequest(SdoRequest):
    def __init__(self, node_id, index, subindex) -> None: ...

class SdoUploadInitiateResponse(SdoResponse):
    def __init__(self, node_id, n, e, s, index, subindex, data) -> None: ...

class SdoUploadSegmentRequest(SdoRequest):
    def __init__(self, node_id, t) -> None: ...

class SdoUploadSegmentResponse(SdoResponse):
    def __init__(self, node_id, t, n, c, data) -> None: ...

class SyncMessage(Message):
    def __init__(self) -> None: ...

def __getattr__(name) -> Any: ...
