# (generated with --quick)

import collections
import requests.models
from typing import Any, Callable, Generator, Iterable, List, Optional, Sized, Tuple, Type, TypeVar, Union

EfetchPackage = `namedtuple-EfetchPackage-accn-xml`
ElinkResult = `namedtuple-EpostResult-dbfrom-dbto-webenv-query_key`
EpostResult = `namedtuple-EpostResult-webenv-query_key`
EsearchResult = `namedtuple-EsearchResult-ids-count-webenv-query_key`
EsummaryResult = `namedtuple-EsummaryResult-id-accn-create_date-update_date`

BASE_URL: str
ElementTree: module
PAUSE: float
date_parse: Any
make_number: Any
re: module
requests: module
time: module
urllib: module
xml_to_root: Any

_Tnamedtuple-EfetchPackage-accn-xml = TypeVar('_Tnamedtuple-EfetchPackage-accn-xml', bound=`namedtuple-EfetchPackage-accn-xml`)
_Tnamedtuple-EpostResult-dbfrom-dbto-webenv-query_key = TypeVar('_Tnamedtuple-EpostResult-dbfrom-dbto-webenv-query_key', bound=`namedtuple-EpostResult-dbfrom-dbto-webenv-query_key`)
_Tnamedtuple-EpostResult-webenv-query_key = TypeVar('_Tnamedtuple-EpostResult-webenv-query_key', bound=`namedtuple-EpostResult-webenv-query_key`)
_Tnamedtuple-EsearchResult-ids-count-webenv-query_key = TypeVar('_Tnamedtuple-EsearchResult-ids-count-webenv-query_key', bound=`namedtuple-EsearchResult-ids-count-webenv-query_key`)
_Tnamedtuple-EsummaryResult-id-accn-create_date-update_date = TypeVar('_Tnamedtuple-EsummaryResult-id-accn-create_date-update_date', bound=`namedtuple-EsummaryResult-id-accn-create_date-update_date`)

class `namedtuple-EfetchPackage-accn-xml`(tuple):
    __slots__ = ["accn", "xml"]
    __dict__: collections.OrderedDict[str, Any]
    _fields: Tuple[str, str]
    accn: Any
    xml: Any
    def __getnewargs__(self) -> Tuple[Any, Any]: ...
    def __getstate__(self) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __new__(cls: Type[`_Tnamedtuple-EfetchPackage-accn-xml`], accn, xml) -> `_Tnamedtuple-EfetchPackage-accn-xml`: ...
    def _asdict(self) -> collections.OrderedDict[str, Any]: ...
    @classmethod
    def _make(cls: Type[`_Tnamedtuple-EfetchPackage-accn-xml`], iterable: Iterable, new = ..., len: Callable[[Sized], int] = ...) -> `_Tnamedtuple-EfetchPackage-accn-xml`: ...
    def _replace(self: `_Tnamedtuple-EfetchPackage-accn-xml`, **kwds) -> `_Tnamedtuple-EfetchPackage-accn-xml`: ...

class `namedtuple-EpostResult-dbfrom-dbto-webenv-query_key`(tuple):
    __slots__ = ["dbfrom", "dbto", "query_key", "webenv"]
    __dict__: collections.OrderedDict[str, Any]
    _fields: Tuple[str, str, str, str]
    dbfrom: Any
    dbto: Any
    query_key: Any
    webenv: Any
    def __getnewargs__(self) -> Tuple[Any, Any, Any, Any]: ...
    def __getstate__(self) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __new__(cls: Type[`_Tnamedtuple-EpostResult-dbfrom-dbto-webenv-query_key`], dbfrom, dbto, webenv, query_key) -> `_Tnamedtuple-EpostResult-dbfrom-dbto-webenv-query_key`: ...
    def _asdict(self) -> collections.OrderedDict[str, Any]: ...
    @classmethod
    def _make(cls: Type[`_Tnamedtuple-EpostResult-dbfrom-dbto-webenv-query_key`], iterable: Iterable, new = ..., len: Callable[[Sized], int] = ...) -> `_Tnamedtuple-EpostResult-dbfrom-dbto-webenv-query_key`: ...
    def _replace(self: `_Tnamedtuple-EpostResult-dbfrom-dbto-webenv-query_key`, **kwds) -> `_Tnamedtuple-EpostResult-dbfrom-dbto-webenv-query_key`: ...

class `namedtuple-EpostResult-webenv-query_key`(tuple):
    __slots__ = ["query_key", "webenv"]
    __dict__: collections.OrderedDict[str, Any]
    _fields: Tuple[str, str]
    query_key: Any
    webenv: Any
    def __getnewargs__(self) -> Tuple[Any, Any]: ...
    def __getstate__(self) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __new__(cls: Type[`_Tnamedtuple-EpostResult-webenv-query_key`], webenv, query_key) -> `_Tnamedtuple-EpostResult-webenv-query_key`: ...
    def _asdict(self) -> collections.OrderedDict[str, Any]: ...
    @classmethod
    def _make(cls: Type[`_Tnamedtuple-EpostResult-webenv-query_key`], iterable: Iterable, new = ..., len: Callable[[Sized], int] = ...) -> `_Tnamedtuple-EpostResult-webenv-query_key`: ...
    def _replace(self: `_Tnamedtuple-EpostResult-webenv-query_key`, **kwds) -> `_Tnamedtuple-EpostResult-webenv-query_key`: ...

class `namedtuple-EsearchResult-ids-count-webenv-query_key`(tuple):
    __slots__ = ["count", "ids", "query_key", "webenv"]
    __dict__: collections.OrderedDict[str, Any]
    _fields: Tuple[str, str, str, str]
    count: Any
    ids: Any
    query_key: Any
    webenv: Any
    def __getnewargs__(self) -> Tuple[Any, Any, Any, Any]: ...
    def __getstate__(self) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __new__(cls: Type[`_Tnamedtuple-EsearchResult-ids-count-webenv-query_key`], ids, count, webenv, query_key) -> `_Tnamedtuple-EsearchResult-ids-count-webenv-query_key`: ...
    def _asdict(self) -> collections.OrderedDict[str, Any]: ...
    @classmethod
    def _make(cls: Type[`_Tnamedtuple-EsearchResult-ids-count-webenv-query_key`], iterable: Iterable, new = ..., len: Callable[[Sized], int] = ...) -> `_Tnamedtuple-EsearchResult-ids-count-webenv-query_key`: ...
    def _replace(self: `_Tnamedtuple-EsearchResult-ids-count-webenv-query_key`, **kwds) -> `_Tnamedtuple-EsearchResult-ids-count-webenv-query_key`: ...

class `namedtuple-EsummaryResult-id-accn-create_date-update_date`(tuple):
    __slots__ = ["accn", "create_date", "id", "update_date"]
    __dict__: collections.OrderedDict[str, Any]
    _fields: Tuple[str, str, str, str]
    accn: Any
    create_date: Any
    id: Any
    update_date: Any
    def __getnewargs__(self) -> Tuple[Any, Any, Any, Any]: ...
    def __getstate__(self) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __new__(cls: Type[`_Tnamedtuple-EsummaryResult-id-accn-create_date-update_date`], id, accn, create_date, update_date) -> `_Tnamedtuple-EsummaryResult-id-accn-create_date-update_date`: ...
    def _asdict(self) -> collections.OrderedDict[str, Any]: ...
    @classmethod
    def _make(cls: Type[`_Tnamedtuple-EsummaryResult-id-accn-create_date-update_date`], iterable: Iterable, new = ..., len: Callable[[Sized], int] = ...) -> `_Tnamedtuple-EsummaryResult-id-accn-create_date-update_date`: ...
    def _replace(self: `_Tnamedtuple-EsummaryResult-id-accn-create_date-update_date`, **kwds) -> `_Tnamedtuple-EsummaryResult-id-accn-create_date-update_date`: ...

def check_api_key(api_key, url) -> Any: ...
def check_email(email, url) -> Any: ...
def check_query_key(query_key, url) -> Any: ...
def check_retmax(retmax, url) -> Any: ...
def check_retstart(retstart, url) -> Any: ...
def check_userhistory(userhistory, url) -> Any: ...
def check_webenv(webenv, url) -> Any: ...
def efetch(database, ids = ..., webenv = ..., query_key = ..., count = ..., retstart = ..., retmax = ..., rettype = ..., retmode = ..., api_key = ..., email = ..., **kwargs) -> Generator[Any, Any, None]: ...
def elink(db, dbfrom, ids = ..., webenv = ..., query_key = ..., api_key = ..., email = ..., **kwargs) -> Optional[`namedtuple-EpostResult-dbfrom-dbto-webenv-query_key`]: ...
def entrez_sets_of_results(url, retstart = ..., retmax = ..., count = ...) -> Generator[requests.models.Response, Any, None]: ...
def entrez_try_get_multiple_times(url, num_tries = ...) -> requests.models.Response: ...
def entrez_try_put_multiple_times(url, url_params, num_tries = ...) -> Optional[requests.models.Response]: ...
def epost(database, ids, webenv = ..., api_key = ..., email = ..., **kwargs) -> `namedtuple-EpostResult-webenv-query_key`: ...
def esearch(database, query, userhistory = ..., webenv = ..., query_key = ..., retstart = ..., retmax = ..., api_key = ..., email = ..., **kwargs) -> Optional[`namedtuple-EsearchResult-ids-count-webenv-query_key`]: ...
def esummary(database, ids = ..., webenv = ..., query_key = ..., count = ..., retstart = ..., retmax = ..., api_key = ..., email = ..., **kwargs) -> Generator[Any, Any, None]: ...
def namedtuple(typename: str, field_names: Union[str, Iterable[str]], *, verbose: bool = ..., rename: bool = ...) -> type: ...
def parse_epost(xml) -> `namedtuple-EpostResult-webenv-query_key`: ...
def parse_esummary(xml) -> List[`namedtuple-EsummaryResult-id-accn-create_date-update_date`]: ...
