# (generated with --quick)

from typing import Any
import unittest.case

Nonterminal: Any
Span: Any
StaticSymbolFactory: Any
Symbol: Any
SymbolFactory: Any
Terminal: Any
unittest: module

class ComparisonTestCase(unittest.case.TestCase):
    nX1: Any
    nX2: Any
    tX1: Any
    tX2: Any
    def test_type_matters(self) -> None: ...
    def test_underlying_identity(self) -> None: ...

class NonterminalTestCase(unittest.case.TestCase):
    X: Any
    X2: Any
    def test_inheritance(self) -> None: ...
    def test_instance_management(self) -> None: ...
    def test_label(self) -> None: ...
    def test_repr(self) -> None: ...
    def test_str(self) -> None: ...
    def test_underlying(self) -> None: ...
    def test_underlying_type(self) -> None: ...

class SpanTestCase(unittest.case.TestCase):
    X: Any
    X01: Any
    X01b: Any
    def test_base(self) -> None: ...
    def test_construct(self) -> None: ...
    def test_end(self) -> None: ...
    def test_inheritance(self) -> None: ...
    def test_instance_management(self) -> None: ...
    def test_repr(self) -> None: ...
    def test_start(self) -> None: ...
    def test_str(self) -> None: ...
    def test_underlying(self) -> None: ...
    def test_underlying_type(self) -> None: ...

class StaticSymbolFactoryTestCase(unittest.case.TestCase):
    factory: Any
    factory2: Any
    def test_instance_management(self) -> None: ...
    def test_nonterminal(self) -> None: ...
    def test_span(self) -> None: ...
    def test_static(self) -> None: ...
    def test_terminal(self) -> None: ...

class SymbolFactoryTestCase(unittest.case.TestCase):
    factory: Any
    factory2: Any
    def test_instance_management(self) -> None: ...
    def test_nonstatic(self) -> None: ...
    def test_nonterminal(self) -> None: ...
    def test_span(self) -> None: ...
    def test_terminal(self) -> None: ...

class TerminalTestCase(unittest.case.TestCase):
    a: Any
    a2: Any
    def test_inheritance(self) -> None: ...
    def test_instance_management(self) -> None: ...
    def test_repr(self) -> None: ...
    def test_str(self) -> None: ...
    def test_surface(self) -> None: ...
    def test_underlying(self) -> None: ...
    def test_underlying_type(self) -> None: ...
