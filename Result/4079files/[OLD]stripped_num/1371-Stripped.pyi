# (generated with --quick)

import difflib
import pathlib
from typing import Any, Callable, Iterable, List, Optional, Type, TypeVar

Path: Type[pathlib.Path]
_SequenceMatcher: Type[difflib.SequenceMatcher]
unicodedata: module

_T = TypeVar('_T')

def _nlargest(n: int, iterable: Iterable[_T], key: Optional[Callable[[_T], Any]] = ...) -> List[_T]: ...
def case_insensitive_close_matches(word, possibilities, n = ..., cutoff = ..., excpt = ...) -> list: ...
def grid_str(arg, lineprefix = ..., linesuffix = ...) -> Any: ...
def max_len(arg, at_least = ...) -> Any: ...
def strip_accents(s) -> str: ...
def supercasefold(s) -> str: ...
def truncate_path_for_display(p, maxlen = ...) -> str: ...
