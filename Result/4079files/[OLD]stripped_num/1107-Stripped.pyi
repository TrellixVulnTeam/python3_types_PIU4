# (generated with --quick)

import json.decoder
import json.encoder
from typing import Any, Callable, List, NoReturn, Optional, Tuple, Type, Union

HTTPResponse: Any
Mach9: Any
NotFound: Any
Request: Any
json: Any
text: Any

def json_dumps(obj, skipkeys: bool = ..., ensure_ascii: bool = ..., check_circular: bool = ..., allow_nan: bool = ..., cls: Optional[Type[json.encoder.JSONEncoder]] = ..., indent: Optional[Union[int, str]] = ..., separators: Optional[Tuple[str, str]] = ..., default: Optional[Callable[[Any], Any]] = ..., sort_keys: bool = ..., **kwds) -> str: ...
def json_loads(s: Union[bytearray, bytes, str], encoding = ..., cls: Optional[Type[json.decoder.JSONDecoder]] = ..., object_hook: Optional[Callable[[dict], Any]] = ..., parse_float: Optional[Callable[[str], Any]] = ..., parse_int: Optional[Callable[[str], Any]] = ..., parse_constant: Optional[Callable[[str], Any]] = ..., object_pairs_hook: Optional[Callable[[List[Tuple[Any, Any]]], Any]] = ..., **kwds) -> Any: ...
def test_middleware_order() -> None: ...
def test_middleware_override_request() -> None: ...
def test_middleware_override_response() -> None: ...
def test_middleware_request() -> None: ...
def test_middleware_response() -> None: ...
def test_middleware_response_exception() -> NoReturn: ...
