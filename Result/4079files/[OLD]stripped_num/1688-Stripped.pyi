# (generated with --quick)

from typing import Any, Dict, Optional, Tuple

RecordNotFound: Any
ZoneNotFound: Any
argparse: module
requests: module
socket: module
sys: module
urllib: module

class CloudFlare:
    __doc__: str
    api_key: Any
    api_url: str
    dns_records: Any
    domain: Any
    email: Any
    headers: Optional[Dict[str, Any]]
    proxied: Any
    public_ip_finder: Tuple[str, str, str]
    zone: Any
    def __init__(self, email, api_key, domain, proxied) -> None: ...
    def create_or_update_record(self, dns_type, name, content, **kwargs) -> Any: ...
    def create_record(self, dns_type, name, content, **kwargs) -> Any: ...
    def delete_record(self, dns_type, name) -> Any: ...
    def get_record(self, dns_type, name) -> Any: ...
    @staticmethod
    def process_json_for_cloudflare(data_dict) -> str: ...
    def refresh(self) -> None: ...
    def request(self, url, method, data = ...) -> Any: ...
    def setup_zone(self) -> None: ...
    def sync_dns_from_my_ip(self, dns_type = ...) -> None: ...
    def update_record(self, dns_type, name, content, **kwargs) -> Any: ...

def main() -> None: ...
