# (generated with --quick)

from typing import Any

arch_str: Any
argc: int
build: module
build_utils: Any
config: Any
device_str: str
json: module
pika: Any
platform_str: Any
server: BuildRpcServer
shlex: module
sys: module
system_info: Any

class BuildRpcServer(object):
    EXCHANGE: str
    EXCHANGE_TYPE: str
    arch_: Any
    channel_: Any
    closing_: bool
    connection_: Any
    consumer_tag_: Any
    device_: Any
    platform_: Any
    routing_key_: Any
    def __init__(self, device, platform, arch) -> None: ...
    def acknowledge_message(self, delivery_tag) -> None: ...
    def add_on_cancel_callback(self) -> None: ...
    def add_on_channel_close_callback(self) -> None: ...
    def add_on_connection_close_callback(self) -> None: ...
    def build_package(self, op_id, branding_options, package_types, destination, routing_key) -> Any: ...
    def connect(self) -> Any: ...
    def on_bindok(self, unused_frame) -> None: ...
    def on_channel_closed(self, channel, reply_code, reply_text) -> None: ...
    def on_channel_open(self, channel) -> None: ...
    def on_connection_closed(self, connection, reply_code, reply_text) -> None: ...
    def on_connection_open(self, unused_connection) -> None: ...
    def on_consumer_cancelled(self, method_frame) -> None: ...
    def on_exchange_declareok(self, unused_frame) -> None: ...
    def on_queue_declareok(self, method_frame) -> None: ...
    def on_request(self, ch, method, props, body) -> None: ...
    def open_channel(self) -> None: ...
    def reconnect(self) -> None: ...
    def run(self) -> None: ...
    def send_response(self, routing_key, op_id, body) -> None: ...
    def send_status(self, routing_key, op_id, progress, status) -> None: ...
    def setup_exchange(self, exchange_name) -> None: ...
    def setup_queue(self, queue_name) -> None: ...
    def start_consuming(self) -> None: ...

def gen_routing_key(device, platform, arch) -> Any: ...
def print_usage() -> None: ...
