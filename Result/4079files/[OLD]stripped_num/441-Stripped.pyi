# (generated with --quick)

from typing import Any, List, Tuple

IB: Any
asyncio: module
qt: Any
util: Any
window: Window

class TickerTable(Any):
    conId2Row: dict
    headers: List[str]
    def __contains__(self, contract) -> bool: ...
    def __init__(self, parent = ...) -> None: ...
    def addTicker(self, ticker) -> None: ...
    def clearTickers(self) -> None: ...
    def onPendingTickers(self, tickers) -> None: ...

class Window(Any):
    connectButton: Any
    connectInfo: Tuple[Any, Any, Any]
    edit: Any
    ib: Any
    table: TickerTable
    def __init__(self, host, port, clientId) -> None: ...
    def add(self, text = ...) -> None: ...
    def closeEvent(self, ev) -> None: ...
    def onConnectButtonClicked(self, _) -> None: ...

def __getattr__(name) -> Any: ...
