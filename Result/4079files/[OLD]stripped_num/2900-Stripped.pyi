# (generated with --quick)

import numpy
import typing
from typing import Any, Dict, Generator, Iterator, List, Type, Union

Counter: Type[typing.Counter]
itertools: module
np: module
os: module
re: module
word2vec: Any

def batch_iter(data, batch_size, num_epochs) -> Generator[Any, Any, None]: ...
def build_input_data(sentences, labels, vocabulary) -> List[numpy.ndarray]: ...
def build_input_data_with_word2vec(sentences, labels, word2vec_list) -> List[numpy.ndarray]: ...
def build_vocab(sentences) -> List[Union[list, Dict[Any, int]]]: ...
def clean_str(string) -> str: ...
def load_data() -> list: ...
def load_data_and_labels() -> list: ...
def load_data_with_word2vec(word2vec_list) -> List[numpy.ndarray]: ...
def load_google_word2vec(path) -> Any: ...
def load_pretrained_word2vec(infile) -> Dict[Any, Iterator]: ...
def pad_sentences(sentences, padding_word = ...) -> list: ...
