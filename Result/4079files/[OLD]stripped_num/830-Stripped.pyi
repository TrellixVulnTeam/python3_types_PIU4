# (generated with --quick)

import collections
import pathlib
from typing import Any, Callable, Generator, Iterable, Sized, Tuple, Type, TypeVar, Union

AttrInfo = `namedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only`

DEFAULT_REMOTE_DIR: Any
FileInfo: Any
ModeValue: Any
Operation: Any
PurePosixPath: Type[pathlib.PurePosixPath]
RawFileInfo: Any
URL: Any
WifiMode: Any
WifiModeOnBoot: Any
arrow: Any
cgi: Any
logger: logging.Logger
logging: module

_Tnamedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only = TypeVar('_Tnamedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only', bound=`namedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only`)

class `namedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only`(tuple):
    __slots__ = ["archive", "directly", "hidden_file", "read_only", "system_file", "volume"]
    __dict__: collections.OrderedDict[str, Any]
    _fields: Tuple[str, str, str, str, str, str]
    archive: Any
    directly: Any
    hidden_file: Any
    read_only: Any
    system_file: Any
    volume: Any
    def __getnewargs__(self) -> Tuple[Any, Any, Any, Any, Any, Any]: ...
    def __getstate__(self) -> None: ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __new__(cls: Type[`_Tnamedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only`], archive, directly, volume, system_file, hidden_file, read_only) -> `_Tnamedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only`: ...
    def _asdict(self) -> collections.OrderedDict[str, Any]: ...
    @classmethod
    def _make(cls: Type[`_Tnamedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only`], iterable: Iterable, new = ..., len: Callable[[Sized], int] = ...) -> `_Tnamedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only`: ...
    def _replace(self: `_Tnamedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only`, **kwds) -> `_Tnamedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only`: ...

def _decode_attribute(attr_val) -> `namedtuple-AttrInfo-archive-directly-volume-system_file-hidden_file-read_only`: ...
def _decode_time(date_val, time_val) -> Any: ...
def _get(operation, url = ..., **params) -> Any: ...
def _prep_get(operation, url = ..., **params) -> Any: ...
def _split_file_list(text) -> Generator[Any, Any, None]: ...
def _split_file_list_raw(text) -> Generator[Any, Any, None]: ...
def count_files(remote_dir = ..., url = ...) -> int: ...
def get_browser_lang(url = ...) -> Any: ...
def get_ctrl_image(url = ...) -> Any: ...
def get_fw_version(url = ...) -> Any: ...
def get_mac(url = ...) -> Any: ...
def get_password(url = ...) -> Any: ...
def get_ssid(url = ...) -> Any: ...
def get_wifi_mode(url = ...) -> Any: ...
def list_files(*filters, remote_dir = ..., url = ...) -> Generator[Any, Any, None]: ...
def list_files_raw(*filters, remote_dir = ..., url = ...) -> Generator[Any, Any, None]: ...
def map_files(*filters, remote_dir = ..., url = ...) -> dict: ...
def map_files_raw(*filters, remote_dir = ..., url = ...) -> dict: ...
def memory_changed(url = ...) -> bool: ...
def namedtuple(typename: str, field_names: Union[str, Iterable[str]], *, verbose: bool = ..., rename: bool = ...) -> type: ...
