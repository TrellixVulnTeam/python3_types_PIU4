# (generated with --quick)

from typing import Any, Tuple

cv2: Any
numpy: module

class Canvas:
    BOTTOM_INFO_BAR_HEIGHT_MIN: int
    DONE_COUNT_TEXT_ROW: int
    FPS_TEXT_ROW: int
    INFERENCE_LABEL_TEXT_ROW: int
    LOADING_TEXT_ROW: int
    PAUSE_TEXT_ROW: int
    PRESS_ANY_KEY_ROW: int
    TEXT_FONT: Any
    TIMER_TEXT_ROW: int
    TOP_INFO_BAR_HEIGHT_MIN: int
    _bottom_bar_bottom: Any
    _bottom_bar_height: int
    _bottom_bar_left: int
    _bottom_bar_right: Any
    _bottom_bar_top: Any
    _bottom_bar_width: Any
    _canvas_height: Any
    _canvas_image: Any
    _canvas_width: Any
    _done_blue: int
    _done_count: int
    _done_green: int
    _done_red: int
    _draw_lines_large_to_grid: Any
    _gird_undone_image_transparency: float
    _grid_blue: int
    _grid_bottom: Any
    _grid_green: int
    _grid_height: Any
    _grid_image_list: list
    _grid_left: int
    _grid_line_thickness: int
    _grid_max_images: Any
    _grid_max_images_str: str
    _grid_red: int
    _grid_right: Any
    _grid_top: int
    _grid_width: Any
    _image_done_rect_thickness: int
    _image_height: int
    _image_width: int
    _images_across: Any
    _images_down: Any
    _large_image_bottom: int
    _large_image_height: int
    _large_image_left: int
    _large_image_list: list
    _large_image_right: int
    _large_image_top: int
    _large_image_width: int
    _num_bar_top_text_rows: int
    _text_background_color: Tuple[int, int, int]
    _text_bg_height: Any
    _text_color: Tuple[int, int, int]
    _text_height: Any
    _text_scale: float
    _top_bar_bottom: int
    _top_bar_height: int
    _top_bar_left: int
    _top_bar_right: Any
    _top_bar_text_left: int
    _top_bar_text_left_width: int
    _top_bar_text_row_tops: list
    _top_bar_text_top: int
    _top_bar_top: int
    _top_bar_width: Any
    def __init__(self, canvas_width, canvas_height, images_down, images_across) -> None: ...
    def _draw_grid_image(self, image_index, transparency) -> None: ...
    def _draw_grid_lines(self) -> None: ...
    def _draw_large_image(self, image_index, transparency) -> None: ...
    def _draw_undone_images(self) -> None: ...
    def _get_image_square(self, image_index) -> Tuple[Any, int, Any, int]: ...
    def _get_top_bar_left_text_bg_rect(self, text_row) -> Tuple[int, Any, int, Any]: ...
    def _get_top_bar_left_text_leftmost(self) -> int: ...
    def _get_top_bar_right_text_bg_rect(self, text_row) -> Tuple[int, Any, Any, Any]: ...
    def _get_top_bar_right_text_leftmost(self) -> int: ...
    def _put_text_on_canvas(self, text, text_left, text_top, text_min_width) -> None: ...
    def _put_text_top_bar_left(self, text, text_row = ...) -> None: ...
    def _put_text_top_bar_right(self, text, text_row = ...) -> None: ...
    def clear_loading(self) -> None: ...
    def clear_press_any_key(self) -> None: ...
    def clear_top_bar(self) -> None: ...
    def draw_done_count(self) -> None: ...
    def draw_inference_label(self, label_text) -> None: ...
    def get_canvas_image(self) -> Any: ...
    def hide_done_count(self) -> None: ...
    def hide_fps(self) -> None: ...
    def hide_timer(self) -> None: ...
    def load_images(self, image_list) -> None: ...
    def mark_image_done(self, image_index, label_text = ...) -> None: ...
    def pause_start(self) -> None: ...
    def pause_stop(self) -> None: ...
    def press_any_key(self) -> None: ...
    def press_quit_key(self) -> None: ...
    def reset_canvas(self) -> None: ...
    def set_draw_lines(self, val) -> None: ...
    def show_device(self, device) -> None: ...
    def show_fps(self, fps) -> None: ...
    def show_loading(self) -> None: ...
    def show_timer(self, time) -> None: ...
