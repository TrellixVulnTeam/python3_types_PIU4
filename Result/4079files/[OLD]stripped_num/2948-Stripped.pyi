# (generated with --quick)

from typing import Any, Callable, Tuple, TypeVar

access: module
argparse: module
command: module
configuration: Any
deploy: module
infra: module
main_command: Tuple[str, Callable[[Any, Any], Any]]
setup: module
time: module
verify: module

_T0 = TypeVar('_T0')

def add_dry_run_argument(parser, dest) -> None: ...
def iterative_verifier(verifier, max_time, pause = ...) -> Callable[[], Any]: ...
def seq_mux_map(desc: _T0, mapping) -> Tuple[_T0, Callable[[Any, Any], Any]]: ...
def sequence_cluster(ops) -> None: ...
def sequence_keysystem(ops) -> None: ...
def sequence_ssh(ops) -> None: ...
def sequence_supervisor(ops) -> None: ...
def wrapseq(desc: _T0, f) -> Tuple[_T0, Callable[[Any, Any], Any]]: ...
