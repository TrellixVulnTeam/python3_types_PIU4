# (generated with --quick)

import flask.wrappers
from typing import Any, Callable, NoReturn, Optional, Union

const: Any
os: module
pickle: module
random: module
re: module
request: flask.wrappers.Request
session: Any
string: module

def cache_alteration_files() -> None: ...
def cache_analysis_option() -> None: ...
def cache_bct_option() -> None: ...
def cache_cutting_options() -> None: ...
def cache_general_settings() -> None: ...
def cache_hierarchy_option() -> None: ...
def cache_k_mean_option() -> None: ...
def cache_rw_analysis_option() -> None: ...
def cache_scrub_options() -> None: ...
def cache_sim_options() -> None: ...
def cache_top_word_options() -> None: ...
def deep_copy_session() -> dict: ...
def fix() -> None: ...
def init() -> NoReturn: ...
def load() -> None: ...
def reset() -> None: ...
def rmtree(path: Union[bytes, str, _PathLike[str]], ignore_errors: bool = ..., onerror: Optional[Callable[[Any, Any, Any], Any]] = ...) -> None: ...
def save(path) -> None: ...
def session_folder() -> Any: ...
