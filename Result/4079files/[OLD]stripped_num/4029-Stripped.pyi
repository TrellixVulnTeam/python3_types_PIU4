# (generated with --quick)

from typing import Any

equelParser: Any

class equelParserVisitor(Any):
    def visitAggregationExpr(self, ctx) -> Any: ...
    def visitEquel(self, ctx) -> Any: ...
    def visitFilterExpr(self, ctx) -> Any: ...
    def visitFirstSearchExpr(self, ctx) -> Any: ...
    def visitGeneric(self, ctx) -> Any: ...
    def visitKVParam(self, ctx) -> Any: ...
    def visitName(self, ctx) -> Any: ...
    def visitNestedSearch(self, ctx) -> Any: ...
    def visitOutputExpr(self, ctx) -> Any: ...
    def visitPostprocExpr(self, ctx) -> Any: ...
    def visitQueryString(self, ctx) -> Any: ...
    def visitQueryStringExpr(self, ctx) -> Any: ...
    def visitSearchExpr(self, ctx) -> Any: ...
    def visitShortcut(self, ctx) -> Any: ...
    def visitShortcutExpr(self, ctx) -> Any: ...
    def visitSimpleDQValue(self, ctx) -> Any: ...
    def visitSimpleSQValue(self, ctx) -> Any: ...
    def visitSimpleUQValue(self, ctx) -> Any: ...
    def visitSingleParam(self, ctx) -> Any: ...
    def visitUnnamedList(self, ctx) -> Any: ...
    def visitUnnamedValue(self, ctx) -> Any: ...
    def visitValueList(self, ctx) -> Any: ...
    def visitVerb(self, ctx) -> Any: ...

def __getattr__(name) -> Any: ...
