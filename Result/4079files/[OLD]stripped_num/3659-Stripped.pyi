# (generated with --quick)

import __future__
from typing import Any
import unittest.case

absolute_import: __future__._Feature
adapt_args: Any
division: __future__._Feature
mock: module
other_func: Any
print_function: __future__._Feature
pure_interface: Any
some_func: Any
unicode_literals: __future__._Feature
unittest: module

class I1(Any):
    foo: None
    def bar(self) -> None: ...

class I2(Any):
    bar: None
    def foo(self) -> None: ...

class TestAdaptArgsPy2(unittest.case.TestCase):
    def test_adapt_args_works(self) -> None: ...
    def test_adapt_optional_args_works(self) -> None: ...
    def test_adapt_optional_args_works_with_none(self) -> None: ...
    def test_error_raised_if_arg_not_subclass(self) -> None: ...
    def test_no_annotations_warning(self) -> None: ...
    def test_type_error_raised_if_mixed_args(self) -> None: ...
    def test_type_error_raised_if_multiple_positional_args(self) -> None: ...
    def test_type_error_raised_if_positional_arg_not_func(self) -> None: ...
    def test_wrong_args_type_raises(self) -> None: ...

class Thing1(Any, I1):
    foo: str
    def __init__(self) -> None: ...
    def bar(self) -> None: ...

class Thing2(Any, I2):
    bar: str
    def __init__(self) -> None: ...
    def foo(self) -> None: ...
