# (generated with --quick)

import numpy
from typing import Any

np: module
plt: Any

class FPlots:
    @staticmethod
    def Magnitude(x, ylabel, legend = ..., place = ...) -> Any: ...
    @staticmethod
    def Phase(x, ylabel, legend = ..., place = ...) -> Any: ...
    @staticmethod
    def Real(x, ylabel, legend = ..., place = ...) -> Any: ...
    @staticmethod
    def X(x, ylabel, legend = ..., place = ...) -> Any: ...
    @staticmethod
    def plot(func, D, ylabel, legend = ...) -> Any: ...

class Plots:
    @staticmethod
    def plot(x, D = ..., label = ..., title = ..., legend = ..., place = ...) -> Any: ...
    @staticmethod
    def plotRealAndImag(vector, n, title = ..., place = ..., label = ...) -> Any: ...

class Signal:
    def create(func: Signal, D) -> numpy.ndarray: ...
    @staticmethod
    def d(n) -> int: ...
    @staticmethod
    def hermitianTransposed(x) -> Any: ...
    @staticmethod
    def u(n) -> int: ...

class Transforms:
    @staticmethod
    def convolute(x, y, n, D) -> Any: ...

class VectorSignal:
    @staticmethod
    def d(n, n1 = ...) -> Any: ...
    @staticmethod
    def u(n, n1 = ...) -> Any: ...
