# (generated with --quick)

from typing import Any, Generator, List, Tuple

Avg: Any
Battle: Any
BattleCharacter: Any
BattleCharacterInTurn: Any
BattleContubernium: Any
BattleContuberniumInTurn: Any
BattleFormation: Any
BattleOrganization: Any
BattleSide: Any
BattleSoldier: Any
BattleSoldierInTurn: Any
BattleTurn: Any
BattleUnit: Any
BattleUnitInTurn: Any
Coordinates: Any
WorldUnit: Any
initialize_from_conflict: Any
math: module
start_battle: Any
transaction: Any

class BattleAlreadyStartedException(Exception): ...

class Line:
    columns: List[list]
    depth: Any
    width: int
    def __init__(self, depth) -> None: ...
    def push_contubernium(self, contubernium, side) -> None: ...
    def push_contubernium_on_left_side(self, contubernium) -> None: ...
    def push_contubernium_on_right_side(self, contubernium) -> None: ...
    def push_unit(self, unit, side) -> None: ...

class LineFormation:
    battle_side: Any
    far_flanks: List[list]
    flanks: List[list]
    formation_object: Any
    main_lines: list
    def __init__(self, battle_side, formation_object) -> None: ...
    def get_battle_units_by_battle_settings(self, line_index, side_index) -> Any: ...
    def make_formation(self) -> None: ...
    def new_line(self) -> Line: ...
    def output_formation(self) -> Generator[Tuple[Any, nothing], Any, None]: ...

def add_unit_to_battle_in_progress(battle_organization, world_unit) -> None: ...
def create_contubernia(unit) -> None: ...
def generate_in_turn_objects(battle) -> None: ...
def generate_in_turn_objects_for_unit(turn, unit) -> None: ...
def initialize_battle_positioning(battle) -> None: ...
def initialize_side_positioning(side) -> None: ...
def joining_contubernium_position_generator() -> Generator[Any, Any, None]: ...
def set_contubernia_starting_pos(unit) -> None: ...
