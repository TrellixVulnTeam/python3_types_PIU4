# (generated with --quick)

from typing import Any, List

CodeGenArgs: Any
CodeStyleConfig: Any
Format: Any
ParallelPattern: Any
Pattern: Any
SingularPattern: Any
TwoDimensionalPattern: Any
Type: Any
Variable: Any
render: Any

class CppCodeGenerator:
    _config: Any
    _format: Any
    def __init__(self, format_, config) -> None: ...
    def _actual_arguments(self) -> str: ...
    def _convert_type(self, type_) -> str: ...
    def _formal_arguments(self) -> str: ...
    def _generate_declaration(self, var) -> str: ...
    def _get_declaration_type(self, var) -> str: ...
    @staticmethod
    def _get_var_name(var) -> Any: ...
    def _indent(self, depth) -> Any: ...
    def _input_code_for_var(self, var) -> str: ...
    def _input_part(self) -> str: ...
    def _render_pattern(self, pattern) -> List[str]: ...
    def generate_parameters(self) -> dict: ...

class NoPredictionResultGiven(Exception): ...

def _loop_header(var, for_second_index) -> str: ...
def main(args) -> Any: ...
