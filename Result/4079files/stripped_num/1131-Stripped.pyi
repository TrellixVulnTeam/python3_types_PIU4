# (generated with --quick)

from typing import Any, Dict, Iterable, List, Optional, Tuple

Key: Any
Listener: Any
asyncio: module
author: str
commands_activate: List[str]
cozmo: Any
glob: module
json: module
lang: Optional[int]
lang_data: Any
languages: list
log: bool
operator: module
os: module
sr: Any
sys: module
title: str
vc: Any
version: str
voice_commands: Any
wait_for_shift: bool

def checkBattery(robot) -> None: ...
def colored(text: str, color: Optional[str] = ..., on_color: Optional[str] = ..., attrs: Optional[Iterable[str]] = ...) -> str: ...
def cprint(text: str, color: Optional[str] = ..., on_color: Optional[str] = ..., attrs: Optional[Iterable[str]] = ..., **kwargs) -> None: ...
def executeCommands(robot, cmd_funcs, cmd_args) -> None: ...
def extract_commands_from_string(in_string) -> Tuple[List[Dict[str, Any]], list]: ...
def flash_backpack(robot, flag) -> None: ...
def get_command(command_name) -> Tuple[Any, Optional[int]]: ...
def listen(robot) -> None: ...
def load_jsons() -> None: ...
def main() -> None: ...
def parse_arguments() -> None: ...
def printSupportedCommands() -> None: ...
def prompt(id = ...) -> None: ...
def run(robot) -> None: ...
def set_data() -> None: ...
def set_language() -> None: ...
