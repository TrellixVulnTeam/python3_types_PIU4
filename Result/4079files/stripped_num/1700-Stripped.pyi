# (generated with --quick)

import collections
from typing import Any, Dict, Generator, Type

OrderedDict: Type[collections.OrderedDict]
csv: module
json: module
ndarray: Type[numpy.ndarray]
numpy: module
os: module
re: module
time: module
tqdm: Any

def apply_list_replace(input_str, replacements) -> Any: ...
def count_line(encoding, path) -> int: ...
def get_file_iterator(path, *args, **kwargs) -> Generator[str, Any, None]: ...
def get_replacement_dict(path, no_replace) -> Any: ...
def load_dictionary(path, encoding) -> Dict[Any, numpy.ndarray]: ...
def process_file(path_to_file, path_to_dict, path_output_file, separator, file_encoding, dict_encoding, no_replace, path_to_cleaning) -> None: ...
def split_sequence(sequence, separator, *args, **kwargs) -> list: ...
def transcode_str_line(sequence, separator, transcode_dict, replacements) -> Any: ...
def transcode_token(token, transcode_dict) -> Any: ...
