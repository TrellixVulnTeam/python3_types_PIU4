# (generated with --quick)

import __future__
from typing import Any, Dict, Tuple

ADJ: Any
ADP: Any
ADV: Any
AUX: Any
DET: Any
NOUN: Any
NUM: Any
POS: Any
PRON: Any
VERB: Any
unicode_literals: __future__._Feature

class DutchLemmatizer(object):
    exc: Any
    index: Any
    lookup_table: Any
    rules: Any
    univ_pos_name_variants: Dict[Any, str]
    def __call__(self, string, univ_pos, morphology = ...) -> list: ...
    def __init__(self, index = ..., exceptions = ..., rules = ..., lookup = ...) -> None: ...
    def adj(self, string, morphology = ...) -> list: ...
    def adp(self, string, morphology = ...) -> list: ...
    def det(self, string, morphology = ...) -> list: ...
    @classmethod
    def load(cls, path, index = ..., exc = ..., rules = ..., lookup = ...) -> Any: ...
    def lookup(self, string) -> Any: ...
    def noun(self, string, morphology = ...) -> list: ...
    def pron(self, string, morphology = ...) -> list: ...
    def punct(self, string, morphology = ...) -> list: ...
    def verb(self, string, morphology = ...) -> list: ...

def lemmatize(string, index, exceptions, rules) -> Tuple[list, bool]: ...
