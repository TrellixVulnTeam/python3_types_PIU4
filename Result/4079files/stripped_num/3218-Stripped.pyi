# (generated with --quick)

from typing import Any, List, NoReturn
import unittest.case

_BIG_LINENO_FORMAT: str
captured_stdout: Any
code_info_code_info: str
code_info_compound_stmt_str: str
code_info_expr_str: str
code_info_simple_stmt_str: str
code_info_tricky: str
code_info_tricky_nested_f: str
compound_stmt_str: str
difflib: module
dis: Any
dis_bug1333982: str
dis_bug708901: str
dis_c_instance_method: str
dis_c_instance_method_bytes: str
dis_compound_stmt_str: str
dis_expr_str: str
dis_f: str
dis_f_co_code: str
dis_module_expected_results: str
dis_simple_stmt_str: str
expr_str: str
io: module
re: module
run_unittest: Any
simple_stmt_str: str
sys: module
unittest: module

class CodeInfoTests(unittest.case.TestCase):
    maxDiff: int
    test_pairs: List[nothing]
    def test_code_info(self) -> None: ...
    def test_code_info_object(self) -> None: ...
    def test_pretty_flags_no_flags(self) -> None: ...
    def test_show_code(self) -> None: ...

class DisTests(unittest.case.TestCase):
    def do_disassembly_test(self, func, expected) -> None: ...
    def get_disassemble_as_string(self, func, lasti = ...) -> str: ...
    def get_disassembly(self, func, lasti = ..., wrapper = ...) -> List[str]: ...
    def test_big_linenos(self) -> None: ...
    def test_boundaries(self) -> None: ...
    def test_bug_1333982(self) -> None: ...
    def test_bug_708901(self) -> None: ...
    def test_dis(self) -> None: ...
    def test_dis_none(self) -> None: ...
    def test_dis_object(self) -> None: ...
    def test_dis_traceback(self) -> None: ...
    def test_disassemble_bytes(self) -> None: ...
    def test_disassemble_method(self) -> None: ...
    def test_disassemble_method_bytes(self) -> None: ...
    def test_disassemble_str(self) -> None: ...
    def test_opmap(self) -> None: ...
    def test_opname(self) -> None: ...

class _C:
    x: Any
    def __init__(self, x) -> None: ...

def _f(a) -> int: ...
def bug1333982(x = ...) -> NoReturn: ...
def bug708901() -> None: ...
def test_main() -> None: ...
