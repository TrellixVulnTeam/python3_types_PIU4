# (generated with --quick)

from typing import Any
import unittest.case

FuncsDB: Any
NUM_HASHES: int
fdb: Any
fdb_mem: Any
os: module
pytest: Any
random: module
sign: Any
sqlite3: module
string: module
strong_hash: Any
unittest: module

class DebugFuncsDB(Any):
    def count(self) -> Any: ...

class TestGetSimilars(unittest.case.TestCase):
    fdb_mem: DebugFuncsDB
    func_name_len: int
    func_size: int
    num_funcs: int
    special_func_comment: str
    special_func_data: bytes
    special_func_name: str
    def test_match_like_special_func(self) -> None: ...
    def test_match_random_func(self) -> None: ...
    def test_match_special_func(self) -> None: ...

def change_random_byte(bs) -> Any: ...
def num_matches(s1, s2) -> int: ...
def rand_ascii_lowercase(n) -> str: ...
def rand_bytes(n) -> bytes: ...
def test_add_function(fdb_mem) -> None: ...
def test_funcs_db_basic(fdb_mem) -> None: ...
def test_get_similars_basic(fdb_mem) -> None: ...
def test_get_similars_few_similars(fdb_mem) -> None: ...
def test_num_matches() -> None: ...
def test_random_seed(fdb_mem) -> None: ...
