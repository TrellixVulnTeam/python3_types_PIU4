# (generated with --quick)

import collections
import requests.sessions
from typing import Any, List, Tuple

BASE_URL: AbsoluteUrl
BOOK_URL: AbsoluteUrl
BeautifulSoup: Any
SIGNIN_URL: AbsoluteUrl
STANDARD_FIELDNAMES: List[str]
argparse: module
backoff: Any
csv: module
datetime: module
dateutil: module
get_with_retry: Any
requests: module
urllib: module

class AbsoluteUrl(str):
    def __init__(self, val: str) -> None: ...

class EnhanceExportException(Exception):
    message: Any
    def __init__(self, message) -> None: ...

class IsoDateStr(str):
    def __init__(self, val: str) -> None: ...

class Path(str):
    def __init__(self, val: str) -> None: ...

class RelativeUrl(str):
    def __init__(self, val: str) -> None: ...

def enhance_export(options) -> None: ...
def get_genres(soup) -> List[Tuple[list, int]]: ...
def get_read_dates(soup) -> List[Tuple[None, datetime.datetime]]: ...
def main() -> None: ...
def make_book_url(book_id) -> AbsoluteUrl: ...
def make_review_url(review_link) -> AbsoluteUrl: ...
def parse_csv(filename) -> List[collections.OrderedDict[str, str]]: ...
def sign_in(email, password) -> requests.sessions.Session: ...
def write_csv(data, fieldnames, filename) -> None: ...
