# (generated with --quick)

import numpy
from typing import Any, Tuple

GPflowTestCase: Any
assert_allclose: Any
gpflow: Any
np: module
pytest: Any
settings: Any
test_moments: Any
tf: Any

class FlatModel(Any):
    x: Any
    def _build_likelihood(self) -> numpy.ndarray: ...

class TestPriorMode(Any):
    __doc__: str
    def prepare(self, autobuild = ...) -> FlatModel: ...
    def testBetaMode(self) -> None: ...
    def testExponential(self) -> None: ...
    def testGammaMode(self) -> None: ...
    def testGaussianMode(self) -> None: ...
    def testGaussianModeMatrix(self) -> None: ...
    def testLaplaceMode(self) -> None: ...
    def testLogNormalMode(self) -> None: ...
    def testUniform(self) -> None: ...

def beta_moments(prior) -> Tuple[Any, Any]: ...
def exponential_moments(prior) -> Tuple[Any, Any]: ...
def gamma_moments(prior) -> Tuple[Any, Any]: ...
def gaussian_moments(prior) -> Tuple[Any, Any]: ...
def laplace_moments(prior) -> Tuple[Any, Any]: ...
def lognormal_moments(prior) -> Tuple[Any, Any]: ...
def mc_moments(prior, size = ...) -> Tuple[Any, Any]: ...
def uniform_moments(prior) -> Tuple[Any, Any]: ...
