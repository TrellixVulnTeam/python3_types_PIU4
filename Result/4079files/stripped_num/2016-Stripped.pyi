# (generated with --quick)

import decimal
from typing import Any, List, Type, TypeVar

BestEffortRequestFailed: Any
COIN: Any
Decimal: Type[decimal.Decimal]
TYPE_ADDRESS: Any
TxBroadcastError: Any
TxOutput: Any
Wallet: Any
WalletStorage: Any
datetime: module
format_satoshis: Any
getpass: module
is_address: Any
set_verbosity: Any

_T0 = TypeVar('_T0')

class ElectrumGui:
    commands: List[str]
    config: Any
    contacts: Any
    done: int
    last_balance: Any
    maxpos: int
    network: Any
    num_commands: int
    str_amount: str
    str_description: str
    str_fee: str
    str_recipient: str
    wallet: Any
    def __init__(self, config, daemon, plugins) -> None: ...
    def do_send(self) -> None: ...
    def enter_order(self) -> None: ...
    def get_balance(self) -> str: ...
    def main(self) -> Any: ...
    def main_command(self) -> None: ...
    def network_dialog(self) -> bool: ...
    def on_network(self, event, *args) -> None: ...
    def password_dialog(self) -> str: ...
    def print_addresses(self) -> None: ...
    def print_balance(self) -> None: ...
    def print_banner(self) -> None: ...
    def print_commands(self) -> None: ...
    def print_contacts(self) -> None: ...
    def print_history(self) -> None: ...
    def print_list(self, lst, firstline) -> None: ...
    def print_order(self) -> None: ...
    def run_contacts_tab(self, c) -> None: ...
    def run_receive_tab(self, c) -> None: ...
    def send_order(self) -> None: ...
    def settings_dialog(self) -> bool: ...
    def updated(self) -> bool: ...

def _(x: _T0) -> _T0: ...
