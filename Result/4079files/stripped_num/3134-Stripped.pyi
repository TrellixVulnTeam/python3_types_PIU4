# (generated with --quick)

from typing import Any, Callable, Type
import unittest.case
import unittest.mock

Kobin: Any
Response: Any
TestCase: Type[unittest.case.TestCase]
_get_exception_message: Any
load_config: Any
load_config_from_module: Any
load_config_from_pyfile: Any
load_jinja2_env: Any
os: module
patch: unittest.mock._patcher
template_router_reverse: Any

class ConfigTests(unittest.case.TestCase):
    base_path: str
    test_lazy_reverse_router: Any
    test_lazy_reverse_router_not_found: Any
    def test_config_has_not_lower_case_variable(self) -> None: ...
    def test_constructor(self) -> None: ...
    def test_failure_for_loading_config(self) -> None: ...
    def test_load_from_module(self) -> None: ...
    def test_load_from_pyfile(self) -> None: ...
    def test_load_jinja2_env_with_filters(self) -> None: ...
    def test_load_jinja2_env_with_globals(self) -> None: ...

class HandleUnexpectedExceptionTests(unittest.case.TestCase):
    def test_get_exception_message_when_debugging(self) -> None: ...
    def test_get_exception_message_when_not_debugging(self) -> None: ...

class KobinAfterHookTests(unittest.case.TestCase):
    app: Any
    before_counter: int
    dummy_start_response: Callable[[Any, Any], Any]
    def test_after_request(self) -> None: ...

class KobinFrozenTests(unittest.case.TestCase):
    app: Any
    before_counter: int
    def test_can_change_state_before_running(self) -> None: ...

class KobinHookTests(unittest.case.TestCase):
    app: Any
    before_counter: int
    dummy_start_response: Callable[[Any, Any], Any]
    def test_after_request(self) -> None: ...
    def test_before_request(self) -> None: ...

class KobinTests(unittest.case.TestCase):
    app: Any
    dummy_start_response: Callable[[Any, Any], Any]
    def test_404_not_found(self) -> None: ...
    def test_404_when_cast_error(self) -> None: ...
    def test_handled_body_message_when_404_not_found(self) -> None: ...
    def test_response_body_when_500_raised_and_disable_debugging(self) -> None: ...
    def test_response_body_when_500_raised_and_enable_debugging(self) -> None: ...
    def test_response_status_when_500_raised(self) -> None: ...
    def test_route(self) -> None: ...
    def test_typed_url_var(self) -> None: ...
    def test_wsgi(self) -> None: ...
