# (generated with --quick)

from typing import Any, List, Optional, Type
import unittest.case

ChildMonitor: Any
ConsoleMonitor: Any
Monitor: Any
TestCase: Type[unittest.case.TestCase]
fetch_std_streams: Any

class ChildMonitorTest(unittest.case.TestCase):
    def test_cancel(self) -> None: ...
    def test_child_monitor(self) -> None: ...
    def test_no_label(self) -> None: ...

class ConsoleMonitorTest(unittest.case.TestCase):
    def test_cancel(self) -> None: ...
    def test_child_monitor(self) -> None: ...
    def test_console_monitor_with_progress_bar(self) -> None: ...
    def test_console_monitor_wo_progress_bar(self) -> None: ...
    def test_label_required(self) -> None: ...

class NullMonitorTest(unittest.case.TestCase):
    def test_NONE(self) -> None: ...
    def test_cancel(self) -> None: ...
    def test_child_monitor(self) -> None: ...

class RecordingMonitor(Any):
    __doc__: str
    _cancelled: Optional[bool]
    _label: Any
    _records: List[tuple]
    _total_work: Any
    _worked: Any
    records: Any
    def __init__(self) -> None: ...
    def __str__(self) -> str: ...
    def cancel(self) -> None: ...
    def done(self) -> None: ...
    def is_cancelled(self) -> Any: ...
    def progress(self, work = ..., msg = ...) -> None: ...
    def start(self, label, total_work = ...) -> None: ...

class RecordingMonitorTest(unittest.case.TestCase):
    def test_context_manager(self) -> None: ...
    def test_recording_monitor(self) -> None: ...
