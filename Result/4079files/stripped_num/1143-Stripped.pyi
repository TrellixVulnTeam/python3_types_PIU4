# (generated with --quick)

import queue
from typing import Any, Type

Async: Any
Breakpoint: Any
EVENT_BREAKPOINT: Any
EVENT_RUNNING: Any
EVENT_STOPPED: Any
GdbDebugger: Any
Queue: Type[queue.Queue]
Target: Any
log: logging.Logger
logging: module

class NullTarget(Any):
    def __init__(self, system, verbose = ...) -> None: ...
    def cont(self) -> None: ...
    def get_register(self, reg) -> None: ...
    def init(self) -> None: ...
    def read_typed_memory(self, address, size) -> None: ...
    def set_breakpoint(self, address, **properties) -> None: ...
    def set_register(self, reg, val) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def write_typed_memory(self, address, size, data) -> None: ...

def init_null_target(system) -> None: ...
