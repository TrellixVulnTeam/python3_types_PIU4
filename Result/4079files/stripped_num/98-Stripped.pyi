# (generated with --quick)

from typing import Any, Tuple, Type

CustomClient: Any
Error: Any
MQTTMessage: Any
MQTTMessageInfo: Any
MQTT_ERR_SUCCESS: Any
MqttSettings: Any
MqttTransport: Any
datetime: Type[datetime.datetime]
fake_client: Any
pytest: Any

class EchoingFakeClient(NoTlsCustomClient):
    PREFIX: str
    subscribed: list
    unsubscribed: list
    def __init__(self, settings) -> None: ...
    def __str__(self) -> str: ...
    def connect(self, host = ..., port = ..., keepalive = ..., bind_address = ...) -> Tuple[Any, int]: ...
    def publish(self, topic, payload = ..., qos = ..., retain = ...) -> Any: ...
    def react_to_msg(self, payload) -> None: ...
    def reconnect(self) -> Any: ...
    def subscribe(self, topic, qos = ...) -> Tuple[Any, int]: ...
    def unsubscribe(self, topic) -> Any: ...

class NoTlsCustomClient(Any):
    def _configure_tls(self) -> None: ...

class TestCustomClient:
    def test_get_conf_file(self) -> None: ...
    def test_get_conf_file_raises(self) -> None: ...

class TestMqttSettings:
    def test_configured(self) -> None: ...

class TestMqttTransport:
    def test_communicate(self, fake_client) -> None: ...
    def test_details(self, fake_client) -> None: ...
    def test_lazy_communicate(self, fake_client) -> None: ...
    def test_multiline_communicate(self, fake_client) -> None: ...
    def test_stop(self, fake_client) -> None: ...
