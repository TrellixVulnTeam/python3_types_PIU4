# (generated with --quick)

from typing import Any, List, Tuple, TypeVar, Union

find_packages: Any
io: module
re: module
setup: Any

AnyStr = TypeVar('AnyStr', str, bytes)

def basename(path: Union[_PathLike[AnyStr], AnyStr]) -> AnyStr: ...
def dirname(path: Union[_PathLike[AnyStr], AnyStr]) -> AnyStr: ...
def glob(pathname: AnyStr, *, recursive: bool = ...) -> List[AnyStr]: ...
@overload
def join(path: Union[bytes, _PathLike[bytes]], *paths: Union[bytes, _PathLike[bytes]]) -> bytes: ...
@overload
def join(path: Union[str, _PathLike[str]], *paths: Union[str, _PathLike[str]]) -> str: ...
def read(*names, **kwargs) -> Union[bytes, str]: ...
def splitext(path: Union[_PathLike[AnyStr], AnyStr]) -> Tuple[AnyStr, AnyStr]: ...
