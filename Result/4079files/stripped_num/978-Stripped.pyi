# (generated with --quick)

import requests.sessions
from typing import Any, Optional, TypeVar

json: module
requests: module
time: module

AnyStr = TypeVar('AnyStr', str, bytes)

class PyURLAbuse(object):
    is_up: Any
    session: requests.sessions.Session
    url: Any
    def __init__(self, url = ...) -> None: ...
    def _async(self, path, query) -> str: ...
    def _update_cache(self, cached) -> None: ...
    def bgpr(self, q) -> str: ...
    def get_cache(self, q, digest = ...) -> Any: ...
    def get_result(self, job_id) -> Any: ...
    def googlesafebrowsing(self, q) -> str: ...
    def lookyloo(self, q) -> str: ...
    def pdnscircl(self, q) -> str: ...
    def phishtank(self, q) -> str: ...
    def resolve(self, q) -> str: ...
    def run_query(self, q, with_digest = ...) -> Any: ...
    def sslcircl(self, q) -> str: ...
    def start(self, q) -> str: ...
    def ticket(self, q) -> str: ...
    def urlquery(self, q) -> str: ...
    def urls(self, q) -> str: ...
    def virustotal(self, q) -> str: ...
    def whoismail(self, q) -> str: ...

def urljoin(base: AnyStr, url: Optional[AnyStr], allow_fragments: bool = ...) -> AnyStr: ...
