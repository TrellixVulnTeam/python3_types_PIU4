# (generated with --quick)

import named_object_list
from typing import Any, Type
import unittest.case

NamedObjectList: Type[named_object_list.NamedObjectList]
unittest: module

class File:
    __doc__: str
    name: Any
    def __init__(self, name) -> None: ...
    def __repr__(self) -> Any: ...

class NamedObjectListTests(unittest.case.TestCase):
    __doc__: str
    file_a: File
    file_b: File
    file_c: File
    files: named_object_list.NamedObjectList
    def test_delitem_by_int_raises_index_error_when_no_such_object_exist(self) -> None: ...
    def test_delitem_by_int_returns_correct_object_when_object_exists(self) -> None: ...
    def test_delitem_by_name_raises_index_error_when_no_such_object_exist(self) -> None: ...
    def test_delitem_by_name_returns_correct_object_when_object_exists(self) -> None: ...
    def test_getitem_by_int_raises_index_error_when_no_such_object_exist(self) -> None: ...
    def test_getitem_by_int_returns_correct_object_when_object_exists(self) -> None: ...
    def test_getitem_by_name_raises_index_error_when_no_such_object_exist(self) -> None: ...
    def test_getitem_by_name_returns_correct_object_when_object_exists(self) -> None: ...
    def test_setitem_by_int_raises_index_error_when_no_such_object_exist(self) -> None: ...
    def test_setitem_by_int_returns_correct_object_when_object_exists(self) -> None: ...
    def test_setitem_by_name_raises_index_error_when_no_such_object_exist(self) -> None: ...
    def test_setitem_by_name_returns_correct_object_when_object_exists(self) -> None: ...
