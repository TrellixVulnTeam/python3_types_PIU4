# (generated with --quick)

import numpy
from typing import Any, List, TextIO, Tuple

A_gt: Any
A_gt_thr: Any
Activation: Any
C_gt: Any
Client: Any
Conv2D: Any
Dense: Any
Dropout: Any
Flatten: Any
ImageDataGenerator: Any
K: Any
Lambda: Any
MaxPooling2D: Any
Model: Any
MotionCorrect: Any
REGENERATE: bool
Sequential: Any
T: Any
TiffFile: Any
Y: Any
Yr: Any
YrA_gt: Any
all_dubious_crops: List[nothing]
all_heatmaps: list
all_masks_gt: Any
all_neg_crops: List[nothing]
all_pos_crops: List[nothing]
base_name: Any
border_size: int
cm: Any
cms_total: Any
cnmf: Any
comparison: Any
copy: module
count: int
count_start: int
cv2: Any
cw: Any
d1: Any
d2: Any
dims: numpy.ndarray
download_demo: Any
estimate_components_quality: Any
evaluate_components: Any
extract_binary_masks_blob: Any
f_gt: Any
fname_new: Any
full_fov: bool
gSig: List[int]
glob: module
gt_file: str
half_crop: Any
heatmodel: Any
idx_excluded: Any
idx_included: numpy.ndarray
image_no_neurons: numpy.ndarray
image_orig: Any
images: Any
img_avg: Any
json_file: TextIO
json_path: str
keras: Any
labels_gt: Any
ld: Any
loaded_model: Any
loaded_model_json: str
m_orig: numpy.ndarray
m_res: Any
maxT: int
mean_proj: Any
merge: Any
min_mov: Any
mnist: Any
model_from_json: Any
model_path: str
montage2d: Any
motion_correction_piecewise: Any
normalize_median_std: bool
np: module
num_sampl: int
opt: Any
os: module
patch_size: int
pl: Any
plot_contours: Any
plt: Any
predictions: Any
psutil: Any
scipy: Any
simplejson: module
std_mov: Any
sys: module
tf: Any
tile_and_correct: Any
time: module
train_test_split: Any
view_patches_bar: Any

def get_conv(input_shape = ..., filename = ...) -> Any: ...
def locate(data, plot = ..., rectangle = ..., total_pooling = ..., prob = ...) -> Tuple[Any, Any]: ...
