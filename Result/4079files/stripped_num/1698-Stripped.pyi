# (generated with --quick)

import pymysql.connections
import pymysql.cursors
from typing import Any, Dict, Optional, Tuple, Union

__version__: str
err: Any
info: Any
ms: MySQLBase
mydecrypt: Any
pymysql: module
sys: module
warning: Any

class MySQLBase(object):
    cs: pymysql.cursors.Cursor
    db: pymysql.connections.Connection
    version: Any
    def __init__(self, acc, pw, database, host = ..., charset = ...) -> None: ...
    def _version(self) -> Any: ...
    def add_column(self, tab, col, col_type, *args) -> int: ...
    def add_index(self, tab) -> int: ...
    def add_primary_key(self, tab_name, idx_name) -> int: ...
    def change_column(self, tabName, old_name, new_name, new_type) -> int: ...
    def create_database(self, dbName) -> int: ...
    def create_table(self, tabName, content) -> int: ...
    def drop_column(self, tabName, fieldName) -> int: ...
    def drop_database(self, dbName) -> int: ...
    def drop_index(self, tab_name, idx_name) -> int: ...
    def drop_table(self, table_name) -> Optional[int]: ...
    def insert_all_values(self, tabName, content) -> int: ...
    def insert_value(self, tabName, field, content) -> int: ...
    def remove_data(self, table_name, condition) -> int: ...
    def select_one(self, tabName, field, condition) -> Optional[Union[tuple, Dict[str, Any]]]: ...
    def select_values(self, tabName, field, *args) -> Optional[Tuple[Union[tuple, Dict[str, Any]], ...]]: ...
    def show_databases(self) -> Optional[Tuple[Union[tuple, Dict[str, Any]], ...]]: ...
    def show_tables(self) -> Optional[Tuple[Union[tuple, Dict[str, Any]], ...]]: ...
    def table_exists(self, table_name) -> Optional[Union[tuple, Dict[str, Any]]]: ...
    def update_table(self, tabName, content, condition) -> int: ...
